{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/social/SocialConnections.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Avatar, Box, Button, Card, CardHeader, Divider, Grid, IconButton, Input, Link, Paper, Typography } from '@material-ui/core';\nimport { socialApi } from '../../../__fakeApi__/socialApi';\nimport useMounted from '../../../hooks/useMounted';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\nimport SearchIcon from '../../../icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst connectStatusMap = {\n  connected: 'Connected',\n  not_connected: 'Connect',\n  pending: 'Pending'\n};\n\nconst SocialConnections = props => {\n  _s();\n\n  const mounted = useMounted();\n  const [connections, setConnections] = useState([]);\n  const [search, setSearch] = useState('');\n  const getConnections = useCallback(async () => {\n    const data = await socialApi.getConnections();\n\n    if (mounted.current) {\n      setConnections(data);\n    }\n  }, [mounted]);\n  useEffect(() => {\n    getConnections();\n  }, [getConnections]);\n\n  const handleConnectToggle = connectionId => {\n    setConnections(prevConnections => prevConnections.map(connection => {\n      if (connection.id === connectionId) {\n        const updatedConnection = { ...connection\n        };\n        updatedConnection.status = connection.status === 'connected' || connection.status === 'pending' ? 'not_connected' : 'pending';\n\n        if (updatedConnection.status === 'pending') {\n          toast.success('Request sent!');\n        }\n\n        return updatedConnection;\n      }\n\n      return connection;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Connections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        px: 3,\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          disableUnderline: true,\n          onChange: event => setSearch(event.target.value),\n          placeholder: \"Search connections\",\n          value: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: connections.filter(connection => connection.name.toLowerCase().includes(search)).map(connection => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              height: '100%'\n            },\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                alignItems: 'center',\n                display: 'flex',\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                component: RouterLink,\n                src: connection.avatar,\n                sx: {\n                  height: 60,\n                  width: 60\n                },\n                to: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1,\n                  mx: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  color: \"textPrimary\",\n                  component: RouterLink,\n                  to: \"#\",\n                  variant: \"h5\",\n                  children: connection.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  variant: \"body2\",\n                  children: [connection.commonConnections, ' ', \"connections in common\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this), connection.status !== 'rejected' && /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: () => handleConnectToggle(connection.id),\n                  size: \"small\",\n                  variant: \"outlined\",\n                  children: connectStatusMap[connection.status]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(DotsHorizontalIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, connection.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SocialConnections, \"wuhOMykLXWE/LiG95mSAaEW+kRU=\", false, function () {\n  return [useMounted];\n});\n\n_c = SocialConnections;\nexport default SocialConnections;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocialConnections\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/social/SocialConnections.js"],"names":["useState","useEffect","useCallback","Link","RouterLink","toast","Avatar","Box","Button","Card","CardHeader","Divider","Grid","IconButton","Input","Paper","Typography","socialApi","useMounted","DotsHorizontalIcon","SearchIcon","connectStatusMap","connected","not_connected","pending","SocialConnections","props","mounted","connections","setConnections","search","setSearch","getConnections","data","current","handleConnectToggle","connectionId","prevConnections","map","connection","id","updatedConnection","status","success","alignItems","display","px","py","ml","event","target","value","p","filter","name","toLowerCase","includes","height","avatar","width","flexGrow","mx","commonConnections"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  IconButton,\n  Input,\n  Link,\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport { socialApi } from '../../../__fakeApi__/socialApi';\nimport useMounted from '../../../hooks/useMounted';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\nimport SearchIcon from '../../../icons/Search';\n\nconst connectStatusMap = {\n  connected: 'Connected',\n  not_connected: 'Connect',\n  pending: 'Pending'\n};\n\nconst SocialConnections = (props) => {\n  const mounted = useMounted();\n  const [connections, setConnections] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const getConnections = useCallback(async () => {\n    const data = await socialApi.getConnections();\n\n    if (mounted.current) {\n      setConnections(data);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getConnections();\n  }, [getConnections]);\n\n  const handleConnectToggle = (connectionId) => {\n    setConnections((prevConnections) => prevConnections.map((connection) => {\n      if (connection.id === connectionId) {\n        const updatedConnection = { ...connection };\n\n        updatedConnection.status = (connection.status === 'connected' || connection.status === 'pending'\n          ? 'not_connected'\n          : 'pending');\n\n        if (updatedConnection.status === 'pending') {\n          toast.success('Request sent!');\n        }\n\n        return updatedConnection;\n      }\n\n      return connection;\n    }));\n  };\n\n  return (\n    <Card {...props}>\n      <CardHeader title=\"Connections\" />\n      <Divider />\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          px: 3,\n          py: 2\n        }}\n      >\n        <SearchIcon fontSize=\"small\" />\n        <Box sx={{ ml: 2 }}>\n          <Input\n            disableUnderline\n            onChange={(event) => setSearch(event.target.value)}\n            placeholder=\"Search connections\"\n            value={search}\n          />\n        </Box>\n      </Box>\n      <Divider />\n      <Box sx={{ p: 3 }}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {connections\n            .filter((connection) => connection.name.toLowerCase().includes(search))\n            .map((connection) => (\n              <Grid\n                item\n                key={connection.id}\n                md={6}\n                xs={12}\n              >\n                <Paper\n                  sx={{ height: '100%' }}\n                  variant=\"outlined\"\n                >\n                  <Box\n                    sx={{\n                      alignItems: 'center',\n                      display: 'flex',\n                      p: 2\n                    }}\n                  >\n                    <Avatar\n                      component={RouterLink}\n                      src={connection.avatar}\n                      sx={{\n                        height: 60,\n                        width: 60\n                      }}\n                      to=\"#\"\n                    />\n                    <Box\n                      sx={{\n                        flexGrow: 1,\n                        mx: 2\n                      }}\n                    >\n                      <Link\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                        variant=\"h5\"\n                      >\n                        {connection.name}\n                      </Link>\n                      <Typography\n                        color=\"textSecondary\"\n                        gutterBottom\n                        variant=\"body2\"\n                      >\n                        {connection.commonConnections}\n                        {' '}\n                        connections in common\n                      </Typography>\n                      {connection.status !== 'rejected' && (\n                        <Button\n                          color=\"primary\"\n                          onClick={() => handleConnectToggle(connection.id)}\n                          size=\"small\"\n                          variant=\"outlined\"\n                        >\n                          {connectStatusMap[connection.status]}\n                        </Button>\n                      )}\n                    </Box>\n                    <IconButton>\n                      <DotsHorizontalIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Box>\n                </Paper>\n              </Grid>\n            ))}\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nexport default SocialConnections;\n"]},"metadata":{},"sourceType":"module"}