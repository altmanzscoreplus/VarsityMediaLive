{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/widgets/charts/Chart5.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport Chart from 'react-apexcharts';\nimport { Box, Button, Card, CardHeader, Container, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMounted from '../../../hooks/useMounted';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst Chart5 = () => {\n  _s();\n\n  const mounted = useMounted();\n  const theme = useTheme();\n  const [data, setData] = useState([163, 166, 161, 159, 99, 163, 173, 166, 167, 183, 176, 172]);\n  const getData = useCallback(() => {\n    if (mounted.current) {\n      setData(prevData => {\n        const newData = [...prevData];\n        newData.shift();\n        newData.push(0);\n        return newData;\n      });\n    }\n\n    setTimeout(() => {\n      if (mounted.current) {\n        setData(prevData => {\n          const newData = [...prevData];\n          const random = getRandomInt(100, 200);\n          newData.pop();\n          newData.push(random);\n          return newData;\n        });\n      }\n    }, 500);\n  }, [mounted]);\n  useEffect(() => {\n    setInterval(() => getData(), 2000);\n  }, [getData]);\n  const labels = data.map((value, i) => i);\n  const pages = [{\n    pathname: '/projects',\n    views: '24'\n  }, {\n    pathname: '/chat',\n    views: '21'\n  }, {\n    pathname: '/cart',\n    views: '15'\n  }, {\n    pathname: '/checkout',\n    views: '8'\n  }];\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#688dff'],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      show: false\n    },\n    legend: {\n      show: false\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '40'\n      }\n    },\n    states: {\n      active: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    stroke: {\n      colors: ['transparent'],\n      show: true,\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      categories: labels,\n      labels: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    }\n  };\n  const chartSeries = [{\n    data\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: 'background.default',\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          disableTypography: true,\n          title: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"h6\",\n                children: \"Active users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: \"Page views per second\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              variant: \"h6\",\n              children: data[data.length - 1] === 0 ? data[data.length - 2] : data[data.length - 1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          height: \"200\",\n          options: chartOptions,\n          series: chartSeries,\n          type: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: pages.map(page => /*#__PURE__*/_jsxDEV(ListItem, {\n            divider: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: page.pathname,\n              primaryTypographyProps: {\n                color: 'textSecondary',\n                variant: 'body2'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              variant: \"subtitle2\",\n              children: page.views\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, page.pathname, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 24\n            }, this),\n            size: \"small\",\n            variant: \"text\",\n            children: \"See All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart5, \"/IALGBgwcaIBZOyZtNhdBSNKzS0=\", false, function () {\n  return [useMounted, useTheme];\n});\n\n_c = Chart5;\nexport default Chart5;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart5\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/widgets/charts/Chart5.js"],"names":["useState","useEffect","useCallback","Chart","Box","Button","Card","CardHeader","Container","List","ListItem","ListItemText","Typography","useTheme","useMounted","ArrowRightIcon","getRandomInt","min","max","Math","ceil","floor","random","Chart5","mounted","theme","data","setData","getData","current","prevData","newData","shift","push","setTimeout","pop","setInterval","labels","map","value","i","pages","pathname","views","chartOptions","chart","background","stacked","toolbar","show","colors","dataLabels","enabled","grid","legend","plotOptions","bar","columnWidth","states","active","filter","type","hover","stroke","width","mode","palette","xaxis","axisBorder","axisTicks","categories","yaxis","chartSeries","backgroundColor","p","alignItems","display","justifyContent","length","page","color","variant"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport Chart from 'react-apexcharts';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Container,\n  List,\n  ListItem,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMounted from '../../../hooks/useMounted';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst Chart5 = () => {\n  const mounted = useMounted();\n  const theme = useTheme();\n  const [data, setData] = useState([\n    163,\n    166,\n    161,\n    159,\n    99,\n    163,\n    173,\n    166,\n    167,\n    183,\n    176,\n    172\n  ]);\n\n  const getData = useCallback(() => {\n    if (mounted.current) {\n      setData((prevData) => {\n        const newData = [...prevData];\n\n        newData.shift();\n        newData.push(0);\n\n        return newData;\n      });\n    }\n\n    setTimeout(() => {\n      if (mounted.current) {\n        setData((prevData) => {\n          const newData = [...prevData];\n          const random = getRandomInt(100, 200);\n\n          newData.pop();\n          newData.push(random);\n\n          return newData;\n        });\n      }\n    }, 500);\n  }, [mounted]);\n\n  useEffect(() => {\n    setInterval(() => getData(), 2000);\n  }, [getData]);\n\n  const labels = data.map((value, i) => i);\n\n  const pages = [\n    {\n      pathname: '/projects',\n      views: '24'\n    },\n    {\n      pathname: '/chat',\n      views: '21'\n    },\n    {\n      pathname: '/cart',\n      views: '15'\n    },\n    {\n      pathname: '/checkout',\n      views: '8'\n    }\n  ];\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#688dff'],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      show: false\n    },\n    legend: {\n      show: false\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '40'\n      }\n    },\n    states: {\n      active: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    stroke: {\n      colors: ['transparent'],\n      show: true,\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      categories: labels,\n      labels: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    }\n  };\n\n  const chartSeries = [{ data }];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Card>\n          <CardHeader\n            disableTypography\n            title={(\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                }}\n              >\n                <div>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h6\"\n                  >\n                    Active users\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Page views per second\n                  </Typography>\n                </div>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h6\"\n                >\n                  {data[data.length - 1] === 0\n                    ? data[data.length - 2]\n                    : data[data.length - 1]}\n                </Typography>\n              </Box>\n            )}\n          />\n          <Chart\n            height=\"200\"\n            options={chartOptions}\n            series={chartSeries}\n            type=\"bar\"\n          />\n          <List>\n            {pages.map((page) => (\n              <ListItem\n                divider\n                key={page.pathname}\n              >\n                <ListItemText\n                  primary={page.pathname}\n                  primaryTypographyProps={{\n                    color: 'textSecondary',\n                    variant: 'body2'\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {page.views}\n                </Typography>\n              </ListItem>\n            ))}\n          </List>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              p: 2\n            }}\n          >\n            <Button\n              color=\"primary\"\n              endIcon={<ArrowRightIcon fontSize=\"small\" />}\n              size=\"small\"\n              variant=\"text\"\n            >\n              See All\n            </Button>\n          </Box>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart5;\n"]},"metadata":{},"sourceType":"module"}