{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/invoice/InvoiceListTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, Checkbox, IconButton, InputAdornment, Link, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, Typography } from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusOptions = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Paid',\n  value: 'paid'\n}, {\n  label: 'Pending',\n  value: 'pending'\n}, {\n  label: 'Canceled',\n  value: 'canceled'\n}];\nconst sortOptions = [{\n  label: 'Newest first',\n  value: 'createdAt|desc'\n}, {\n  label: 'Oldest first',\n  value: 'createdAt|asc'\n}];\n\nconst getStatusLabel = invoiceStatus => {\n  const map = {\n    canceled: {\n      color: 'error',\n      text: 'Canceled'\n    },\n    paid: {\n      color: 'success',\n      text: 'Paid'\n    },\n    pending: {\n      color: 'warning',\n      text: 'Pending'\n    }\n  };\n  const {\n    text,\n    color\n  } = map[invoiceStatus];\n  return /*#__PURE__*/_jsxDEV(Label, {\n    color: color,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\nconst applyFilters = (invoices, query, filters) => invoices.filter(invoice => {\n  let matches = true;\n\n  if (query) {\n    const properties = ['name', 'email'];\n    let containsQuery = false;\n    properties.forEach(property => {\n      if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n        containsQuery = true;\n      }\n    });\n\n    if (!containsQuery) {\n      matches = false;\n    }\n  }\n\n  if (filters.status && invoice.status !== filters.status) {\n    matches = false;\n  }\n\n  return matches;\n});\n\nconst applyPagination = (invoices, page, limit) => invoices.slice(page * limit, page * limit + limit);\n\nconst InvoiceListTable = props => {\n  _s();\n\n  const {\n    invoices,\n    ...other\n  } = props;\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const handleQueryChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleStatusChange = event => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(prevFilters => ({ ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSortChange = event => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllInvoices = event => {\n    setSelectedInvoices(event.target.checked ? invoices.map(invoice => invoice.id) : []);\n  };\n\n  const handleSelectOneInvoice = (event, invoiceId) => {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices(prevSelected => [...prevSelected, invoiceId]);\n    } else {\n      setSelectedInvoices(prevSelected => prevSelected.filter(id => id !== invoiceId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(parseInt(event.target.value, 10));\n  }; // Usually query is done on backend with indexing solutions\n\n\n  const filteredInvoices = applyFilters(invoices, query, filters);\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  const enableBulkActions = selectedInvoices.length > 0;\n  const selectedSomeInvoices = selectedInvoices.length > 0 && selectedInvoices.length < invoices.length;\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\n  return /*#__PURE__*/_jsxDEV(Card, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        m: -1,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          maxWidth: '100%',\n          width: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          },\n          onChange: handleQueryChange,\n          placeholder: \"Search invoices by customer\",\n          value: query,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          maxWidth: '100%',\n          width: 240\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Sort By\",\n          name: \"sort\",\n          onChange: handleSortChange,\n          select: true,\n          SelectProps: {\n            native: true\n          },\n          value: sort,\n          variant: \"outlined\",\n          children: sortOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          maxWidth: '100%',\n          width: 240\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Status\",\n          name: \"status\",\n          onChange: handleStatusChange,\n          select: true,\n          SelectProps: {\n            native: true\n          },\n          value: filters.status || 'all',\n          variant: \"outlined\",\n          children: statusOptions.map(statusOption => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: statusOption.value,\n            children: statusOption.label\n          }, statusOption.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), enableBulkActions && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundColor: 'background.paper',\n          mt: '6px',\n          position: 'absolute',\n          px: '4px',\n          width: '100%',\n          zIndex: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: selectedAllInvoices,\n          color: \"primary\",\n          indeterminate: selectedSomeInvoices,\n          onChange: handleSelectAllInvoices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          sx: {\n            ml: 2\n          },\n          variant: \"outlined\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          sx: {\n            ml: 2\n          },\n          variant: \"outlined\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 1200\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedAllInvoices,\n                  color: \"primary\",\n                  indeterminate: selectedSomeInvoices,\n                  onChange: handleSelectAllInvoices\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: paginatedInvoices.map(invoice => {\n              const isInvoiceSelected = selectedInvoices.includes(invoice.id);\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                selected: isInvoiceSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isInvoiceSelected,\n                    color: \"primary\",\n                    onChange: event => handleSelectOneInvoice(event, invoice.id),\n                    value: isInvoiceSelected\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    color: \"textPrimary\",\n                    component: RouterLink,\n                    to: \"#\",\n                    underline: \"none\",\n                    variant: \"subtitle2\",\n                    children: invoice.customer.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    variant: \"body2\",\n                    children: invoice.customer.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: getStatusLabel(invoice.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: numeral(invoice.totalAmount).format(`${invoice.currency}0,0.00`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: invoice.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: format(invoice.issueDate, 'dd/MM/yyyy')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    component: RouterLink,\n                    to: \"#\",\n                    children: /*#__PURE__*/_jsxDEV(PencilAltIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    component: RouterLink,\n                    to: \"/dashboard/invoices/1\",\n                    children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this)]\n              }, invoice.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: filteredInvoices.length,\n      onPageChange: handlePageChange,\n      onRowsPerPageChange: handleLimitChange,\n      page: page,\n      rowsPerPage: limit,\n      rowsPerPageOptions: [5, 10, 25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoiceListTable, \"SrjhNntGcdksc7O6GiPrAC2gcso=\");\n\n_c = InvoiceListTable;\nInvoiceListTable.propTypes = {\n  invoices: PropTypes.array.isRequired\n};\nexport default InvoiceListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceListTable\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/invoice/InvoiceListTable.js"],"names":["useState","Link","RouterLink","format","numeral","PropTypes","Box","Button","Card","Checkbox","IconButton","InputAdornment","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","Typography","ArrowRightIcon","PencilAltIcon","SearchIcon","Label","Scrollbar","statusOptions","label","value","sortOptions","getStatusLabel","invoiceStatus","map","canceled","color","text","paid","pending","applyFilters","invoices","query","filters","filter","invoice","matches","properties","containsQuery","forEach","property","customer","toLowerCase","includes","status","applyPagination","page","limit","slice","InvoiceListTable","props","other","selectedInvoices","setSelectedInvoices","setPage","setLimit","setQuery","sort","setSort","setFilters","handleQueryChange","event","target","handleStatusChange","prevFilters","handleSortChange","handleSelectAllInvoices","checked","id","handleSelectOneInvoice","invoiceId","prevSelected","handlePageChange","newPage","handleLimitChange","parseInt","filteredInvoices","paginatedInvoices","enableBulkActions","length","selectedSomeInvoices","selectedAllInvoices","alignItems","display","flexWrap","m","p","maxWidth","width","startAdornment","native","option","statusOption","position","backgroundColor","mt","px","zIndex","ml","minWidth","isInvoiceSelected","name","email","totalAmount","currency","issueDate","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  IconButton,\n  InputAdornment,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\n\nconst statusOptions = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Paid',\n    value: 'paid'\n  },\n  {\n    label: 'Pending',\n    value: 'pending'\n  },\n  {\n    label: 'Canceled',\n    value: 'canceled'\n  }\n];\n\nconst sortOptions = [\n  {\n    label: 'Newest first',\n    value: 'createdAt|desc'\n  },\n  {\n    label: 'Oldest first',\n    value: 'createdAt|asc'\n  }\n];\n\nconst getStatusLabel = (invoiceStatus) => {\n  const map = {\n    canceled: {\n      color: 'error',\n      text: 'Canceled'\n    },\n    paid: {\n      color: 'success',\n      text: 'Paid'\n    },\n    pending: {\n      color: 'warning',\n      text: 'Pending'\n    }\n  };\n\n  const { text, color } = map[invoiceStatus];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyFilters = (invoices, query, filters) => invoices\n  .filter((invoice) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name', 'email'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    if (filters.status && invoice.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n\nconst applyPagination = (invoices, page, limit) => invoices\n  .slice(page * limit, page * limit + limit);\n\nconst InvoiceListTable = (props) => {\n  const { invoices, ...other } = props;\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event) => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllInvoices = (event) => {\n    setSelectedInvoices(event.target.checked\n      ? invoices.map((invoice) => invoice.id)\n      : []);\n  };\n\n  const handleSelectOneInvoice = (event, invoiceId) => {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices((prevSelected) => [...prevSelected, invoiceId]);\n    } else {\n      setSelectedInvoices((prevSelected) => prevSelected.filter((id) => id !== invoiceId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredInvoices = applyFilters(invoices, query, filters);\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  const enableBulkActions = selectedInvoices.length > 0;\n  const selectedSomeInvoices = selectedInvoices.length > 0\n    && selectedInvoices.length < invoices.length;\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search invoices by customer\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Status\"\n            name=\"status\"\n            onChange={handleStatusChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.status || 'all'}\n            variant=\"outlined\"\n          >\n            {statusOptions.map((statusOption) => (\n              <option\n                key={statusOption.value}\n                value={statusOption.value}\n              >\n                {statusOption.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllInvoices}\n              color=\"primary\"\n              indeterminate={selectedSomeInvoices}\n              onChange={handleSelectAllInvoices}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 1200 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllInvoices}\n                    color=\"primary\"\n                    indeterminate={selectedSomeInvoices}\n                    onChange={handleSelectAllInvoices}\n                  />\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n                <TableCell>\n                  ID\n                </TableCell>\n                <TableCell>\n                  Date\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedInvoices.map((invoice) => {\n                const isInvoiceSelected = selectedInvoices.includes(invoice.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={invoice.id}\n                    selected={isInvoiceSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isInvoiceSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneInvoice(event, invoice.id)}\n                        value={isInvoiceSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                        underline=\"none\"\n                        variant=\"subtitle2\"\n                      >\n                        {invoice.customer.name}\n                      </Link>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                      >\n                        {invoice.customer.email}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusLabel(invoice.status)}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(invoice.totalAmount)\n                        .format(`${invoice.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell>\n                      {invoice.id}\n                    </TableCell>\n                    <TableCell>\n                      {format(invoice.issueDate, 'dd/MM/yyyy')}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/invoices/1\"\n                      >\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredInvoices.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nInvoiceListTable.propTypes = {\n  invoices: PropTypes.array.isRequired\n};\n\nexport default InvoiceListTable;\n"]},"metadata":{},"sourceType":"module"}