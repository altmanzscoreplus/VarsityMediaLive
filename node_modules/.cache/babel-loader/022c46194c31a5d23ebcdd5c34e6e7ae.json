{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/LanguagePopover.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Box, IconButton, ListItemIcon, ListItemText, MenuItem, Popover, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst languageOptions = {\n  en: {\n    icon: '/static/icons/uk_flag.svg',\n    label: 'English'\n  },\n  de: {\n    icon: '/static/icons/de_flag.svg',\n    label: 'German'\n  },\n  es: {\n    icon: '/static/icons/es_flag.svg',\n    label: 'Spanish'\n  }\n};\n\nconst LanguagePopover = () => {\n  _s();\n\n  const anchorRef = useRef(null);\n  const {\n    i18n\n  } = useTranslation();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeLanguage = language => {\n    i18n.changeLanguage(language);\n    setOpen(false);\n  };\n\n  const selectedOption = languageOptions[i18n.language];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleOpen,\n      ref: anchorRef,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          height: 20,\n          width: 20,\n          '& img': {\n            width: '100%'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: selectedOption.label,\n          src: selectedOption.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      anchorEl: anchorRef.current,\n      anchorOrigin: {\n        horizontal: 'center',\n        vertical: 'bottom'\n      },\n      keepMounted: true,\n      onClose: handleClose,\n      open: open,\n      PaperProps: {\n        sx: {\n          width: 240\n        }\n      },\n      children: Object.keys(languageOptions).map(language => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleChangeLanguage(language),\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              height: 20,\n              width: 20,\n              '& img': {\n                width: '100%'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: languageOptions[language].label,\n              src: languageOptions[language].icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"subtitle2\",\n            children: languageOptions[language].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, language, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LanguagePopover, \"oi/E38ovq3JxUZNxkv+CgmLBWxc=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguagePopover;\nexport default LanguagePopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagePopover\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/LanguagePopover.js"],"names":["useRef","useState","useTranslation","Box","IconButton","ListItemIcon","ListItemText","MenuItem","Popover","Typography","languageOptions","en","icon","label","de","es","LanguagePopover","anchorRef","i18n","open","setOpen","handleOpen","handleClose","handleChangeLanguage","language","changeLanguage","selectedOption","display","height","width","current","horizontal","vertical","sx","Object","keys","map"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Popover,\n  Typography\n} from '@material-ui/core';\n\nconst languageOptions = {\n  en: {\n    icon: '/static/icons/uk_flag.svg',\n    label: 'English'\n  },\n  de: {\n    icon: '/static/icons/de_flag.svg',\n    label: 'German'\n  },\n  es: {\n    icon: '/static/icons/es_flag.svg',\n    label: 'Spanish'\n  }\n};\n\nconst LanguagePopover = () => {\n  const anchorRef = useRef(null);\n  const { i18n } = useTranslation();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeLanguage = (language) => {\n    i18n.changeLanguage(language);\n    setOpen(false);\n  };\n\n  const selectedOption = languageOptions[i18n.language];\n\n  return (\n    <>\n      <IconButton\n        onClick={handleOpen}\n        ref={anchorRef}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            height: 20,\n            width: 20,\n            '& img': {\n              width: '100%'\n            }\n          }}\n        >\n          <img\n            alt={selectedOption.label}\n            src={selectedOption.icon}\n          />\n        </Box>\n      </IconButton>\n      <Popover\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'center',\n          vertical: 'bottom'\n        }}\n        keepMounted\n        onClose={handleClose}\n        open={open}\n        PaperProps={{\n          sx: { width: 240 }\n        }}\n      >\n        {Object.keys(languageOptions).map((language) => (\n          <MenuItem\n            onClick={() => handleChangeLanguage(language)}\n            key={language}\n          >\n            <ListItemIcon>\n              <Box\n                sx={{\n                  display: 'flex',\n                  height: 20,\n                  width: 20,\n                  '& img': {\n                    width: '100%'\n                  }\n                }}\n              >\n                <img\n                  alt={languageOptions[language].label}\n                  src={languageOptions[language].icon}\n                />\n              </Box>\n            </ListItemIcon>\n            <ListItemText\n              primary={(\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {languageOptions[language].label}\n                </Typography>\n              )}\n            />\n          </MenuItem>\n        ))}\n      </Popover>\n    </>\n  );\n};\n\nexport default LanguagePopover;\n"]},"metadata":{},"sourceType":"module"}