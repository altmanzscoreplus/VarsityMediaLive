{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/authentication/register/RegisterJWT.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, FormHelperText, TextField, Typography, Link } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterJWT = props => {\n  _s();\n\n  const mounted = useMounted();\n  const {\n    register\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      name: '',\n      password: '',\n      policy: false,\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      name: Yup.string().max(255).required('Name is required'),\n      password: Yup.string().min(7).max(255).required('Password is required'),\n      policy: Yup.boolean().oneOf([true], 'This field must be checked')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        await register(values.email, values.name, values.password);\n\n        if (mounted.current) {\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n        setStatus({\n          success: false\n        });\n        setErrors({\n          submit: err.message\n        });\n        setSubmitting(false);\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        error: Boolean(touched.name && errors.name),\n        fullWidth: true,\n        helperText: touched.name && errors.name,\n        label: \"Name\",\n        margin: \"normal\",\n        name: \"name\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        value: values.name,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: Boolean(touched.email && errors.email),\n        fullWidth: true,\n        helperText: touched.email && errors.email,\n        label: \"Email Address\",\n        margin: \"normal\",\n        name: \"email\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        type: \"email\",\n        value: values.email,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: Boolean(touched.password && errors.password),\n        fullWidth: true,\n        helperText: touched.password && errors.password,\n        label: \"Password\",\n        margin: \"normal\",\n        name: \"password\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        type: \"password\",\n        value: values.password,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: 'center',\n          display: 'flex',\n          ml: -1,\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: values.policy,\n          color: \"primary\",\n          name: \"policy\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: [\"I have read the\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            color: \"primary\",\n            component: \"a\",\n            href: \"#\",\n            children: \"Terms and Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), Boolean(touched.policy && errors.policy) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: true,\n        children: errors.policy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: isSubmitting,\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterJWT, \"KqBi+VnZNT4b5NEy/UDVmkXu6z8=\", false, function () {\n  return [useMounted, useAuth];\n});\n\n_c = RegisterJWT;\nexport default RegisterJWT;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterJWT\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/authentication/register/RegisterJWT.js"],"names":["Yup","Formik","Box","Button","Checkbox","FormHelperText","TextField","Typography","Link","useAuth","useMounted","RegisterJWT","props","mounted","register","email","name","password","policy","submit","object","shape","string","max","required","min","boolean","oneOf","values","setErrors","setStatus","setSubmitting","current","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","alignItems","display","ml","mt"],"mappings":";;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,SALF,EAMEC,UANF,EAOEC,IAPF,QAQO,mBARP;AASA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeL,OAAO,EAA5B;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbM,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,IAAI,EAAE,EAFO;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbC,MAAAA,MAAM,EAAE,KAJK;AAKbC,MAAAA,MAAM,EAAE;AALK,KADjB;AAQE,IAAA,gBAAgB,EAAEnB,GAAG,CAClBoB,MADe,GAEfC,KAFe,CAET;AACLN,MAAAA,KAAK,EAAEf,GAAG,CACPsB,MADI,GAEJP,KAFI,CAEE,uBAFF,EAGJQ,GAHI,CAGA,GAHA,EAIJC,QAJI,CAIK,mBAJL,CADF;AAMLR,MAAAA,IAAI,EAAEhB,GAAG,CACNsB,MADG,GAEHC,GAFG,CAEC,GAFD,EAGHC,QAHG,CAGM,kBAHN,CAND;AAULP,MAAAA,QAAQ,EAAEjB,GAAG,CACVsB,MADO,GAEPG,GAFO,CAEH,CAFG,EAGPF,GAHO,CAGH,GAHG,EAIPC,QAJO,CAIE,sBAJF,CAVL;AAeLN,MAAAA,MAAM,EAAElB,GAAG,CACR0B,OADK,GAELC,KAFK,CAEC,CAAC,IAAD,CAFD,EAES,4BAFT;AAfH,KAFS,CARpB;AA6BE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,KAAf,KAA2D;AACnE,UAAI;AACF,cAAMjB,QAAQ,CAACc,MAAM,CAACb,KAAR,EAAea,MAAM,CAACZ,IAAtB,EAA4BY,MAAM,CAACX,QAAnC,CAAd;;AAEA,YAAIJ,OAAO,CAACmB,OAAZ,EAAqB;AACnBF,UAAAA,SAAS,CAAC;AAAEG,YAAAA,OAAO,EAAE;AAAX,WAAD,CAAT;AACAF,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,OAPD,CAOE,OAAOG,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAJ,QAAAA,SAAS,CAAC;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAT;AACAJ,QAAAA,SAAS,CAAC;AAAEV,UAAAA,MAAM,EAAEe,GAAG,CAACG;AAAd,SAAD,CAAT;AACAN,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,KA3CH;AAAA,cA6CG,CAAC;AAAEO,MAAAA,MAAF;AAAUC,MAAAA,UAAV;AAAsBC,MAAAA,YAAtB;AAAoCC,MAAAA,YAApC;AAAkDC,MAAAA,YAAlD;AAAgEC,MAAAA,OAAhE;AAAyEf,MAAAA;AAAzE,KAAD,kBACC;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,QAAQ,EAAEa,YAFZ;AAAA,SAGM7B,KAHN;AAAA,8BAKE,QAAC,SAAD;AACE,QAAA,KAAK,EAAEgC,OAAO,CAACD,OAAO,CAAC3B,IAAR,IAAgBsB,MAAM,CAACtB,IAAxB,CADhB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,UAAU,EAAE2B,OAAO,CAAC3B,IAAR,IAAgBsB,MAAM,CAACtB,IAHrC;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,MAAM,EAAC,QALT;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,MAAM,EAAEuB,UAPV;AAQE,QAAA,QAAQ,EAAEC,YARZ;AASE,QAAA,KAAK,EAAEZ,MAAM,CAACZ,IAThB;AAUE,QAAA,OAAO,EAAC;AAVV;AAAA;AAAA;AAAA;AAAA,cALF,eAiBE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE4B,OAAO,CAACD,OAAO,CAAC5B,KAAR,IAAiBuB,MAAM,CAACvB,KAAzB,CADhB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,UAAU,EAAE4B,OAAO,CAAC5B,KAAR,IAAiBuB,MAAM,CAACvB,KAHtC;AAIE,QAAA,KAAK,EAAC,eAJR;AAKE,QAAA,MAAM,EAAC,QALT;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,MAAM,EAAEwB,UAPV;AAQE,QAAA,QAAQ,EAAEC,YARZ;AASE,QAAA,IAAI,EAAC,OATP;AAUE,QAAA,KAAK,EAAEZ,MAAM,CAACb,KAVhB;AAWE,QAAA,OAAO,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA,cAjBF,eA8BE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE6B,OAAO,CAACD,OAAO,CAAC1B,QAAR,IAAoBqB,MAAM,CAACrB,QAA5B,CADhB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,UAAU,EAAE0B,OAAO,CAAC1B,QAAR,IAAoBqB,MAAM,CAACrB,QAHzC;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,MAAM,EAAC,QALT;AAME,QAAA,IAAI,EAAC,UANP;AAOE,QAAA,MAAM,EAAEsB,UAPV;AAQE,QAAA,QAAQ,EAAEC,YARZ;AASE,QAAA,IAAI,EAAC,UATP;AAUE,QAAA,KAAK,EAAEZ,MAAM,CAACX,QAVhB;AAWE,QAAA,OAAO,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA,cA9BF,eA2CE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACF4B,UAAAA,UAAU,EAAE,QADV;AAEFC,UAAAA,OAAO,EAAE,MAFP;AAGFC,UAAAA,EAAE,EAAE,CAAC,CAHH;AAIFC,UAAAA,EAAE,EAAE;AAJF,SADN;AAAA,gCAQE,QAAC,QAAD;AACE,UAAA,OAAO,EAAEpB,MAAM,CAACV,MADlB;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,QAAQ,EAAEsB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBARF,eAcE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,eADR;AAEE,UAAA,OAAO,EAAC,OAFV;AAAA,wCAKG,GALH,eAME,QAAC,IAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,SAAS,EAAC,GAFZ;AAGE,YAAA,IAAI,EAAC,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF,EAwEGI,OAAO,CAACD,OAAO,CAACzB,MAAR,IAAkBoB,MAAM,CAACpB,MAA1B,CAAP,iBACC,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAA,kBACGoB,MAAM,CAACpB;AADV;AAAA;AAAA;AAAA;AAAA,cAzEJ,EA6EGoB,MAAM,CAACnB,MAAP,iBACC,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAE6B,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,KAAK,MAArB;AAAA,oBACGV,MAAM,CAACnB;AADV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA9EJ,eAoFE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAE6B,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,QAAQ,EAAEN,YAFZ;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,IAAI,EAAC,QALP;AAME,UAAA,OAAO,EAAC,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApFF;AAAA;AAAA;AAAA;AAAA;AAAA;AA9CJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmJD,CAvJD;;GAAM/B,W;UACYD,U,EACKD,O;;;KAFjBE,W;AAyJN,eAAeA,WAAf","sourcesContent":["import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n  Link\n} from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\n\nconst RegisterJWT = (props) => {\n  const mounted = useMounted();\n  const { register } = useAuth();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        name: '',\n        password: '',\n        policy: false,\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          email: Yup\n            .string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          name: Yup\n            .string()\n            .max(255)\n            .required('Name is required'),\n          password: Yup\n            .string()\n            .min(7)\n            .max(255)\n            .required('Password is required'),\n          policy: Yup\n            .boolean()\n            .oneOf([true], 'This field must be checked')\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await register(values.email, values.name, values.password);\n\n          if (mounted.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <TextField\n            error={Boolean(touched.name && errors.name)}\n            fullWidth\n            helperText={touched.name && errors.name}\n            label=\"Name\"\n            margin=\"normal\"\n            name=\"name\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            value={values.name}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              ml: -1,\n              mt: 2\n            }}\n          >\n            <Checkbox\n              checked={values.policy}\n              color=\"primary\"\n              name=\"policy\"\n              onChange={handleChange}\n            />\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              I have read the\n              {' '}\n              <Link\n                color=\"primary\"\n                component=\"a\"\n                href=\"#\"\n              >\n                Terms and Conditions\n              </Link>\n            </Typography>\n          </Box>\n          {Boolean(touched.policy && errors.policy) && (\n            <FormHelperText error>\n              {errors.policy}\n            </FormHelperText>\n          )}\n          {errors.submit && (\n            <Box sx={{ mt: 3 }}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box sx={{ mt: 2 }}>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Register\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default RegisterJWT;\n"]},"metadata":{},"sourceType":"module"}