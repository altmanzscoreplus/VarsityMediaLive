{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { calendarApi } from '../__fakeApi__/calendarApi';\nconst initialState = {\n  events: [],\n  isModalOpen: false,\n  selectedEventId: null,\n  selectedRange: null\n};\nconst slice = createSlice({\n  name: 'calendar',\n  initialState,\n  reducers: {\n    getEvents(state, action) {\n      state.events = action.payload;\n    },\n\n    createEvent(state, action) {\n      state.events.push(action.payload);\n    },\n\n    selectEvent(state, action) {\n      state.isModalOpen = true;\n      state.selectedEventId = action.payload;\n    },\n\n    updateEvent(state, action) {\n      const event = action.payload;\n      state.events = state.events.map(_event => {\n        if (_event.id === event.id) {\n          return event;\n        }\n\n        return _event;\n      });\n    },\n\n    deleteEvent(state, action) {\n      state.events = state.events.filter(event => event.id !== action.payload);\n    },\n\n    selectRange(state, action) {\n      const {\n        start,\n        end\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end\n      };\n    },\n\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedEventId = null;\n      state.selectedRange = null;\n    }\n\n  }\n});\nexport const {\n  reducer\n} = slice;\nexport const getEvents = () => async dispatch => {\n  const data = await calendarApi.getEvents();\n  dispatch(slice.actions.getEvents(data));\n};\nexport const createEvent = createData => async dispatch => {\n  const data = await calendarApi.createEvent(createData);\n  dispatch(slice.actions.createEvent(data));\n};\nexport const selectEvent = eventId => async dispatch => {\n  dispatch(slice.actions.selectEvent(eventId));\n};\nexport const updateEvent = (eventId, update) => async dispatch => {\n  const data = await calendarApi.updateEvent({\n    eventId,\n    update\n  });\n  dispatch(slice.actions.updateEvent(data));\n};\nexport const deleteEvent = eventId => async dispatch => {\n  await calendarApi.deleteEvent(eventId);\n  dispatch(slice.actions.deleteEvent(eventId));\n};\nexport const selectRange = (start, end) => dispatch => {\n  dispatch(slice.actions.selectRange({\n    start,\n    end\n  }));\n};\nexport const openModal = () => dispatch => {\n  dispatch(slice.actions.openModal());\n};\nexport const closeModal = () => dispatch => {\n  dispatch(slice.actions.closeModal());\n};\nexport default slice;","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/slices/calendar.js"],"names":["createSlice","calendarApi","initialState","events","isModalOpen","selectedEventId","selectedRange","slice","name","reducers","getEvents","state","action","payload","createEvent","push","selectEvent","updateEvent","event","map","_event","id","deleteEvent","filter","selectRange","start","end","openModal","closeModal","reducer","dispatch","data","actions","createData","eventId","update"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,eAAe,EAAE,IAHE;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAArB;AAOA,MAAMC,KAAK,GAAGP,WAAW,CAAC;AACxBQ,EAAAA,IAAI,EAAE,UADkB;AAExBN,EAAAA,YAFwB;AAGxBO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACC,OAAtB;AACD,KAHO;;AAIRC,IAAAA,WAAW,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACR,MAAN,CAAaY,IAAb,CAAkBH,MAAM,CAACC,OAAzB;AACD,KANO;;AAORG,IAAAA,WAAW,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACP,WAAN,GAAoB,IAApB;AACAO,MAAAA,KAAK,CAACN,eAAN,GAAwBO,MAAM,CAACC,OAA/B;AACD,KAVO;;AAWRI,IAAAA,WAAW,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMM,KAAK,GAAGN,MAAM,CAACC,OAArB;AAEAF,MAAAA,KAAK,CAACR,MAAN,GAAeQ,KAAK,CAACR,MAAN,CAAagB,GAAb,CAAkBC,MAAD,IAAY;AAC1C,YAAIA,MAAM,CAACC,EAAP,KAAcH,KAAK,CAACG,EAAxB,EAA4B;AAC1B,iBAAOH,KAAP;AACD;;AAED,eAAOE,MAAP;AACD,OANc,CAAf;AAOD,KArBO;;AAsBRE,IAAAA,WAAW,CAACX,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACR,MAAN,GAAeQ,KAAK,CAACR,MAAN,CAAaoB,MAAb,CAAqBL,KAAD,IAAWA,KAAK,CAACG,EAAN,KAAaT,MAAM,CAACC,OAAnD,CAAf;AACD,KAxBO;;AAyBRW,IAAAA,WAAW,CAACb,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAM;AAAEa,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAiBd,MAAM,CAACC,OAA9B;AAEAF,MAAAA,KAAK,CAACP,WAAN,GAAoB,IAApB;AACAO,MAAAA,KAAK,CAACL,aAAN,GAAsB;AACpBmB,QAAAA,KADoB;AAEpBC,QAAAA;AAFoB,OAAtB;AAID,KAjCO;;AAkCRC,IAAAA,SAAS,CAAChB,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,WAAN,GAAoB,IAApB;AACD,KApCO;;AAqCRwB,IAAAA,UAAU,CAACjB,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACP,WAAN,GAAoB,KAApB;AACAO,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACAM,MAAAA,KAAK,CAACL,aAAN,GAAsB,IAAtB;AACD;;AAzCO;AAHc,CAAD,CAAzB;AAgDA,OAAO,MAAM;AAAEuB,EAAAA;AAAF,IAActB,KAApB;AAEP,OAAO,MAAMG,SAAS,GAAG,MAAM,MAAOoB,QAAP,IAAoB;AACjD,QAAMC,IAAI,GAAG,MAAM9B,WAAW,CAACS,SAAZ,EAAnB;AAEAoB,EAAAA,QAAQ,CAACvB,KAAK,CAACyB,OAAN,CAActB,SAAd,CAAwBqB,IAAxB,CAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMjB,WAAW,GAAImB,UAAD,IAAgB,MAAOH,QAAP,IAAoB;AAC7D,QAAMC,IAAI,GAAG,MAAM9B,WAAW,CAACa,WAAZ,CAAwBmB,UAAxB,CAAnB;AAEAH,EAAAA,QAAQ,CAACvB,KAAK,CAACyB,OAAN,CAAclB,WAAd,CAA0BiB,IAA1B,CAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMf,WAAW,GAAIkB,OAAD,IAAa,MAAOJ,QAAP,IAAoB;AAC1DA,EAAAA,QAAQ,CAACvB,KAAK,CAACyB,OAAN,CAAchB,WAAd,CAA0BkB,OAA1B,CAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMjB,WAAW,GAAG,CAACiB,OAAD,EAAUC,MAAV,KAAqB,MAAOL,QAAP,IAAoB;AAClE,QAAMC,IAAI,GAAG,MAAM9B,WAAW,CAACgB,WAAZ,CAAwB;AACzCiB,IAAAA,OADyC;AAEzCC,IAAAA;AAFyC,GAAxB,CAAnB;AAKAL,EAAAA,QAAQ,CAACvB,KAAK,CAACyB,OAAN,CAAcf,WAAd,CAA0Bc,IAA1B,CAAD,CAAR;AACD,CAPM;AASP,OAAO,MAAMT,WAAW,GAAIY,OAAD,IAAa,MAAOJ,QAAP,IAAoB;AAC1D,QAAM7B,WAAW,CAACqB,WAAZ,CAAwBY,OAAxB,CAAN;AAEAJ,EAAAA,QAAQ,CAACvB,KAAK,CAACyB,OAAN,CAAcV,WAAd,CAA0BY,OAA1B,CAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMV,WAAW,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAiBI,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAACvB,KAAK,CAACyB,OAAN,CAAcR,WAAd,CAA0B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA1B,CAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMC,SAAS,GAAG,MAAOG,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAACvB,KAAK,CAACyB,OAAN,CAAcL,SAAd,EAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAG,MAAOE,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAACvB,KAAK,CAACyB,OAAN,CAAcJ,UAAd,EAAD,CAAR;AACD,CAFM;AAIP,eAAerB,KAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { calendarApi } from '../__fakeApi__/calendarApi';\n\nconst initialState = {\n  events: [],\n  isModalOpen: false,\n  selectedEventId: null,\n  selectedRange: null\n};\n\nconst slice = createSlice({\n  name: 'calendar',\n  initialState,\n  reducers: {\n    getEvents(state, action) {\n      state.events = action.payload;\n    },\n    createEvent(state, action) {\n      state.events.push(action.payload);\n    },\n    selectEvent(state, action) {\n      state.isModalOpen = true;\n      state.selectedEventId = action.payload;\n    },\n    updateEvent(state, action) {\n      const event = action.payload;\n\n      state.events = state.events.map((_event) => {\n        if (_event.id === event.id) {\n          return event;\n        }\n\n        return _event;\n      });\n    },\n    deleteEvent(state, action) {\n      state.events = state.events.filter((event) => event.id !== action.payload);\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedEventId = null;\n      state.selectedRange = null;\n    }\n  }\n});\n\nexport const { reducer } = slice;\n\nexport const getEvents = () => async (dispatch) => {\n  const data = await calendarApi.getEvents();\n\n  dispatch(slice.actions.getEvents(data));\n};\n\nexport const createEvent = (createData) => async (dispatch) => {\n  const data = await calendarApi.createEvent(createData);\n\n  dispatch(slice.actions.createEvent(data));\n};\n\nexport const selectEvent = (eventId) => async (dispatch) => {\n  dispatch(slice.actions.selectEvent(eventId));\n};\n\nexport const updateEvent = (eventId, update) => async (dispatch) => {\n  const data = await calendarApi.updateEvent({\n    eventId,\n    update\n  });\n\n  dispatch(slice.actions.updateEvent(data));\n};\n\nexport const deleteEvent = (eventId) => async (dispatch) => {\n  await calendarApi.deleteEvent(eventId);\n\n  dispatch(slice.actions.deleteEvent(eventId));\n};\n\nexport const selectRange = (start, end) => (dispatch) => {\n  dispatch(slice.actions.selectRange({ start, end }));\n};\n\nexport const openModal = () => (dispatch) => {\n  dispatch(slice.actions.openModal());\n};\n\nexport const closeModal = () => (dispatch) => {\n  dispatch(slice.actions.closeModal());\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}