{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCardAdd.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { createCard } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst KanbanCardAdd = props => {\n  _s();\n\n  const {\n    columnId,\n    ...other\n  } = props;\n  const dispatch = useDispatch();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setIsExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setIsExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createCard(columnId, name || 'Untitled Card'));\n      setIsExpanded(false);\n      setName('');\n      toast.success('Card created!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...other,\n    children: isExpanded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Title\",\n        name: \"cardName\",\n        onChange: handleChange,\n        value: name,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleAddCancel,\n          variant: \"text\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleAddConfirm,\n          variant: \"contained\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleAddInit,\n        variant: \"text\",\n        children: \"Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KanbanCardAdd, \"wKLXYvahSGJSS0IJhroo/Ubm3Xc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = KanbanCardAdd;\nKanbanCardAdd.propTypes = {\n  columnId: PropTypes.string.isRequired\n};\nexport default KanbanCardAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanCardAdd\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCardAdd.js"],"names":["useState","PropTypes","toast","Box","Button","TextField","createCard","useDispatch","KanbanCardAdd","props","columnId","other","dispatch","isExpanded","setIsExpanded","name","setName","handleChange","event","target","value","handleAddInit","handleAddCancel","handleAddConfirm","success","err","console","error","display","justifyContent","mt","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { createCard } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanCardAdd = (props) => {\n  const { columnId, ...other } = props;\n  const dispatch = useDispatch();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setIsExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setIsExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createCard(columnId, name || 'Untitled Card'));\n      setIsExpanded(false);\n      setName('');\n      toast.success('Card created!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return (\n    <div {...other}>\n      {isExpanded\n        ? (\n          <>\n            <TextField\n              fullWidth\n              label=\"Title\"\n              name=\"cardName\"\n              onChange={handleChange}\n              value={name}\n              variant=\"outlined\"\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                mt: 2\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={handleAddCancel}\n                variant=\"text\"\n              >\n                Cancel\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={handleAddConfirm}\n                variant=\"contained\"\n              >\n                Add\n              </Button>\n            </Box>\n          </>\n        )\n        : (\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center'\n            }}\n          >\n            <Button\n              color=\"primary\"\n              onClick={handleAddInit}\n              variant=\"text\"\n            >\n              Add Card\n            </Button>\n          </Box>\n        )}\n    </div>\n  );\n};\n\nKanbanCardAdd.propTypes = {\n  columnId: PropTypes.string.isRequired\n};\n\nexport default KanbanCardAdd;\n"]},"metadata":{},"sourceType":"module"}