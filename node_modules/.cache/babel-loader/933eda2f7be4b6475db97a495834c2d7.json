{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/project/ProjectDetailsForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport MobileDatePicker from '@material-ui/lab/MobileDatePicker';\nimport { Box, Button, Card, Chip, FormHelperText, IconButton, TextField, Typography } from '@material-ui/core';\nimport PlusIcon from '../../../icons/Plus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectDetailsForm = props => {\n  _s();\n\n  const {\n    onBack,\n    onNext,\n    ...other\n  } = props;\n  const [tag, setTag] = useState('');\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      projectName: '',\n      tags: ['Full-Time'],\n      startDate: new Date(),\n      endDate: new Date(),\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      projectName: Yup.string().min(3, 'Must be at least 3 characters').max(255).required('Required'),\n      tags: Yup.array(),\n      startDate: Yup.date(),\n      endDate: Yup.date()\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        // Call API to store step data in server session\n        // It is important to have it on server to be able to reuse it if user\n        // decides to continue later.\n        setStatus({\n          success: true\n        });\n        setSubmitting(false);\n\n        if (onNext) {\n          onNext();\n        }\n      } catch (err) {\n        console.error(err);\n        setStatus({\n          success: false\n        });\n        setErrors({\n          submit: err.message\n        });\n        setSubmitting(false);\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      setFieldValue,\n      setFieldTouched,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      ...other,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"h6\",\n          children: \"Project details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body1\",\n          children: \"Proin tincidunt lacus sed ante efficitur efficitur. Quisque aliquam fringilla velit sit amet euismod.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(touched.projectName && errors.projectName),\n            fullWidth: true,\n            helperText: touched.projectName && errors.projectName,\n            label: \"Project Name\",\n            name: \"projectName\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.projectName,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Tags\",\n              name: \"tags\",\n              onChange: event => setTag(event.target.value),\n              value: tag,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              sx: {\n                ml: 2\n              },\n              onClick: () => {\n                if (!tag) {\n                  return;\n                }\n\n                setFieldValue('tags', [...values.tags, tag]);\n                setTag('');\n              },\n              children: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: values.tags.map((_tag, i) => /*#__PURE__*/_jsxDEV(Chip, {\n              onDelete: () => {\n                const newTags = values.tags.filter(t => t !== _tag);\n                setFieldValue('tags', newTags);\n              } // eslint-disable-next-line react/no-array-index-key\n              ,\n              label: _tag,\n              sx: {\n                '& + &': {\n                  ml: 1\n                }\n              },\n              variant: \"outlined\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), Boolean(touched.tags && errors.tags) && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.tags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mr: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                label: \"Start Date\",\n                onAccept: () => setFieldTouched('startDate'),\n                onChange: date => setFieldValue('startDate', date),\n                onClose: () => setFieldTouched('startDate'),\n                renderInput: inputProps => /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  ...inputProps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this),\n                value: values.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n              label: \"End Date\",\n              onAccept: () => setFieldTouched('endDate'),\n              onChange: date => setFieldValue('endDate', date),\n              onClose: () => setFieldTouched('endDate'),\n              renderInput: inputProps => /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                ...inputProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this),\n              value: values.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), Boolean(touched.startDate && errors.startDate) && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), Boolean(touched.endDate && errors.endDate) && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            mt: 6\n          },\n          children: [onBack && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: onBack,\n            size: \"large\",\n            variant: \"text\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: isSubmitting,\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectDetailsForm, \"UHyUiRWsS0A3sUTzGWVRY/diVXU=\");\n\n_c = ProjectDetailsForm;\nProjectDetailsForm.propTypes = {\n  onBack: PropTypes.func,\n  onNext: PropTypes.func\n};\nexport default ProjectDetailsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDetailsForm\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/project/ProjectDetailsForm.js"],"names":["useState","PropTypes","Yup","Formik","MobileDatePicker","Box","Button","Card","Chip","FormHelperText","IconButton","TextField","Typography","PlusIcon","ProjectDetailsForm","props","onBack","onNext","other","tag","setTag","projectName","tags","startDate","Date","endDate","submit","object","shape","string","min","max","required","array","date","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","setFieldTouched","touched","p","mt","Boolean","alignItems","display","event","target","value","ml","map","_tag","i","newTags","filter","t","mr","inputProps","flexGrow","propTypes","func"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport MobileDatePicker from '@material-ui/lab/MobileDatePicker';\nimport {\n  Box,\n  Button,\n  Card,\n  Chip,\n  FormHelperText,\n  IconButton,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport PlusIcon from '../../../icons/Plus';\n\nconst ProjectDetailsForm = (props) => {\n  const { onBack, onNext, ...other } = props;\n  const [tag, setTag] = useState('');\n\n  return (\n    <Formik\n      initialValues={{\n        projectName: '',\n        tags: ['Full-Time'],\n        startDate: new Date(),\n        endDate: new Date(),\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          projectName: Yup\n            .string()\n            .min(3, 'Must be at least 3 characters')\n            .max(255)\n            .required('Required'),\n          tags: Yup.array(),\n          startDate: Yup.date(),\n          endDate: Yup.date()\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          // Call API to store step data in server session\n          // It is important to have it on server to be able to reuse it if user\n          // decides to continue later.\n          setStatus({ success: true });\n          setSubmitting(false);\n\n          if (onNext) {\n            onNext();\n          }\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...other}\n        >\n          <Card sx={{ p: 3 }}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h6\"\n            >\n              Project details\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              Proin tincidunt lacus sed ante efficitur efficitur.\n              Quisque aliquam fringilla velit sit amet euismod.\n            </Typography>\n            <Box sx={{ mt: 2 }}>\n              <TextField\n                error={Boolean(touched.projectName && errors.projectName)}\n                fullWidth\n                helperText={touched.projectName && errors.projectName}\n                label=\"Project Name\"\n                name=\"projectName\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.projectName}\n                variant=\"outlined\"\n              />\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  mt: 3\n                }}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Tags\"\n                  name=\"tags\"\n                  onChange={(event) => setTag(event.target.value)}\n                  value={tag}\n                  variant=\"outlined\"\n                />\n                <IconButton\n                  sx={{ ml: 2 }}\n                  onClick={() => {\n                    if (!tag) {\n                      return;\n                    }\n\n                    setFieldValue('tags', [\n                      ...values.tags,\n                      tag\n                    ]);\n                    setTag('');\n                  }}\n                >\n                  <PlusIcon fontSize=\"small\" />\n                </IconButton>\n              </Box>\n              <Box sx={{ mt: 2 }}>\n                {values.tags.map((_tag, i) => (\n                  <Chip\n                    onDelete={() => {\n                      const newTags = values.tags.filter((t) => t !== _tag);\n\n                      setFieldValue('tags', newTags);\n                    }}\n                    // eslint-disable-next-line react/no-array-index-key\n                    key={i}\n                    label={_tag}\n                    sx={{\n                      '& + &': {\n                        ml: 1\n                      }\n                    }}\n                    variant=\"outlined\"\n                  />\n                ))}\n              </Box>\n              {Boolean(touched.tags && errors.tags) && (\n                <Box sx={{ mt: 2 }}>\n                  <FormHelperText error>\n                    {errors.tags}\n                  </FormHelperText>\n                </Box>\n              )}\n              <Box\n                sx={{\n                  display: 'flex',\n                  mt: 4\n                }}\n              >\n                <Box sx={{ mr: 2 }}>\n                  <MobileDatePicker\n                    label=\"Start Date\"\n                    onAccept={() => setFieldTouched('startDate')}\n                    onChange={(date) => setFieldValue('startDate', date)}\n                    onClose={() => setFieldTouched('startDate')}\n                    renderInput={(inputProps) => (\n                      <TextField\n                        variant=\"outlined\"\n                        {...inputProps}\n                      />\n                    )}\n                    value={values.startDate}\n                  />\n                </Box>\n                <MobileDatePicker\n                  label=\"End Date\"\n                  onAccept={() => setFieldTouched('endDate')}\n                  onChange={(date) => setFieldValue('endDate', date)}\n                  onClose={() => setFieldTouched('endDate')}\n                  renderInput={(inputProps) => (\n                    <TextField\n                      variant=\"outlined\"\n                      {...inputProps}\n                    />\n                  )}\n                  value={values.endDate}\n                />\n              </Box>\n              {Boolean(touched.startDate && errors.startDate) && (\n                <Box sx={{ mt: 2 }}>\n                  <FormHelperText error>\n                    {errors.startDate}\n                  </FormHelperText>\n                </Box>\n              )}\n              {Boolean(touched.endDate && errors.endDate) && (\n                <Box sx={{ mt: 2 }}>\n                  <FormHelperText error>\n                    {errors.endDate}\n                  </FormHelperText>\n                </Box>\n              )}\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                mt: 6\n              }}\n            >\n              {onBack && (\n                <Button\n                  color=\"primary\"\n                  onClick={onBack}\n                  size=\"large\"\n                  variant=\"text\"\n                >\n                  Previous\n                </Button>\n              )}\n              <Box sx={{ flexGrow: 1 }} />\n              <Button\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Next\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nProjectDetailsForm.propTypes = {\n  onBack: PropTypes.func,\n  onNext: PropTypes.func\n};\n\nexport default ProjectDetailsForm;\n"]},"metadata":{},"sourceType":"module"}