{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/account/AccountGeneralSettings.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Autocomplete, Avatar, Box, Button, Card, CardActions, CardContent, CardHeader, Divider, FormHelperText, Grid, Link, Switch, TextField, Typography } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport wait from '../../../utils/wait';\nimport countries from './countries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountGeneralSettings = props => {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 4,\n      md: 6,\n      xl: 3,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 1,\n                border: theme => `1px dashed ${theme.palette.divider}`,\n                borderRadius: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: user.avatar,\n                sx: {\n                  height: 100,\n                  width: 100\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              sx: {\n                mt: 1\n              },\n              variant: \"subtitle2\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: [\"Your plan:\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                color: \"primary\",\n                component: RouterLink,\n                to: \"/dashboard/account\",\n                children: user.plan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            fullWidth: true,\n            variant: \"text\",\n            children: \"Remove Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 8,\n      md: 6,\n      xl: 9,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: {\n          canHire: user.canHire || false,\n          city: user.city || '',\n          country: user.country || '',\n          email: user.email || '',\n          isPublic: user.isPublic || false,\n          name: user.name || '',\n          phone: user.phone || '',\n          state: user.state || '',\n          submit: null\n        },\n        validationSchema: Yup.object().shape({\n          canHire: Yup.bool(),\n          city: Yup.string().max(255),\n          country: Yup.string().max(255),\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n          isPublic: Yup.bool(),\n          name: Yup.string().max(255).required('Name is required'),\n          phone: Yup.string(),\n          state: Yup.string()\n        }),\n        onSubmit: async (values, {\n          resetForm,\n          setErrors,\n          setStatus,\n          setSubmitting\n        }) => {\n          try {\n            // NOTE: Make API request\n            await wait(200);\n            resetForm();\n            setStatus({\n              success: true\n            });\n            setSubmitting(false);\n            toast.success('Profile updated!');\n          } catch (err) {\n            console.error(err);\n            toast.error('Something went wrong!');\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        },\n        children: ({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.name && errors.name),\n                    fullWidth: true,\n                    helperText: touched.name && errors.name,\n                    label: \"Name\",\n                    name: \"name\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.name,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.email && errors.email),\n                    fullWidth: true,\n                    helperText: touched.email && errors.email ? errors.email : 'We will use this email to contact you',\n                    label: \"Email Address\",\n                    name: \"email\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    required: true,\n                    type: \"email\",\n                    value: values.email,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.phone && errors.phone),\n                    fullWidth: true,\n                    helperText: touched.phone && errors.phone,\n                    label: \"Phone Number\",\n                    name: \"phone\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.phone,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                    getOptionLabel: option => option.text,\n                    options: countries,\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      label: \"Country\",\n                      name: \"country\",\n                      onChange: handleChange,\n                      variant: \"outlined\",\n                      ...params\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.state && errors.state),\n                    fullWidth: true,\n                    helperText: touched.state && errors.state,\n                    label: \"State/Region\",\n                    name: \"state\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.state,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.city && errors.city),\n                    fullWidth: true,\n                    helperText: touched.city && errors.city,\n                    label: \"City\",\n                    name: \"city\",\n                    onBlur: handleBlur,\n                    onChange: handleChange,\n                    value: values.city,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textPrimary\",\n                    gutterBottom: true,\n                    variant: \"subtitle2\",\n                    children: \"Public Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    variant: \"body2\",\n                    children: \"Means that anyone viewing your profile will be able to see your contacts details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: values.isPublic,\n                    color: \"primary\",\n                    edge: \"start\",\n                    name: \"isPublic\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 6,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textPrimary\",\n                    gutterBottom: true,\n                    variant: \"subtitle2\",\n                    children: \"Available to hire\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    variant: \"body2\",\n                    children: \"Toggling this will let your teammates know that you are available for acquiring new projects\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: values.canHire,\n                    color: \"primary\",\n                    edge: \"start\",\n                    name: \"canHire\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 3\n                },\n                children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: true,\n                  children: errors.submit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                p: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                disabled: isSubmitting,\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountGeneralSettings, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n\n_c = AccountGeneralSettings;\nexport default AccountGeneralSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountGeneralSettings\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/account/AccountGeneralSettings.js"],"names":["Link","RouterLink","toast","Yup","Formik","Autocomplete","Avatar","Box","Button","Card","CardActions","CardContent","CardHeader","Divider","FormHelperText","Grid","Switch","TextField","Typography","useAuth","wait","countries","AccountGeneralSettings","props","user","alignItems","display","flexDirection","textAlign","p","border","theme","palette","divider","borderRadius","avatar","height","width","mt","name","plan","canHire","city","country","email","isPublic","phone","state","submit","object","shape","bool","string","max","required","values","resetForm","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","option","text","params","justifyContent"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Autocomplete,\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  Switch,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport wait from '../../../utils/wait';\nimport countries from './countries';\n\nconst AccountGeneralSettings = (props) => {\n  const { user } = useAuth();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      {...props}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                flexDirection: 'column',\n                textAlign: 'center'\n              }}\n            >\n              <Box\n                sx={{\n                  p: 1,\n                  border: (theme) => `1px dashed ${theme.palette.divider}`,\n                  borderRadius: '50%'\n                }}\n              >\n                <Avatar\n                  src={user.avatar}\n                  sx={{\n                    height: 100,\n                    width: 100\n                  }}\n                />\n              </Box>\n              <Typography\n                color=\"textPrimary\"\n                sx={{ mt: 1 }}\n                variant=\"subtitle2\"\n              >\n                {user.name}\n              </Typography>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                Your plan:\n                {' '}\n                <Link\n                  color=\"primary\"\n                  component={RouterLink}\n                  to=\"/dashboard/account\"\n                >\n                  {user.plan}\n                </Link>\n              </Typography>\n            </Box>\n          </CardContent>\n          <CardActions>\n            <Button\n              color=\"primary\"\n              fullWidth\n              variant=\"text\"\n            >\n              Remove Picture\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <Formik\n          enableReinitialize\n          initialValues={{\n            canHire: user.canHire || false,\n            city: user.city || '',\n            country: user.country || '',\n            email: user.email || '',\n            isPublic: user.isPublic || false,\n            name: user.name || '',\n            phone: user.phone || '',\n            state: user.state || '',\n            submit: null\n          }}\n          validationSchema={Yup\n            .object()\n            .shape({\n              canHire: Yup.bool(),\n              city: Yup.string().max(255),\n              country: Yup.string().max(255),\n              email: Yup\n                .string()\n                .email('Must be a valid email')\n                .max(255)\n                .required('Email is required'),\n              isPublic: Yup.bool(),\n              name: Yup\n                .string()\n                .max(255)\n                .required('Name is required'),\n              phone: Yup.string(),\n              state: Yup.string()\n            })}\n          onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n            try {\n              // NOTE: Make API request\n              await wait(200);\n              resetForm();\n              setStatus({ success: true });\n              setSubmitting(false);\n              toast.success('Profile updated!');\n            } catch (err) {\n              console.error(err);\n              toast.error('Something went wrong!');\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }}\n        >\n          {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n            <form onSubmit={handleSubmit}>\n              <Card>\n                <CardHeader title=\"Profile\" />\n                <Divider />\n                <CardContent>\n                  <Grid\n                    container\n                    spacing={4}\n                  >\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label=\"Name\"\n                        name=\"name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email\n                          ? errors.email\n                          : 'We will use this email to contact you'}\n                        label=\"Email Address\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        required\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.phone && errors.phone)}\n                        fullWidth\n                        helperText={touched.phone && errors.phone}\n                        label=\"Phone Number\"\n                        name=\"phone\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.phone}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <Autocomplete\n                        getOptionLabel={(option) => option.text}\n                        options={countries}\n                        renderInput={(params) => (\n                          <TextField\n                            fullWidth\n                            label=\"Country\"\n                            name=\"country\"\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            {...params}\n                          />\n                        )}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.state && errors.state)}\n                        fullWidth\n                        helperText={touched.state && errors.state}\n                        label=\"State/Region\"\n                        name=\"state\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.state}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.city && errors.city)}\n                        fullWidth\n                        helperText={touched.city && errors.city}\n                        label=\"City\"\n                        name=\"city\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.city}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"subtitle2\"\n                      >\n                        Public Profile\n                      </Typography>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                      >\n                        Means that anyone viewing your profile will\n                        be able to see your contacts details\n                      </Typography>\n                      <Switch\n                        checked={values.isPublic}\n                        color=\"primary\"\n                        edge=\"start\"\n                        name=\"isPublic\"\n                        onChange={handleChange}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"subtitle2\"\n                      >\n                        Available to hire\n                      </Typography>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                      >\n                        Toggling this will let your teammates know\n                        that you are available for acquiring new\n                        projects\n                      </Typography>\n                      <Switch\n                        checked={values.canHire}\n                        color=\"primary\"\n                        edge=\"start\"\n                        name=\"canHire\"\n                        onChange={handleChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  {errors.submit && (\n                    <Box sx={{ mt: 3 }}>\n                      <FormHelperText error>\n                        {errors.submit}\n                      </FormHelperText>\n                    </Box>\n                  )}\n                </CardContent>\n                <Divider />\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                    p: 2\n                  }}\n                >\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Save Changes\n                  </Button>\n                </Box>\n              </Card>\n            </form>\n          )}\n        </Formik>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AccountGeneralSettings;\n"]},"metadata":{},"sourceType":"module"}