{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCheckItemAdd.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { addCheckItem } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KanbanCheckItemAdd = props => {\n  _s();\n\n  const {\n    cardId,\n    checklistId,\n    ...other\n  } = props;\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleAdd = () => {\n    setIsExpanded(true);\n  };\n\n  const handleCancel = () => {\n    setIsExpanded(false);\n    setName('');\n  };\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      if (!name) {\n        return;\n      }\n\n      await dispatch(addCheckItem(cardId, checklistId, name));\n      setIsExpanded(false);\n      setName('');\n      toast.success('Check item added!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...other,\n    children: isExpanded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        onChange: handleChange,\n        placeholder: \"Add an item\",\n        value: name,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleCancel,\n          size: \"small\",\n          variant: \"text\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleSave,\n          size: \"small\",\n          sx: {\n            ml: 2\n          },\n          variant: \"contained\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: handleAdd,\n      size: \"small\",\n      variant: \"outlined\",\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KanbanCheckItemAdd, \"ZoQX2RA/6Pk/9CFFTL/f+1Issb0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = KanbanCheckItemAdd;\nKanbanCheckItemAdd.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  checklistId: PropTypes.string.isRequired\n};\nexport default KanbanCheckItemAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanCheckItemAdd\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCheckItemAdd.js"],"names":["useState","PropTypes","toast","Box","Button","TextField","addCheckItem","useDispatch","KanbanCheckItemAdd","props","cardId","checklistId","other","dispatch","name","setName","isExpanded","setIsExpanded","handleAdd","handleCancel","handleChange","event","target","value","handleSave","success","err","console","error","display","justifyContent","mt","ml","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { addCheckItem } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanCheckItemAdd = (props) => {\n  const { cardId, checklistId, ...other } = props;\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleAdd = () => {\n    setIsExpanded(true);\n  };\n\n  const handleCancel = () => {\n    setIsExpanded(false);\n    setName('');\n  };\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      if (!name) {\n        return;\n      }\n\n      await dispatch(addCheckItem(cardId, checklistId, name));\n      setIsExpanded(false);\n      setName('');\n      toast.success('Check item added!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return (\n    <div {...other}>\n      {isExpanded\n        ? (\n          <div>\n            <TextField\n              fullWidth\n              onChange={handleChange}\n              placeholder=\"Add an item\"\n              value={name}\n              variant=\"outlined\"\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                mt: 2\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={handleCancel}\n                size=\"small\"\n                variant=\"text\"\n              >\n                Cancel\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={handleSave}\n                size=\"small\"\n                sx={{ ml: 2 }}\n                variant=\"contained\"\n              >\n                Save\n              </Button>\n            </Box>\n          </div>\n        )\n        : (\n          <Button\n            color=\"primary\"\n            onClick={handleAdd}\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            Add Item\n          </Button>\n        )}\n    </div>\n  );\n};\n\nKanbanCheckItemAdd.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  checklistId: PropTypes.string.isRequired\n};\n\nexport default KanbanCheckItemAdd;\n"]},"metadata":{},"sourceType":"module"}