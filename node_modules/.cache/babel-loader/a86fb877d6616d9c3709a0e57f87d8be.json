{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/widgets/grouped-lists/GroupedList6.js\";\nimport { format, subDays } from 'date-fns';\nimport numeral from 'numeral';\nimport { Box, Card, CardHeader, Table, TableBody, TableCell, TableRow, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transactions = [{\n  id: 'd46800328cd510a668253b45',\n  amount: 25000,\n  currency: 'usd',\n  date: new Date(),\n  sender: 'Devias',\n  type: 'receive'\n}, {\n  id: 'b4b19b21656e44b487441c50',\n  amount: 6843,\n  currency: 'usd',\n  date: subDays(new Date(), 1),\n  sender: 'Zimbru',\n  type: 'send'\n}, {\n  id: '56c09ad91f6d44cb313397db',\n  amount: 91823,\n  currency: 'usd',\n  date: subDays(new Date(), 1),\n  sender: 'Vertical Jelly',\n  type: 'send'\n}, {\n  id: 'aaeb96c5a131a55d9623f44d',\n  amount: 49550,\n  currency: 'usd',\n  date: subDays(new Date(), 3),\n  sender: 'Devias',\n  type: 'receive'\n}];\n\nconst GroupedList6 = () => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    backgroundColor: 'background.default',\n    p: 3\n  },\n  children: /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Latest Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            width: 100,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                align: \"center\",\n                color: \"textSecondary\",\n                variant: \"subtitle2\",\n                children: format(transaction.date, 'LLL').toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"center\",\n                color: \"textSecondary\",\n                variant: \"h6\",\n                children: format(transaction.date, 'd')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"subtitle2\",\n                children: transaction.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: transaction.type === 'receive' ? 'Payment received' : 'Payment sent'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: transaction.type === 'receive' ? 'success.main' : 'error.main',\n              variant: \"subtitle2\",\n              children: [transaction.type === 'receive' ? '+' : '-', ' ', numeral(transaction.amount).format('$0,0.00')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: transaction.currency.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this);\n\n_c = GroupedList6;\nexport default GroupedList6;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupedList6\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/widgets/grouped-lists/GroupedList6.js"],"names":["format","subDays","numeral","Box","Card","CardHeader","Table","TableBody","TableCell","TableRow","Typography","transactions","id","amount","currency","date","Date","sender","type","GroupedList6","backgroundColor","p","map","transaction","border","toUpperCase"],"mappings":"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","sourcesContent":["import { format, subDays } from 'date-fns';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nconst transactions = [\n  {\n    id: 'd46800328cd510a668253b45',\n    amount: 25000,\n    currency: 'usd',\n    date: new Date(),\n    sender: 'Devias',\n    type: 'receive'\n  },\n  {\n    id: 'b4b19b21656e44b487441c50',\n    amount: 6843,\n    currency: 'usd',\n    date: subDays(new Date(), 1),\n    sender: 'Zimbru',\n    type: 'send'\n  },\n  {\n    id: '56c09ad91f6d44cb313397db',\n    amount: 91823,\n    currency: 'usd',\n    date: subDays(new Date(), 1),\n    sender: 'Vertical Jelly',\n    type: 'send'\n  },\n  {\n    id: 'aaeb96c5a131a55d9623f44d',\n    amount: 49550,\n    currency: 'usd',\n    date: subDays(new Date(), 3),\n    sender: 'Devias',\n    type: 'receive'\n  }\n];\n\nconst GroupedList6 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      p: 3\n    }}\n  >\n    <Card>\n      <CardHeader title=\"Latest Transactions\" />\n      <Table>\n        <TableBody>\n          {transactions.map((transaction) => (\n            <TableRow\n              key={transaction.id}\n              sx={{\n                '&:last-child td': {\n                  border: 0\n                }\n              }}\n            >\n              <TableCell width={100}>\n                <Box sx={{ p: 1 }}>\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"subtitle2\"\n                  >\n                    {format(transaction.date, 'LLL').toUpperCase()}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"h6\"\n                  >\n                    {format(transaction.date, 'd')}\n                  </Typography>\n                </Box>\n              </TableCell>\n              <TableCell>\n                <Box>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"subtitle2\"\n                  >\n                    {transaction.sender}\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    {transaction.type === 'receive'\n                      ? 'Payment received'\n                      : 'Payment sent'}\n                  </Typography>\n                </Box>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography\n                  color={transaction.type === 'receive'\n                    ? 'success.main'\n                    : 'error.main'}\n                  variant=\"subtitle2\"\n                >\n                  {transaction.type === 'receive' ? '+' : '-'}\n                  {' '}\n                  {numeral(transaction.amount).format('$0,0.00')}\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body2\"\n                >\n                  {transaction.currency.toUpperCase()}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Card>\n  </Box>\n);\n\nexport default GroupedList6;\n"]},"metadata":{},"sourceType":"module"}