{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/account/AccountSecuritySettings.js\";\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, FormHelperText, Grid, TextField } from '@material-ui/core';\nimport wait from '../../../utils/wait';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountSecuritySettings = props => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    password: '',\n    passwordConfirm: '',\n    submit: null\n  },\n  validationSchema: Yup.object().shape({\n    password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n    passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required')\n  }),\n  onSubmit: async (values, {\n    resetForm,\n    setErrors,\n    setStatus,\n    setSubmitting\n  }) => {\n    try {\n      // NOTE: Make API request\n      await wait(500);\n      resetForm();\n      setStatus({\n        success: true\n      });\n      setSubmitting(false);\n      toast.success('Password updated!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n      setStatus({\n        success: false\n      });\n      setErrors({\n        submit: err.message\n      });\n      setSubmitting(false);\n    }\n  },\n  children: ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    values\n  }) => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.password && errors.password),\n              fullWidth: true,\n              helperText: touched.password && errors.password,\n              label: \"Password\",\n              name: \"password\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"password\",\n              value: values.password,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.passwordConfirm && errors.passwordConfirm),\n              fullWidth: true,\n              helperText: touched.passwordConfirm && errors.passwordConfirm,\n              label: \"Password Confirmation\",\n              name: \"passwordConfirm\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"password\",\n              value: values.passwordConfirm,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: isSubmitting,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n\n_c = AccountSecuritySettings;\nexport default AccountSecuritySettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSecuritySettings\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/account/AccountSecuritySettings.js"],"names":["toast","Yup","Formik","Box","Button","Card","CardContent","CardHeader","Divider","FormHelperText","Grid","TextField","wait","AccountSecuritySettings","props","password","passwordConfirm","submit","object","shape","string","min","max","required","oneOf","ref","values","resetForm","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","mt","display","justifyContent","p"],"mappings":"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","sourcesContent":["import toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport wait from '../../../utils/wait';\n\nconst AccountSecuritySettings = (props) => (\n  <Formik\n    initialValues={{\n      password: '',\n      passwordConfirm: '',\n      submit: null\n    }}\n    validationSchema={Yup\n      .object()\n      .shape({\n        password: Yup\n          .string()\n          .min(7, 'Must be at least 7 characters')\n          .max(255)\n          .required('Required'),\n        passwordConfirm: Yup\n          .string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Required')\n      })}\n    onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n      try {\n        // NOTE: Make API request\n        await wait(500);\n        resetForm();\n        setStatus({ success: true });\n        setSubmitting(false);\n        toast.success('Password updated!');\n      } catch (err) {\n        console.error(err);\n        toast.error('Something went wrong!');\n        setStatus({ success: false });\n        setErrors({ submit: err.message });\n        setSubmitting(false);\n      }\n    }}\n  >\n    {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n      <form\n        onSubmit={handleSubmit}\n        {...props}\n      >\n        <Card>\n          <CardHeader title=\"Change Password\" />\n          <Divider />\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={4}\n                sm={6}\n                xs={12}\n              >\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={4}\n                sm={6}\n                xs={12}\n              >\n                <TextField\n                  error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                  fullWidth\n                  helperText={touched.passwordConfirm && errors.passwordConfirm}\n                  label=\"Password Confirmation\"\n                  name=\"passwordConfirm\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.passwordConfirm}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>\n                  {errors.submit}\n                </FormHelperText>\n              </Box>\n            )}\n          </CardContent>\n          <Divider />\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              p: 2\n            }}\n          >\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Change Password\n            </Button>\n          </Box>\n        </Card>\n      </form>\n    )}\n  </Formik>\n);\n\nexport default AccountSecuritySettings;\n"]},"metadata":{},"sourceType":"module"}