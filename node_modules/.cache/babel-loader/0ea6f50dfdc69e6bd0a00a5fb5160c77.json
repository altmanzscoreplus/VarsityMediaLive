{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/mail/MailLabel.js\";\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Box, ButtonBase, ListItem, Typography } from '@material-ui/core';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport LabelIcon from '@material-ui/icons/Label';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarIcon from '@material-ui/icons/Star';\nimport ExclamationCircle from '../../../icons/ExclamationCircle';\nimport InboxIcon from '../../../icons/Inbox';\nimport MailIcon from '../../../icons/Mail';\nimport TrashIcon from '../../../icons/Trash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst systemLabelIcons = {\n  all: MailIcon,\n  inbox: InboxIcon,\n  trash: TrashIcon,\n  drafts: DraftsIcon,\n  spam: ExclamationCircle,\n  sent: SendIcon,\n  starred: StarIcon,\n  important: LabelImportantIcon\n};\n\nconst getIcon = label => {\n  if (label.type === 'system_label') {\n    return systemLabelIcons[label.id];\n  }\n\n  return LabelIcon;\n};\n\nconst getTo = label => {\n  const baseUrl = '/dashboard/mail';\n\n  if (label.type === 'system_label') {\n    return `${baseUrl}/${label.id}`;\n  }\n\n  if (label.type === 'custom_label') {\n    return `${baseUrl}/label/${label.name}`;\n  }\n\n  return baseUrl;\n};\n\nconst getColor = label => {\n  if (label.type === 'custom_label') {\n    return label.color;\n  }\n\n  return null;\n};\n\nconst MailLabel = props => {\n  const {\n    label,\n    ...other\n  } = props;\n  const Icon = getIcon(label);\n  const to = getTo(label);\n  const color = getColor(label);\n  const displayUnreadCount = Boolean(label.unreadCount && label.unreadCount > 0);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    disableGutters: true,\n    sx: {\n      py: 1\n    },\n    ...other,\n    children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n      activeClassName: \"exactMatch\",\n      component: RouterLink,\n      sx: {\n        borderBottomRightRadius: '18px',\n        borderTopRightRadius: '18px',\n        color: 'text.secondary',\n        flexGrow: 1,\n        fontWeight: 'fontWeightRegular',\n        height: '36px',\n        paddingLeft: '32px',\n        paddingRight: '18px',\n        '&:hover': {\n          backgroundColor: 'action.hover'\n        },\n        '&.exactMatch': {\n          backgroundColor: 'action.selected',\n          fontWeight: 'fontWeightMedium'\n        }\n      },\n      to: to,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          color: \"inherit\",\n          style: {\n            color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          flexGrow: 1,\n          fontWeight: 'inherit'\n        },\n        variant: \"body2\",\n        children: label.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), displayUnreadCount && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        variant: \"caption\",\n        children: label.unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MailLabel;\nMailLabel.propTypes = {\n  label: PropTypes.object.isRequired\n};\nexport default MailLabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailLabel\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/mail/MailLabel.js"],"names":["NavLink","RouterLink","PropTypes","Box","ButtonBase","ListItem","Typography","DraftsIcon","LabelIcon","LabelImportantIcon","SendIcon","StarIcon","ExclamationCircle","InboxIcon","MailIcon","TrashIcon","systemLabelIcons","all","inbox","trash","drafts","spam","sent","starred","important","getIcon","label","type","id","getTo","baseUrl","name","getColor","color","MailLabel","props","other","Icon","to","displayUnreadCount","Boolean","unreadCount","py","borderBottomRightRadius","borderTopRightRadius","flexGrow","fontWeight","height","paddingLeft","paddingRight","backgroundColor","display","mr","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import { NavLink as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Box, ButtonBase, ListItem, Typography } from '@material-ui/core';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport LabelIcon from '@material-ui/icons/Label';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarIcon from '@material-ui/icons/Star';\nimport ExclamationCircle from '../../../icons/ExclamationCircle';\nimport InboxIcon from '../../../icons/Inbox';\nimport MailIcon from '../../../icons/Mail';\nimport TrashIcon from '../../../icons/Trash';\n\nconst systemLabelIcons = {\n  all: MailIcon,\n  inbox: InboxIcon,\n  trash: TrashIcon,\n  drafts: DraftsIcon,\n  spam: ExclamationCircle,\n  sent: SendIcon,\n  starred: StarIcon,\n  important: LabelImportantIcon\n};\n\nconst getIcon = (label) => {\n  if (label.type === 'system_label') {\n    return systemLabelIcons[label.id];\n  }\n\n  return LabelIcon;\n};\n\nconst getTo = (label) => {\n  const baseUrl = '/dashboard/mail';\n\n  if (label.type === 'system_label') {\n    return `${baseUrl}/${label.id}`;\n  }\n\n  if (label.type === 'custom_label') {\n    return `${baseUrl}/label/${label.name}`;\n  }\n\n  return baseUrl;\n};\n\nconst getColor = (label) => {\n  if (label.type === 'custom_label') {\n    return label.color;\n  }\n\n  return null;\n};\n\nconst MailLabel = (props) => {\n  const { label, ...other } = props;\n\n  const Icon = getIcon(label);\n  const to = getTo(label);\n  const color = getColor(label);\n  const displayUnreadCount = Boolean(label.unreadCount && label.unreadCount > 0);\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{ py: 1 }}\n      {...other}\n    >\n      <ButtonBase\n        activeClassName=\"exactMatch\"\n        component={RouterLink}\n        sx={{\n          borderBottomRightRadius: '18px',\n          borderTopRightRadius: '18px',\n          color: 'text.secondary',\n          flexGrow: 1,\n          fontWeight: 'fontWeightRegular',\n          height: '36px',\n          paddingLeft: '32px',\n          paddingRight: '18px',\n          '&:hover': {\n            backgroundColor: 'action.hover'\n          },\n          '&.exactMatch': {\n            backgroundColor: 'action.selected',\n            fontWeight: 'fontWeightMedium'\n          }\n        }}\n        to={to}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            mr: 1\n          }}\n        >\n          <Icon\n            color=\"inherit\"\n            style={{ color }}\n          />\n        </Box>\n        <Typography\n          sx={{\n            flexGrow: 1,\n            fontWeight: 'inherit'\n          }}\n          variant=\"body2\"\n        >\n          {label.name}\n        </Typography>\n        {displayUnreadCount && (\n          <Typography\n            color=\"inherit\"\n            variant=\"caption\"\n          >\n            {label.unreadCount}\n          </Typography>\n        )}\n      </ButtonBase>\n    </ListItem>\n  );\n};\n\nMailLabel.propTypes = {\n  label: PropTypes.object.isRequired\n};\n\nexport default MailLabel;\n"]},"metadata":{},"sourceType":"module"}