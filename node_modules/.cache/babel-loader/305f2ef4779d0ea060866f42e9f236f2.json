{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/project/ProjectMetadata.js\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport { Avatar, Card, CardContent, CardHeader, Link, List, ListItem, Typography } from '@material-ui/core';\nimport getInitials from '../../../utils/getInitials';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectMetadata = props => {\n  const {\n    authorAvatar,\n    authorName,\n    budget,\n    currency,\n    endDate,\n    updatedAt,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Card, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        component: RouterLink,\n        src: authorAvatar,\n        to: \"#\",\n        children: getInitials(authorName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this),\n      disableTypography: true,\n      subheader: /*#__PURE__*/_jsxDEV(Link, {\n        color: \"textPrimary\",\n        component: RouterLink,\n        to: \"#\",\n        underline: \"none\",\n        variant: \"subtitle2\",\n        children: authorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this),\n      style: {\n        paddingBottom: 0\n      },\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        display: \"block\",\n        variant: \"overline\",\n        children: \"Contest holder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        pt: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          disableGutters: true,\n          divider: true,\n          sx: {\n            justifyContent: 'space-between',\n            padding: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"subtitle2\",\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: format(endDate, 'dd MMM yyyy')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          disableGutters: true,\n          divider: true,\n          sx: {\n            justifyContent: 'space-between',\n            padding: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"subtitle2\",\n            children: \"Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: numeral(budget).format(`${currency}0,0.00`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          disableGutters: true,\n          sx: {\n            justifyContent: 'space-between',\n            padding: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"subtitle2\",\n            children: \"Last Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: format(updatedAt, 'dd MMM yyyy')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProjectMetadata;\nProjectMetadata.propTypes = {\n  authorAvatar: PropTypes.string.isRequired,\n  authorName: PropTypes.string.isRequired,\n  budget: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n  endDate: PropTypes.number.isRequired,\n  updatedAt: PropTypes.number.isRequired\n};\nexport default ProjectMetadata;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectMetadata\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/project/ProjectMetadata.js"],"names":["Link","RouterLink","PropTypes","format","numeral","Avatar","Card","CardContent","CardHeader","List","ListItem","Typography","getInitials","ProjectMetadata","props","authorAvatar","authorName","budget","currency","endDate","updatedAt","other","paddingBottom","pt","justifyContent","padding","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Link,\n  List,\n  ListItem,\n  Typography\n} from '@material-ui/core';\nimport getInitials from '../../../utils/getInitials';\n\nconst ProjectMetadata = (props) => {\n  const { authorAvatar, authorName, budget, currency, endDate, updatedAt, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader\n        avatar={(\n          <Avatar\n            component={RouterLink}\n            src={authorAvatar}\n            to=\"#\"\n          >\n            {getInitials(authorName)}\n          </Avatar>\n        )}\n        disableTypography\n        subheader={(\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            underline=\"none\"\n            variant=\"subtitle2\"\n          >\n            {authorName}\n          </Link>\n        )}\n        style={{ paddingBottom: 0 }}\n        title={(\n          <Typography\n            color=\"textSecondary\"\n            display=\"block\"\n            variant=\"overline\"\n          >\n            Contest holder\n          </Typography>\n        )}\n      />\n      <CardContent sx={{ pt: 0 }}>\n        <List>\n          <ListItem\n            disableGutters\n            divider\n            sx={{\n              justifyContent: 'space-between',\n              padding: 2\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Deadline\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {format(endDate, 'dd MMM yyyy')}\n            </Typography>\n          </ListItem>\n          <ListItem\n            disableGutters\n            divider\n            sx={{\n              justifyContent: 'space-between',\n              padding: 2\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Budget\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {numeral(budget).format(`${currency}0,0.00`)}\n            </Typography>\n          </ListItem>\n          <ListItem\n            disableGutters\n            sx={{\n              justifyContent: 'space-between',\n              padding: 2\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Last Update\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {format(updatedAt, 'dd MMM yyyy')}\n            </Typography>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectMetadata.propTypes = {\n  authorAvatar: PropTypes.string.isRequired,\n  authorName: PropTypes.string.isRequired,\n  budget: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n  endDate: PropTypes.number.isRequired,\n  updatedAt: PropTypes.number.isRequired\n};\n\nexport default ProjectMetadata;\n"]},"metadata":{},"sourceType":"module"}