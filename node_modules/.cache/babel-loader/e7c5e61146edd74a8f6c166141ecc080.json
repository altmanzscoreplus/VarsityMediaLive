{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/customer/CustomerListTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Button, Card, Checkbox, Divider, IconButton, InputAdornment, Link, Tab, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Tabs, TextField, Typography } from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport getInitials from '../../../utils/getInitials';\nimport Scrollbar from '../../Scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Accepts Marketing',\n  value: 'hasAcceptedMarketing'\n}, {\n  label: 'Prospect',\n  value: 'isProspect'\n}, {\n  label: 'Returning',\n  value: 'isReturning'\n}];\nconst sortOptions = [{\n  label: 'Last update (newest)',\n  value: 'updatedAt|desc'\n}, {\n  label: 'Last update (oldest)',\n  value: 'updatedAt|asc'\n}, {\n  label: 'Total orders (highest)',\n  value: 'orders|desc'\n}, {\n  label: 'Total orders (lowest)',\n  value: 'orders|asc'\n}];\n\nconst applyFilters = (customers, query, filters) => customers.filter(customer => {\n  let matches = true;\n\n  if (query) {\n    const properties = ['email', 'name'];\n    let containsQuery = false;\n    properties.forEach(property => {\n      if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n        containsQuery = true;\n      }\n    });\n\n    if (!containsQuery) {\n      matches = false;\n    }\n  }\n\n  Object.keys(filters).forEach(key => {\n    const value = filters[key];\n\n    if (value && customer[key] !== value) {\n      matches = false;\n    }\n  });\n  return matches;\n});\n\nconst applyPagination = (customers, page, limit) => customers.slice(page * limit, page * limit + limit);\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n\nconst applySort = (customers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n};\n\nconst CustomerListTable = props => {\n  _s();\n\n  const {\n    customers,\n    ...other\n  } = props;\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = { ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedCustomers([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = event => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllCustomers = event => {\n    setSelectedCustomers(event.target.checked ? customers.map(customer => customer.id) : []);\n  };\n\n  const handleSelectOneCustomer = (event, customerId) => {\n    if (!selectedCustomers.includes(customerId)) {\n      setSelectedCustomers(prevSelected => [...prevSelected, customerId]);\n    } else {\n      setSelectedCustomers(prevSelected => prevSelected.filter(id => id !== customerId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  const enableBulkActions = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0 && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n  return /*#__PURE__*/_jsxDEV(Card, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      indicatorColor: \"primary\",\n      onChange: handleTabsChange,\n      scrollButtons: \"auto\",\n      textColor: \"primary\",\n      value: currentTab,\n      variant: \"scrollable\",\n      children: tabs.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n        label: tab.label,\n        value: tab.value\n      }, tab.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        m: -1,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          maxWidth: '100%',\n          width: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          },\n          onChange: handleQueryChange,\n          placeholder: \"Search customers\",\n          value: query,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          width: 240\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Sort By\",\n          name: \"sort\",\n          onChange: handleSortChange,\n          select: true,\n          SelectProps: {\n            native: true\n          },\n          value: sort,\n          variant: \"outlined\",\n          children: sortOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), enableBulkActions && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundColor: 'background.paper',\n          mt: '6px',\n          position: 'absolute',\n          px: '4px',\n          width: '100%',\n          zIndex: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: selectedAllCustomers,\n          color: \"primary\",\n          indeterminate: selectedSomeCustomers,\n          onChange: handleSelectAllCustomers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          sx: {\n            ml: 2\n          },\n          variant: \"outlined\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          sx: {\n            ml: 2\n          },\n          variant: \"outlined\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 700\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedAllCustomers,\n                  color: \"primary\",\n                  indeterminate: selectedSomeCustomers,\n                  onChange: handleSelectAllCustomers\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Spent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: paginatedCustomers.map(customer => {\n              const isCustomerSelected = selectedCustomers.includes(customer.id);\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                selected: isCustomerSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isCustomerSelected,\n                    color: \"primary\",\n                    onChange: event => handleSelectOneCustomer(event, customer.id),\n                    value: isCustomerSelected\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      alignItems: 'center',\n                      display: 'flex'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                      src: customer.avatar,\n                      sx: {\n                        height: 42,\n                        width: 42\n                      },\n                      children: getInitials(customer.name)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        ml: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Link, {\n                        color: \"inherit\",\n                        component: RouterLink,\n                        to: \"/dashboard/customers/1\",\n                        variant: \"subtitle2\",\n                        children: customer.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        color: \"textSecondary\",\n                        variant: \"body2\",\n                        children: customer.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: `${customer.city}, ${customer.state}, ${customer.country}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: customer.totalOrders\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: numeral(customer.totalAmountSpent).format(`${customer.currency}0,0.00`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    component: RouterLink,\n                    to: \"/dashboard/customers/1/edit\",\n                    children: /*#__PURE__*/_jsxDEV(PencilAltIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    component: RouterLink,\n                    to: \"/dashboard/customers/1\",\n                    children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)]\n              }, customer.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: filteredCustomers.length,\n      onPageChange: handlePageChange,\n      onRowsPerPageChange: handleLimitChange,\n      page: page,\n      rowsPerPage: limit,\n      rowsPerPageOptions: [5, 10, 25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerListTable, \"ybwT1LuCRRtniCr35um5B0FrYgo=\");\n\n_c = CustomerListTable;\nCustomerListTable.propTypes = {\n  customers: PropTypes.array.isRequired\n};\nexport default CustomerListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerListTable\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/customer/CustomerListTable.js"],"names":["useState","Link","RouterLink","numeral","PropTypes","Avatar","Box","Button","Card","Checkbox","Divider","IconButton","InputAdornment","Tab","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Tabs","TextField","Typography","ArrowRightIcon","PencilAltIcon","SearchIcon","getInitials","Scrollbar","tabs","label","value","sortOptions","applyFilters","customers","query","filters","filter","customer","matches","properties","containsQuery","forEach","property","toLowerCase","includes","Object","keys","key","applyPagination","page","limit","slice","descendingComparator","a","b","orderBy","getComparator","order","applySort","sort","split","comparator","stabilizedThis","map","el","index","newOrder","CustomerListTable","props","other","currentTab","setCurrentTab","selectedCustomers","setSelectedCustomers","setPage","setLimit","setQuery","setSort","setFilters","hasAcceptedMarketing","isProspect","isReturning","handleTabsChange","event","updatedFilters","handleQueryChange","target","handleSortChange","handleSelectAllCustomers","checked","id","handleSelectOneCustomer","customerId","prevSelected","handlePageChange","newPage","handleLimitChange","parseInt","filteredCustomers","sortedCustomers","paginatedCustomers","enableBulkActions","length","selectedSomeCustomers","selectedAllCustomers","tab","alignItems","display","flexWrap","m","p","maxWidth","width","startAdornment","native","option","position","backgroundColor","mt","px","zIndex","ml","minWidth","isCustomerSelected","avatar","height","name","email","city","state","country","totalOrders","totalAmountSpent","format","currency","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  IconButton,\n  InputAdornment,\n  Link,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tabs,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport getInitials from '../../../utils/getInitials';\nimport Scrollbar from '../../Scrollbar';\n\nconst tabs = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Accepts Marketing',\n    value: 'hasAcceptedMarketing'\n  },\n  {\n    label: 'Prospect',\n    value: 'isProspect'\n  },\n  {\n    label: 'Returning',\n    value: 'isReturning'\n  }\n];\n\nconst sortOptions = [\n  {\n    label: 'Last update (newest)',\n    value: 'updatedAt|desc'\n  },\n  {\n    label: 'Last update (oldest)',\n    value: 'updatedAt|asc'\n  },\n  {\n    label: 'Total orders (highest)',\n    value: 'orders|desc'\n  },\n  {\n    label: 'Total orders (lowest)',\n    value: 'orders|asc'\n  }\n];\n\nconst applyFilters = (customers, query, filters) => customers\n  .filter((customer) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n\nconst applyPagination = (customers, page, limit) => customers\n  .slice(page * limit, page * limit + limit);\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => (order === 'desc'\n  ? (a, b) => descendingComparator(a, b, orderBy)\n  : (a, b) => -descendingComparator(a, b, orderBy));\n\nconst applySort = (customers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst CustomerListTable = (props) => {\n  const { customers, ...other } = props;\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedCustomers([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllCustomers = (event) => {\n    setSelectedCustomers(event.target.checked\n      ? customers.map((customer) => customer.id)\n      : []);\n  };\n\n  const handleSelectOneCustomer = (event, customerId) => {\n    if (!selectedCustomers.includes(customerId)) {\n      setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n    } else {\n      setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  const enableBulkActions = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0\n    && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <Card {...other}>\n      <Tabs\n        indicatorColor=\"primary\"\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        textColor=\"primary\"\n        value={currentTab}\n        variant=\"scrollable\"\n      >\n        {tabs.map((tab) => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search customers\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            width: 240\n          }}\n        >\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllCustomers}\n              color=\"primary\"\n              indeterminate={selectedSomeCustomers}\n              onChange={handleSelectAllCustomers}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCustomers}\n                    color=\"primary\"\n                    indeterminate={selectedSomeCustomers}\n                    onChange={handleSelectAllCustomers}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Orders\n                </TableCell>\n                <TableCell>\n                  Spent\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n                const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={isCustomerSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCustomerSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                        value={isCustomerSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Avatar\n                          src={customer.avatar}\n                          sx={{\n                            height: 42,\n                            width: 42\n                          }}\n                        >\n                          {getInitials(customer.name)}\n                        </Avatar>\n                        <Box sx={{ ml: 1 }}>\n                          <Link\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to=\"/dashboard/customers/1\"\n                            variant=\"subtitle2\"\n                          >\n                            {customer.name}\n                          </Link>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"body2\"\n                          >\n                            {customer.email}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.city}, ${customer.state}, ${customer.country}`}\n                    </TableCell>\n                    <TableCell>\n                      {customer.totalOrders}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(customer.totalAmountSpent)\n                        .format(`${customer.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/customers/1/edit\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/customers/1\"\n                      >\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCustomers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nCustomerListTable.propTypes = {\n  customers: PropTypes.array.isRequired\n};\n\nexport default CustomerListTable;\n"]},"metadata":{},"sourceType":"module"}