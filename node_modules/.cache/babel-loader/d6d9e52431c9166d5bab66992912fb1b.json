{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/project/ProjectApplicantCard.js\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Card, CardContent, CardMedia, Chip, Divider, Link, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectApplicantCard = props => {\n  const {\n    avatar,\n    cover,\n    name,\n    skills,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Card, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      image: cover,\n      sx: {\n        height: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        pt: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mb: 2,\n          mt: '-50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Applicant\",\n          component: RouterLink,\n          src: avatar,\n          sx: {\n            border: '3px solid #FFFFFF',\n            height: 100,\n            width: 100\n          },\n          to: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        align: \"center\",\n        color: \"textPrimary\",\n        component: RouterLink,\n        display: \"block\",\n        to: \"#\",\n        underline: \"none\",\n        variant: \"h6\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: [6, ' ', \"contacts in common\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: -0.5\n        },\n        children: skills.map(skill => /*#__PURE__*/_jsxDEV(Chip, {\n          label: skill,\n          sx: {\n            m: 0.5\n          },\n          variant: \"outlined\"\n        }, skill, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProjectApplicantCard;\nProjectApplicantCard.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  cover: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  skills: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default ProjectApplicantCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectApplicantCard\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/project/ProjectApplicantCard.js"],"names":["Link","RouterLink","PropTypes","Avatar","Box","Card","CardContent","CardMedia","Chip","Divider","Typography","ProjectApplicantCard","props","avatar","cover","name","skills","other","height","pt","display","justifyContent","mb","mt","border","width","my","m","map","skill","propTypes","string","isRequired","arrayOf"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Chip,\n  Divider,\n  Link,\n  Typography\n} from '@material-ui/core';\n\nconst ProjectApplicantCard = (props) => {\n  const { avatar, cover, name, skills, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardMedia\n        image={cover}\n        sx={{ height: 200 }}\n      />\n      <CardContent sx={{ pt: 0 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            mb: 2,\n            mt: '-50px'\n          }}\n        >\n          <Avatar\n            alt=\"Applicant\"\n            component={RouterLink}\n            src={avatar}\n            sx={{\n              border: '3px solid #FFFFFF',\n              height: 100,\n              width: 100\n            }}\n            to=\"#\"\n          />\n        </Box>\n        <Link\n          align=\"center\"\n          color=\"textPrimary\"\n          component={RouterLink}\n          display=\"block\"\n          to=\"#\"\n          underline=\"none\"\n          variant=\"h6\"\n        >\n          {name}\n        </Link>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {6}\n          {' '}\n          contacts in common\n        </Typography>\n        <Divider sx={{ my: 2 }} />\n        <Box sx={{ m: -0.5 }}>\n          {skills.map((skill) => (\n            <Chip\n              key={skill}\n              label={skill}\n              sx={{ m: 0.5 }}\n              variant=\"outlined\"\n            />\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectApplicantCard.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  cover: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  skills: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default ProjectApplicantCard;\n"]},"metadata":{},"sourceType":"module"}