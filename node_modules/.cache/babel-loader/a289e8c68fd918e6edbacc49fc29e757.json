{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/chat/ChatMessage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { Lightbox } from 'react-modal-image';\nimport { Avatar, Box, Link, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatMessage = props => {\n  _s();\n\n  const {\n    body,\n    contentType,\n    createdAt,\n    senderAvatar,\n    senderName,\n    senderType,\n    ...other\n  } = props;\n  const [expandMedia, setExpandMedia] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      mb: 2\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: senderType === 'user' ? 'row-reverse' : 'row',\n        maxWidth: 500,\n        ml: senderType === 'user' ? 'auto' : 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: senderAvatar,\n        sx: {\n          height: 32,\n          ml: senderType === 'user' ? 2 : 0,\n          mr: senderType === 'user' ? 0 : 2,\n          width: 32\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            backgroundColor: senderType === 'user' ? 'primary.main' : 'background.paper',\n            borderRadius: 1,\n            boxShadow: 1,\n            color: senderType === 'user' ? 'primary.contrastText' : 'text.primary',\n            px: 2,\n            py: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            color: \"inherit\",\n            component: RouterLink,\n            to: \"#\",\n            variant: \"subtitle2\",\n            children: senderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: contentType === 'image' ? /*#__PURE__*/_jsxDEV(Box, {\n              onClick: () => setExpandMedia(true),\n              sx: {\n                mt: 2,\n                '& img': {\n                  cursor: 'pointer',\n                  height: 'auto',\n                  maxWidth: '100%',\n                  width: 380\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"Attachment\",\n                src: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"inherit\",\n              variant: \"body1\",\n              children: body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: senderType === 'user' ? 'flex-end' : 'flex-start',\n            mt: 1,\n            px: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            noWrap: true,\n            variant: \"caption\",\n            children: [formatDistanceToNowStrict(createdAt), ' ', \"ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), expandMedia && /*#__PURE__*/_jsxDEV(Lightbox, {\n      large: body,\n      onClose: () => setExpandMedia(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatMessage, \"B52O6b0YXQfrcW1o0s4D/DYGqAs=\");\n\n_c = ChatMessage;\nChatMessage.propTypes = {\n  body: PropTypes.string.isRequired,\n  contentType: PropTypes.string.isRequired,\n  createdAt: PropTypes.number.isRequired,\n  senderAvatar: PropTypes.string.isRequired,\n  senderName: PropTypes.string.isRequired,\n  senderType: PropTypes.oneOf(['contact', 'user'])\n};\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/chat/ChatMessage.js"],"names":["useState","Link","RouterLink","PropTypes","formatDistanceToNowStrict","Lightbox","Avatar","Box","Typography","ChatMessage","props","body","contentType","createdAt","senderAvatar","senderName","senderType","other","expandMedia","setExpandMedia","display","mb","flexDirection","maxWidth","ml","height","mr","width","backgroundColor","borderRadius","boxShadow","color","px","py","mt","cursor","justifyContent","propTypes","string","isRequired","number","oneOf"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { Lightbox } from 'react-modal-image';\nimport { Avatar, Box, Link, Typography } from '@material-ui/core';\n\nconst ChatMessage = (props) => {\n  const { body, contentType, createdAt, senderAvatar, senderName, senderType, ...other } = props;\n  const [expandMedia, setExpandMedia] = useState(false);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        mb: 2\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: senderType === 'user'\n            ? 'row-reverse'\n            : 'row',\n          maxWidth: 500,\n          ml: senderType === 'user' ? 'auto' : 0\n        }}\n      >\n        <Avatar\n          src={senderAvatar}\n          sx={{\n            height: 32,\n            ml: senderType === 'user' ? 2 : 0,\n            mr: senderType === 'user' ? 0 : 2,\n            width: 32\n          }}\n        />\n        <div>\n          <Box\n            sx={{\n              backgroundColor: senderType === 'user'\n                ? 'primary.main'\n                : 'background.paper',\n              borderRadius: 1,\n              boxShadow: 1,\n              color: senderType === 'user'\n                ? 'primary.contrastText'\n                : 'text.primary',\n              px: 2,\n              py: 1\n            }}\n          >\n            <Link\n              color=\"inherit\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"subtitle2\"\n            >\n              {senderName}\n            </Link>\n            <Box sx={{ mt: 1 }}>\n              {contentType === 'image'\n                ? (\n                  <Box\n                    onClick={() => setExpandMedia(true)}\n                    sx={{\n                      mt: 2,\n                      '& img': {\n                        cursor: 'pointer',\n                        height: 'auto',\n                        maxWidth: '100%',\n                        width: 380\n                      }\n                    }}\n                  >\n                    <img\n                      alt=\"Attachment\"\n                      src={body}\n                    />\n                  </Box>\n                )\n                : (\n                  <Typography\n                    color=\"inherit\"\n                    variant=\"body1\"\n                  >\n                    {body}\n                  </Typography>\n                )}\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: senderType === 'user'\n                ? 'flex-end'\n                : 'flex-start',\n              mt: 1,\n              px: 2\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              {formatDistanceToNowStrict(createdAt)}\n              {' '}\n              ago\n            </Typography>\n          </Box>\n        </div>\n      </Box>\n      {expandMedia && (\n        <Lightbox\n          large={body}\n          onClose={() => setExpandMedia(true)}\n        />\n      )}\n    </Box>\n  );\n};\n\nChatMessage.propTypes = {\n  body: PropTypes.string.isRequired,\n  contentType: PropTypes.string.isRequired,\n  createdAt: PropTypes.number.isRequired,\n  senderAvatar: PropTypes.string.isRequired,\n  senderName: PropTypes.string.isRequired,\n  senderType: PropTypes.oneOf(['contact', 'user'])\n};\n\nexport default ChatMessage;\n"]},"metadata":{},"sourceType":"module"}