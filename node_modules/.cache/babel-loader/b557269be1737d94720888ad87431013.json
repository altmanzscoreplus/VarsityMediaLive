{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/project/ProjectBrowseResults.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Grid, ListItemText, Menu, MenuItem, Pagination, ToggleButton, ToggleButtonGroup, Typography } from '@material-ui/core';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ProjectCard from './ProjectCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectBrowseResults = props => {\n  _s();\n\n  const {\n    projects,\n    ...other\n  } = props;\n  const sortRef = useRef(null);\n  const [openSort, setOpenSort] = useState(false);\n  const [selectedSort, setSelectedSort] = useState('Most popular');\n  const [mode, setMode] = useState('grid');\n\n  const handleSortOpen = () => {\n    setOpenSort(true);\n  };\n\n  const handleSortClose = () => {\n    setOpenSort(false);\n  };\n\n  const handleSortSelect = value => {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        sx: {\n          position: 'relative',\n          '&:after': {\n            backgroundColor: 'primary.main',\n            bottom: '-8px',\n            content: '\" \"',\n            height: '3px',\n            left: 0,\n            position: 'absolute',\n            width: '48px'\n          }\n        },\n        variant: \"h5\",\n        children: [\"Showing\", ' ', projects.length, ' ', \"projects\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: 'center',\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleSortOpen,\n          ref: sortRef,\n          sx: {\n            textTransform: 'none',\n            letterSpacing: 0,\n            mr: 2\n          },\n          variant: \"text\",\n          children: [selectedSort, /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          exclusive: true,\n          onChange: handleModeChange,\n          size: \"small\",\n          value: mode,\n          children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"grid\",\n            children: /*#__PURE__*/_jsxDEV(ViewModuleIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: mode === 'grid' ? 4 : 12,\n        sm: mode === 'grid' ? 6 : 12,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n          project: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 6\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: sortRef.current,\n      elevation: 1,\n      onClose: handleSortClose,\n      open: openSort,\n      children: ['Most recent', 'Popular', 'Price high', 'Price low', 'On sale'].map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleSortSelect(option),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectBrowseResults, \"MIhJ5kG7brHOpwR9DGQeNY3RsQ8=\");\n\n_c = ProjectBrowseResults;\nProjectBrowseResults.propTypes = {\n  projects: PropTypes.array.isRequired\n};\nexport default ProjectBrowseResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectBrowseResults\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/project/ProjectBrowseResults.js"],"names":["useRef","useState","PropTypes","Box","Button","Grid","ListItemText","Menu","MenuItem","Pagination","ToggleButton","ToggleButtonGroup","Typography","ViewModuleIcon","ArrowDropDownIcon","ProjectCard","ProjectBrowseResults","props","projects","other","sortRef","openSort","setOpenSort","selectedSort","setSelectedSort","mode","setMode","handleSortOpen","handleSortClose","handleSortSelect","value","handleModeChange","event","alignItems","display","flexWrap","justifyContent","mb","position","backgroundColor","bottom","content","height","left","width","length","textTransform","letterSpacing","mr","map","project","id","mt","current","option","propTypes","array","isRequired"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,YAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,UAPF,EAQEC,YARF,EASEC,iBATF,EAUEC,UAVF,QAWO,mBAXP;AAYA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBF,KAA/B;AACA,QAAMG,OAAO,GAAGpB,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,cAAD,CAAhD;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,MAAD,CAAhC;;AAEA,QAAM0B,cAAc,GAAG,MAAM;AAC3BL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMM,eAAe,GAAG,MAAM;AAC5BN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,QAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAClCN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAR,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,QAAMS,gBAAgB,GAAG,CAACC,KAAD,EAAQF,KAAR,KAAkB;AACzCJ,IAAAA,OAAO,CAACI,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE,oBAASX,KAAT;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFc,QAAAA,UAAU,EAAE,QADV;AAEFC,QAAAA,OAAO,EAAE,MAFP;AAGFC,QAAAA,QAAQ,EAAE,MAHR;AAIFC,QAAAA,cAAc,EAAE,eAJd;AAKFC,QAAAA,EAAE,EAAE;AALF,OADN;AAAA,8BASE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,EAAE,EAAE;AACFC,UAAAA,QAAQ,EAAE,UADR;AAEF,qBAAW;AACTC,YAAAA,eAAe,EAAE,cADR;AAETC,YAAAA,MAAM,EAAE,MAFC;AAGTC,YAAAA,OAAO,EAAE,KAHA;AAITC,YAAAA,MAAM,EAAE,KAJC;AAKTC,YAAAA,IAAI,EAAE,CALG;AAMTL,YAAAA,QAAQ,EAAE,UAND;AAOTM,YAAAA,KAAK,EAAE;AAPE;AAFT,SAFN;AAcE,QAAA,OAAO,EAAC,IAdV;AAAA,8BAiBG,GAjBH,EAkBG1B,QAAQ,CAAC2B,MAlBZ,EAmBG,GAnBH;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eA+BE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACFZ,UAAAA,UAAU,EAAE,QADV;AAEFC,UAAAA,OAAO,EAAE;AAFP,SADN;AAAA,gCAME,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAEP,cAFX;AAGE,UAAA,GAAG,EAAEP,OAHP;AAIE,UAAA,EAAE,EAAE;AACF0B,YAAAA,aAAa,EAAE,MADb;AAEFC,YAAAA,aAAa,EAAE,CAFb;AAGFC,YAAAA,EAAE,EAAE;AAHF,WAJN;AASE,UAAA,OAAO,EAAC,MATV;AAAA,qBAWGzB,YAXH,eAYE,QAAC,iBAAD;AAAmB,YAAA,QAAQ,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAoBE,QAAC,iBAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,QAAQ,EAAEQ,gBAFZ;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,KAAK,EAAEN,IAJT;AAAA,iCAME,QAAC,YAAD;AAAc,YAAA,KAAK,EAAC,MAApB;AAAA,mCACE,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgEE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAE,CAFX;AAAA,gBAIGP,QAAQ,CAAC+B,GAAT,CAAcC,OAAD,iBACZ,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAGE,QAAA,EAAE,EAAEzB,IAAI,KAAK,MAAT,GAAkB,CAAlB,GAAsB,EAH5B;AAIE,QAAA,EAAE,EAAEA,IAAI,KAAK,MAAT,GAAkB,CAAlB,GAAsB,EAJ5B;AAKE,QAAA,EAAE,EAAE,EALN;AAAA,+BAOE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEyB;AAAtB;AAAA;AAAA;AAAA;AAAA;AAPF,SAEOA,OAAO,CAACC,EAFf;AAAA;AAAA;AAAA;AAAA,cADD;AAJH;AAAA;AAAA;AAAA;AAAA,YAhEF,eAgFE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFjB,QAAAA,OAAO,EAAE,MADP;AAEFE,QAAAA,cAAc,EAAE,QAFd;AAGFgB,QAAAA,EAAE,EAAE;AAHF,OADN;AAAA,6BAOE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAhFF,eAyFE,QAAC,IAAD;AACE,MAAA,QAAQ,EAAEhC,OAAO,CAACiC,OADpB;AAEE,MAAA,SAAS,EAAE,CAFb;AAGE,MAAA,OAAO,EAAEzB,eAHX;AAIE,MAAA,IAAI,EAAEP,QAJR;AAAA,gBAMG,CACC,aADD,EAEC,SAFD,EAGC,YAHD,EAIC,WAJD,EAKC,SALD,EAMC4B,GAND,CAMMK,MAAD,iBACJ,QAAC,QAAD;AAEE,QAAA,OAAO,EAAE,MAAMzB,gBAAgB,CAACyB,MAAD,CAFjC;AAAA,+BAIE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AAJF,SACOA,MADP;AAAA;AAAA;AAAA;AAAA,cAPD;AANH;AAAA;AAAA;AAAA;AAAA,YAzFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiHD,CAzID;;GAAMtC,oB;;KAAAA,oB;AA2INA,oBAAoB,CAACuC,SAArB,GAAiC;AAC/BrC,EAAAA,QAAQ,EAAEhB,SAAS,CAACsD,KAAV,CAAgBC;AADK,CAAjC;AAIA,eAAezC,oBAAf","sourcesContent":["import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Grid,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Pagination,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography\n} from '@material-ui/core';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ProjectCard from './ProjectCard';\n\nconst ProjectBrowseResults = (props) => {\n  const { projects, ...other } = props;\n  const sortRef = useRef(null);\n  const [openSort, setOpenSort] = useState(false);\n  const [selectedSort, setSelectedSort] = useState('Most popular');\n  const [mode, setMode] = useState('grid');\n\n  const handleSortOpen = () => {\n    setOpenSort(true);\n  };\n\n  const handleSortClose = () => {\n    setOpenSort(false);\n  };\n\n  const handleSortSelect = (value) => {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  return (\n    <div {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between',\n          mb: 2\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          sx={{\n            position: 'relative',\n            '&:after': {\n              backgroundColor: 'primary.main',\n              bottom: '-8px',\n              content: '\" \"',\n              height: '3px',\n              left: 0,\n              position: 'absolute',\n              width: '48px'\n            }\n          }}\n          variant=\"h5\"\n        >\n          Showing\n          {' '}\n          {projects.length}\n          {' '}\n          projects\n        </Typography>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n        >\n          <Button\n            color=\"primary\"\n            onClick={handleSortOpen}\n            ref={sortRef}\n            sx={{\n              textTransform: 'none',\n              letterSpacing: 0,\n              mr: 2\n            }}\n            variant=\"text\"\n          >\n            {selectedSort}\n            <ArrowDropDownIcon fontSize=\"small\" />\n          </Button>\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            size=\"small\"\n            value={mode}\n          >\n            <ToggleButton value=\"grid\">\n              <ViewModuleIcon fontSize=\"small\" />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Box>\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 6\n        }}\n      >\n        <Pagination count={3} />\n      </Box>\n      <Menu\n        anchorEl={sortRef.current}\n        elevation={1}\n        onClose={handleSortClose}\n        open={openSort}\n      >\n        {[\n          'Most recent',\n          'Popular',\n          'Price high',\n          'Price low',\n          'On sale'\n        ].map((option) => (\n          <MenuItem\n            key={option}\n            onClick={() => handleSortSelect(option)}\n          >\n            <ListItemText primary={option} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nProjectBrowseResults.propTypes = {\n  projects: PropTypes.array.isRequired\n};\n\nexport default ProjectBrowseResults;\n"]},"metadata":{},"sourceType":"module"}