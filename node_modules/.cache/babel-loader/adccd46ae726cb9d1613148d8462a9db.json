{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/customer/CustomerEmailsSummary.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, Table, TableBody, TableCell, TableRow, TextField, Typography } from '@material-ui/core';\nimport { customerApi } from '../../../__fakeApi__/customerApi';\nimport useMounted from '../../../hooks/useMounted';\nimport MailIcon from '../../../icons/Mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailOptions = ['Resend last invoice', 'Send password reset', 'Send verification'];\n\nconst CustomerEmailsSummary = props => {\n  _s();\n\n  const mounted = useMounted();\n  const [emailOption, setEmailOption] = useState(emailOptions[0]);\n  const [emails, setEmails] = useState([]);\n  const getEmails = useCallback(async () => {\n    try {\n      const data = await customerApi.getCustomerEmails();\n\n      if (mounted.current) {\n        setEmails(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n  useEffect(() => {\n    getEmails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Emails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        name: \"option\",\n        onChange: event => setEmailOption(event.target.value),\n        select: true,\n        SelectProps: {\n          native: true\n        },\n        value: emailOption,\n        variant: \"outlined\",\n        children: emailOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(MailIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 24\n          }, this),\n          variant: \"contained\",\n          children: \"Send email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: emails.map(email => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textPrimary\",\n                  variant: \"subtitle2\",\n                  children: email.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: format(email.createdAt, 'dd/MM/yyyy | HH:mm')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, email.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerEmailsSummary, \"WuMM4KRVZauVyu7sSRui59PN/XA=\", false, function () {\n  return [useMounted];\n});\n\n_c = CustomerEmailsSummary;\nexport default CustomerEmailsSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerEmailsSummary\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/customer/CustomerEmailsSummary.js"],"names":["useState","useCallback","useEffect","format","Box","Button","Card","CardContent","CardHeader","Divider","Table","TableBody","TableCell","TableRow","TextField","Typography","customerApi","useMounted","MailIcon","emailOptions","CustomerEmailsSummary","props","mounted","emailOption","setEmailOption","emails","setEmails","getEmails","data","getCustomerEmails","current","err","console","error","event","target","value","native","map","option","mt","email","description","createdAt","id"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { customerApi } from '../../../__fakeApi__/customerApi';\nimport useMounted from '../../../hooks/useMounted';\nimport MailIcon from '../../../icons/Mail';\n\nconst emailOptions = [\n  'Resend last invoice',\n  'Send password reset',\n  'Send verification'\n];\n\nconst CustomerEmailsSummary = (props) => {\n  const mounted = useMounted();\n  const [emailOption, setEmailOption] = useState(emailOptions[0]);\n  const [emails, setEmails] = useState([]);\n\n  const getEmails = useCallback(async () => {\n    try {\n      const data = await customerApi.getCustomerEmails();\n\n      if (mounted.current) {\n        setEmails(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getEmails();\n  }, []);\n\n  return (\n    <Card {...props}>\n      <CardHeader title=\"Emails\" />\n      <Divider />\n      <CardContent>\n        <TextField\n          fullWidth\n          name=\"option\"\n          onChange={(event) => setEmailOption(event.target.value)}\n          select\n          SelectProps={{ native: true }}\n          value={emailOption}\n          variant=\"outlined\"\n        >\n          {emailOptions.map((option) => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </TextField>\n        <Box sx={{ mt: 2 }}>\n          <Button\n            color=\"primary\"\n            startIcon={<MailIcon fontSize=\"small\" />}\n            variant=\"contained\"\n          >\n            Send email\n          </Button>\n        </Box>\n        <Box sx={{ mt: 2 }}>\n          <Table>\n            <TableBody>\n              {emails.map((email) => (\n                <TableRow key={email.id}>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      {email.description}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    {format(email.createdAt, 'dd/MM/yyyy | HH:mm')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CustomerEmailsSummary;\n"]},"metadata":{},"sourceType":"module"}