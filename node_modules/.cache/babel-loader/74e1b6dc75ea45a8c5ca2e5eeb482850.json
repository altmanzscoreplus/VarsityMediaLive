{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { kanbanApi } from '../__fakeApi__/kanbanApi';\nimport objFromArray from '../utils/objFromArray';\nconst initialState = {\n  isLoaded: false,\n  columns: {\n    byId: {},\n    allIds: []\n  },\n  cards: {\n    byId: {},\n    allIds: []\n  },\n  members: {\n    byId: {},\n    allIds: []\n  }\n};\nconst slice = createSlice({\n  name: 'kanban',\n  initialState,\n  reducers: {\n    getBoard(state, action) {\n      const board = action.payload;\n      state.columns.byId = objFromArray(board.columns);\n      state.columns.allIds = Object.keys(state.columns.byId);\n      state.cards.byId = objFromArray(board.cards);\n      state.cards.allIds = Object.keys(state.cards.byId);\n      state.members.byId = objFromArray(board.members);\n      state.members.allIds = Object.keys(state.members.byId);\n      state.isLoaded = true;\n    },\n\n    createColumn(state, action) {\n      const column = action.payload;\n      state.columns.byId[column.id] = column;\n      state.columns.allIds.push(column.id);\n    },\n\n    updateColumn(state, action) {\n      const column = action.payload;\n      state.columns.byId[column.id] = column;\n    },\n\n    clearColumn(state, action) {\n      const columnId = action.payload; // cardIds to be removed\n\n      const {\n        cardIds\n      } = state.columns.byId[columnId]; // Delete the cardIds references from the column\n\n      state.columns.byId[columnId].cardIds = []; // Delete the cards from state\n\n      cardIds.forEach(cardId => {\n        delete state.cards.byId[cardId];\n      });\n      state.cards.allIds = state.cards.allIds.filter(cardId => cardIds.includes(cardId));\n    },\n\n    deleteColumn(state, action) {\n      const columnId = action.payload;\n      delete state.columns.byId[columnId];\n      state.columns.allIds = state.columns.allIds.filter(_listId => _listId !== columnId);\n    },\n\n    createCard(state, action) {\n      const card = action.payload;\n      state.cards.byId[card.id] = card;\n      state.cards.allIds.push(card.id); // Add the cardId reference to the column\n\n      state.columns.byId[card.columnId].cardIds.push(card.id);\n    },\n\n    updateCard(state, action) {\n      const card = action.payload;\n      Object.assign(state.cards.byId[card.id], card);\n    },\n\n    moveCard(state, action) {\n      const {\n        cardId,\n        position,\n        columnId\n      } = action.payload;\n      const sourceColumnId = state.cards.byId[cardId].columnId; // Remove card from source column\n\n      state.columns.byId[sourceColumnId].cardIds = state.columns.byId[sourceColumnId].cardIds.filter(_cardId => _cardId !== cardId); // If columnId exists, it means that we have to add the card to the new column\n\n      if (columnId) {\n        // Change card's columnId reference\n        state.cards.byId[cardId].columnId = columnId; // Push the cardId to the specified position\n\n        state.columns.byId[columnId].cardIds.splice(position, 0, cardId);\n      } else {\n        // Push the cardId to the specified position\n        state.columns.byId[sourceColumnId].cardIds.splice(position, 0, cardId);\n      }\n    },\n\n    deleteCard(state, action) {\n      const cardId = action.payload;\n      const {\n        columnId\n      } = state.cards.byId[cardId];\n      delete state.cards.byId[cardId];\n      state.cards.allIds = state.cards.allIds.filter(_cardId => _cardId !== cardId);\n      state.columns.byId[columnId].cardIds = state.columns.byId[columnId].cardIds.filter(_cardId => _cardId !== cardId);\n    },\n\n    addComment(state, action) {\n      const comment = action.payload;\n      const card = state.cards.byId[comment.cardId];\n      card.comments.push(comment);\n    },\n\n    addChecklist(state, action) {\n      const {\n        cardId,\n        checklist\n      } = action.payload;\n      const card = state.cards.byId[cardId];\n      card.checklists.push(checklist);\n    },\n\n    updateChecklist(state, action) {\n      const {\n        cardId,\n        checklist\n      } = action.payload;\n      const card = state.cards.byId[cardId];\n      card.checklists = card.checklists.map(_checklist => {\n        if (_checklist.id === checklist.id) {\n          return checklist;\n        }\n\n        return _checklist;\n      });\n    },\n\n    deleteChecklist(state, action) {\n      const {\n        cardId,\n        checklistId\n      } = action.payload;\n      const card = state.cards.byId[cardId];\n      card.checklists = card.checklists.filter(checklist => checklist.id !== checklistId);\n    },\n\n    addCheckItem(state, action) {\n      const {\n        cardId,\n        checklistId,\n        checkItem\n      } = action.payload;\n      const card = state.cards.byId[cardId];\n      const checklist = card.checklists.find(_checklist => _checklist.id === checklistId);\n      checklist.checkItems.push(checkItem);\n    },\n\n    updateCheckItem(state, action) {\n      const {\n        cardId,\n        checklistId,\n        checkItem\n      } = action.payload;\n      const card = state.cards.byId[cardId];\n      const checklist = card.checklists.find(_checklist => _checklist.id === checklistId);\n      checklist.checkItems = checklist.checkItems.map(_checkItem => {\n        if (_checkItem.id === checkItem.id) {\n          return checkItem;\n        }\n\n        return _checkItem;\n      });\n    },\n\n    deleteCheckItem(state, action) {\n      const {\n        cardId,\n        checklistId,\n        checkItemId\n      } = action.payload;\n      const card = state.cards.byId[cardId];\n      const checklist = card.checklists.find(_checklist => _checklist.id === checklistId);\n      checklist.checkItems = checklist.checkItems.filter(checkItem => checkItem.id !== checkItemId);\n    }\n\n  }\n});\nexport const {\n  reducer\n} = slice;\nexport const getBoard = () => async dispatch => {\n  const data = await kanbanApi.getBoard();\n  dispatch(slice.actions.getBoard(data));\n};\nexport const createColumn = name => async dispatch => {\n  const data = await kanbanApi.createColumn({\n    name\n  });\n  dispatch(slice.actions.createColumn(data));\n};\nexport const updateColumn = (columnId, update) => async dispatch => {\n  const data = await kanbanApi.updateColumn({\n    columnId,\n    update\n  });\n  dispatch(slice.actions.updateColumn(data));\n};\nexport const clearColumn = columnId => async dispatch => {\n  await kanbanApi.clearColumn(columnId);\n  dispatch(slice.actions.clearColumn(columnId));\n};\nexport const deleteColumn = columnId => async dispatch => {\n  await kanbanApi.deleteColumn(columnId);\n  dispatch(slice.actions.deleteColumn(columnId));\n};\nexport const createCard = (columnId, name) => async dispatch => {\n  const data = await kanbanApi.createCard({\n    columnId,\n    name\n  });\n  dispatch(slice.actions.createCard(data));\n};\nexport const updateCard = (cardId, update) => async dispatch => {\n  const data = await kanbanApi.updateCard({\n    cardId,\n    update\n  });\n  dispatch(slice.actions.updateCard(data));\n};\nexport const moveCard = (cardId, position, columnId) => async dispatch => {\n  await kanbanApi.moveCard({\n    cardId,\n    position,\n    columnId\n  });\n  dispatch(slice.actions.moveCard({\n    cardId,\n    position,\n    columnId\n  }));\n};\nexport const deleteCard = cardId => async dispatch => {\n  await kanbanApi.deleteCard(cardId);\n  dispatch(slice.actions.deleteCard(cardId));\n};\nexport const addComment = (cardId, message) => async dispatch => {\n  const data = await kanbanApi.addComment({\n    cardId,\n    message\n  });\n  dispatch(slice.actions.addComment(data));\n};\nexport const addChecklist = (cardId, name) => async dispatch => {\n  const data = await kanbanApi.addChecklist({\n    cardId,\n    name\n  });\n  dispatch(slice.actions.addChecklist({\n    cardId,\n    checklist: data\n  }));\n};\nexport const updateChecklist = (cardId, checklistId, update) => async dispatch => {\n  const data = await kanbanApi.updateChecklist({\n    cardId,\n    checklistId,\n    update\n  });\n  dispatch(slice.actions.updateChecklist({\n    cardId,\n    checklist: data\n  }));\n};\nexport const deleteChecklist = (cardId, checklistId) => async dispatch => {\n  await kanbanApi.deleteChecklist({\n    cardId,\n    checklistId\n  });\n  dispatch(slice.actions.deleteChecklist({\n    cardId,\n    checklistId\n  }));\n};\nexport const addCheckItem = (cardId, checklistId, name) => async dispatch => {\n  const data = await kanbanApi.addCheckItem({\n    cardId,\n    checklistId,\n    name\n  });\n  dispatch(slice.actions.addCheckItem({\n    cardId,\n    checklistId,\n    checkItem: data\n  }));\n};\nexport const updateCheckItem = (cardId, checklistId, checkItemId, update) => async dispatch => {\n  const data = await kanbanApi.updateCheckItem({\n    cardId,\n    checklistId,\n    checkItemId,\n    update\n  });\n  dispatch(slice.actions.updateCheckItem({\n    cardId,\n    checklistId,\n    checkItem: data\n  }));\n};\nexport const deleteCheckItem = (cardId, checklistId, checkItemId) => async dispatch => {\n  await kanbanApi.deleteCheckItem({\n    cardId,\n    checklistId,\n    checkItemId\n  });\n  dispatch(slice.actions.deleteCheckItem({\n    cardId,\n    checklistId,\n    checkItemId\n  }));\n};\nexport default slice;","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/slices/kanban.js"],"names":["createSlice","kanbanApi","objFromArray","initialState","isLoaded","columns","byId","allIds","cards","members","slice","name","reducers","getBoard","state","action","board","payload","Object","keys","createColumn","column","id","push","updateColumn","clearColumn","columnId","cardIds","forEach","cardId","filter","includes","deleteColumn","_listId","createCard","card","updateCard","assign","moveCard","position","sourceColumnId","_cardId","splice","deleteCard","addComment","comment","comments","addChecklist","checklist","checklists","updateChecklist","map","_checklist","deleteChecklist","checklistId","addCheckItem","checkItem","find","checkItems","updateCheckItem","_checkItem","deleteCheckItem","checkItemId","reducer","dispatch","data","actions","update","message"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { kanbanApi } from '../__fakeApi__/kanbanApi';\nimport objFromArray from '../utils/objFromArray';\n\nconst initialState = {\n  isLoaded: false,\n  columns: {\n    byId: {},\n    allIds: []\n  },\n  cards: {\n    byId: {},\n    allIds: []\n  },\n  members: {\n    byId: {},\n    allIds: []\n  }\n};\n\nconst slice = createSlice({\n  name: 'kanban',\n  initialState,\n  reducers: {\n    getBoard(state, action) {\n      const board = action.payload;\n\n      state.columns.byId = objFromArray(board.columns);\n      state.columns.allIds = Object.keys(state.columns.byId);\n      state.cards.byId = objFromArray(board.cards);\n      state.cards.allIds = Object.keys(state.cards.byId);\n      state.members.byId = objFromArray(board.members);\n      state.members.allIds = Object.keys(state.members.byId);\n      state.isLoaded = true;\n    },\n    createColumn(state, action) {\n      const column = action.payload;\n\n      state.columns.byId[column.id] = column;\n      state.columns.allIds.push(column.id);\n    },\n    updateColumn(state, action) {\n      const column = action.payload;\n\n      state.columns.byId[column.id] = column;\n    },\n    clearColumn(state, action) {\n      const columnId = action.payload;\n\n      // cardIds to be removed\n      const { cardIds } = state.columns.byId[columnId];\n\n      // Delete the cardIds references from the column\n      state.columns.byId[columnId].cardIds = [];\n\n      // Delete the cards from state\n      cardIds.forEach((cardId) => {\n        delete state.cards.byId[cardId];\n      });\n\n      state.cards.allIds = state.cards.allIds.filter((cardId) => cardIds.includes(cardId));\n    },\n    deleteColumn(state, action) {\n      const columnId = action.payload;\n\n      delete state.columns.byId[columnId];\n      state.columns.allIds = state.columns.allIds.filter((_listId) => _listId !== columnId);\n    },\n    createCard(state, action) {\n      const card = action.payload;\n\n      state.cards.byId[card.id] = card;\n      state.cards.allIds.push(card.id);\n\n      // Add the cardId reference to the column\n      state.columns.byId[card.columnId].cardIds.push(card.id);\n    },\n    updateCard(state, action) {\n      const card = action.payload;\n\n      Object.assign(state.cards.byId[card.id], card);\n    },\n    moveCard(state, action) {\n      const { cardId, position, columnId } = action.payload;\n      const sourceColumnId = state.cards.byId[cardId].columnId;\n\n      // Remove card from source column\n      state.columns.byId[sourceColumnId].cardIds = (state.columns.byId[sourceColumnId].cardIds.filter((_cardId) => _cardId !== cardId));\n\n      // If columnId exists, it means that we have to add the card to the new column\n      if (columnId) {\n        // Change card's columnId reference\n        state.cards.byId[cardId].columnId = columnId;\n        // Push the cardId to the specified position\n        state.columns.byId[columnId].cardIds.splice(position, 0, cardId);\n      } else {\n        // Push the cardId to the specified position\n        state.columns.byId[sourceColumnId].cardIds.splice(position, 0, cardId);\n      }\n    },\n    deleteCard(state, action) {\n      const cardId = action.payload;\n      const { columnId } = state.cards.byId[cardId];\n\n      delete state.cards.byId[cardId];\n      state.cards.allIds = state.cards.allIds.filter((_cardId) => _cardId !== cardId);\n      state.columns.byId[columnId].cardIds = (state.columns.byId[columnId].cardIds.filter((_cardId) => _cardId !== cardId));\n    },\n    addComment(state, action) {\n      const comment = action.payload;\n      const card = state.cards.byId[comment.cardId];\n\n      card.comments.push(comment);\n    },\n    addChecklist(state, action) {\n      const { cardId, checklist } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      card.checklists.push(checklist);\n    },\n    updateChecklist(state, action) {\n      const { cardId, checklist } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      card.checklists = card.checklists.map((_checklist) => {\n        if (_checklist.id === checklist.id) {\n          return checklist;\n        }\n\n        return _checklist;\n      });\n    },\n    deleteChecklist(state, action) {\n      const { cardId, checklistId } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      card.checklists = card.checklists.filter((checklist) => checklist.id !== checklistId);\n    },\n    addCheckItem(state, action) {\n      const { cardId, checklistId, checkItem } = action.payload;\n      const card = state.cards.byId[cardId];\n      const checklist = card.checklists.find((_checklist) => _checklist.id === checklistId);\n\n      checklist.checkItems.push(checkItem);\n    },\n    updateCheckItem(state, action) {\n      const { cardId, checklistId, checkItem } = action.payload;\n      const card = state.cards.byId[cardId];\n      const checklist = card.checklists.find((_checklist) => _checklist.id === checklistId);\n\n      checklist.checkItems = checklist.checkItems.map((_checkItem) => {\n        if (_checkItem.id === checkItem.id) {\n          return checkItem;\n        }\n\n        return _checkItem;\n      });\n    },\n    deleteCheckItem(state, action) {\n      const { cardId, checklistId, checkItemId } = action.payload;\n      const card = state.cards.byId[cardId];\n      const checklist = card.checklists.find((_checklist) => _checklist.id === checklistId);\n\n      checklist.checkItems = (checklist.checkItems.filter((checkItem) => checkItem.id !== checkItemId));\n    }\n  }\n});\n\nexport const { reducer } = slice;\n\nexport const getBoard = () => async (dispatch) => {\n  const data = await kanbanApi.getBoard();\n\n  dispatch(slice.actions.getBoard(data));\n};\n\nexport const createColumn = (name) => async (dispatch) => {\n  const data = await kanbanApi.createColumn({ name });\n\n  dispatch(slice.actions.createColumn(data));\n};\n\nexport const updateColumn = (columnId, update) => async (dispatch) => {\n  const data = await kanbanApi.updateColumn({ columnId, update });\n\n  dispatch(slice.actions.updateColumn(data));\n};\n\nexport const clearColumn = (columnId) => async (dispatch) => {\n  await kanbanApi.clearColumn(columnId);\n\n  dispatch(slice.actions.clearColumn(columnId));\n};\n\nexport const deleteColumn = (columnId) => async (dispatch) => {\n  await kanbanApi.deleteColumn(columnId);\n\n  dispatch(slice.actions.deleteColumn(columnId));\n};\n\nexport const createCard = (columnId, name) => async (dispatch) => {\n  const data = await kanbanApi.createCard({ columnId, name });\n\n  dispatch(slice.actions.createCard(data));\n};\n\nexport const updateCard = (cardId, update) => async (dispatch) => {\n  const data = await kanbanApi.updateCard({ cardId, update });\n\n  dispatch(slice.actions.updateCard(data));\n};\n\nexport const moveCard = (cardId, position, columnId) => async (dispatch) => {\n  await kanbanApi.moveCard({ cardId, position, columnId });\n\n  dispatch(slice.actions.moveCard({\n    cardId,\n    position,\n    columnId\n  }));\n};\n\nexport const deleteCard = (cardId) => async (dispatch) => {\n  await kanbanApi.deleteCard(cardId);\n\n  dispatch(slice.actions.deleteCard(cardId));\n};\n\nexport const addComment = (cardId, message) => async (dispatch) => {\n  const data = await kanbanApi.addComment({ cardId, message });\n\n  dispatch(slice.actions.addComment(data));\n};\n\nexport const addChecklist = (cardId, name) => async (dispatch) => {\n  const data = await kanbanApi.addChecklist({ cardId, name });\n\n  dispatch(slice.actions.addChecklist({\n    cardId,\n    checklist: data\n  }));\n};\n\nexport const updateChecklist = (cardId, checklistId, update) => async (dispatch) => {\n  const data = await kanbanApi.updateChecklist({ cardId, checklistId, update });\n\n  dispatch(slice.actions.updateChecklist({\n    cardId,\n    checklist: data\n  }));\n};\n\nexport const deleteChecklist = (cardId, checklistId) => async (dispatch) => {\n  await kanbanApi.deleteChecklist({ cardId, checklistId });\n\n  dispatch(slice.actions.deleteChecklist({\n    cardId,\n    checklistId\n  }));\n};\n\nexport const addCheckItem = (cardId, checklistId, name) => async (dispatch) => {\n  const data = await kanbanApi.addCheckItem({ cardId, checklistId, name });\n\n  dispatch(slice.actions.addCheckItem({\n    cardId,\n    checklistId,\n    checkItem: data\n  }));\n};\n\nexport const updateCheckItem = (cardId, checklistId, checkItemId, update) => async (dispatch) => {\n  const data = await kanbanApi.updateCheckItem({ cardId, checklistId, checkItemId, update });\n\n  dispatch(slice.actions.updateCheckItem({\n    cardId,\n    checklistId,\n    checkItem: data\n  }));\n};\n\nexport const deleteCheckItem = (cardId, checklistId, checkItemId) => async (dispatch) => {\n  await kanbanApi.deleteCheckItem({ cardId, checklistId, checkItemId });\n\n  dispatch(slice.actions.deleteCheckItem({\n    cardId,\n    checklistId,\n    checkItemId\n  }));\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}