{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanChecklist.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Button, LinearProgress, TextField, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport ClipboardListIcon from '../../../icons/ClipboardList';\nimport { deleteChecklist, updateChecklist } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\nimport KanbanCheckItem from './KanbanCheckItem';\nimport KanbanCheckItemAdd from './KanbanCheckItemAdd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanChecklistRoot = experimentalStyled('div')``;\n_c = KanbanChecklistRoot;\n\nconst KanbanChecklist = props => {\n  _s();\n\n  const {\n    card,\n    checklist,\n    ...other\n  } = props;\n  const dispatch = useDispatch();\n  const [name, setName] = useState(checklist.name);\n  const [editingName, setEditingName] = useState(false);\n  const [editingCheckItem, setEditingCheckItem] = useState(null);\n\n  const handleNameEdit = () => {\n    setEditingName(true);\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNameSave = async () => {\n    try {\n      if (!name || name === checklist.name) {\n        setEditingName(false);\n        setName(checklist.name);\n        return;\n      }\n\n      setEditingName(false);\n      await dispatch(updateChecklist(card.id, checklist.id, {\n        name\n      }));\n      toast.success('Checklist updated!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const handleNameCancel = () => {\n    setEditingName(false);\n    setName(checklist.name);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteChecklist(card.id, checklist.id));\n      toast.success('Checklist deleted!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const handleCheckItemEditInit = checkItemId => {\n    setEditingCheckItem(checkItemId);\n  };\n\n  const handleCheckItemEditCancel = () => {\n    setEditingCheckItem(null);\n  };\n\n  const handleCheckItemEditComplete = () => {\n    setEditingCheckItem(null);\n  };\n\n  const totalCheckItems = checklist.checkItems.length;\n  const completedCheckItems = checklist.checkItems.filter(checkItem => checkItem.state === 'complete').length;\n  const completePercentage = totalCheckItems === 0 ? 100 : completedCheckItems / totalCheckItems * 100;\n  return /*#__PURE__*/_jsxDEV(KanbanChecklistRoot, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mr: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(ClipboardListIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), editingName ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          onChange: handleNameChange,\n          value: name,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: handleNameSave,\n            size: \"small\",\n            variant: \"contained\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: handleNameCancel,\n            size: \"small\",\n            variant: \"text\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: 'center',\n          display: 'flex',\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          onClick: handleNameEdit,\n          variant: \"h6\",\n          children: checklist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleDelete,\n          size: \"small\",\n          variant: \"text\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        variant: \"caption\",\n        children: [Math.round(completePercentage), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          ml: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n          color: \"primary\",\n          value: completePercentage,\n          variant: \"determinate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), checklist.checkItems.map(checkItem => /*#__PURE__*/_jsxDEV(KanbanCheckItem, {\n      cardId: card.id,\n      checkItem: checkItem,\n      checklistId: checklist.id,\n      editing: editingCheckItem === checkItem.id,\n      onEditCancel: handleCheckItemEditCancel,\n      onEditComplete: handleCheckItemEditComplete,\n      onEditInit: () => handleCheckItemEditInit(checkItem.id)\n    }, checkItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        ml: 6,\n        mt: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(KanbanCheckItemAdd, {\n        cardId: card.id,\n        checklistId: checklist.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KanbanChecklist, \"cVzib9Nu32FhuRF1xvIPL5vrZiI=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = KanbanChecklist;\nKanbanChecklist.propTypes = {\n  card: PropTypes.object.isRequired,\n  checklist: PropTypes.object.isRequired,\n  sx: PropTypes.object\n};\nexport default KanbanChecklist;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KanbanChecklistRoot\");\n$RefreshReg$(_c2, \"KanbanChecklist\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanChecklist.js"],"names":["useState","PropTypes","toast","Box","Button","LinearProgress","TextField","Typography","experimentalStyled","ClipboardListIcon","deleteChecklist","updateChecklist","useDispatch","KanbanCheckItem","KanbanCheckItemAdd","KanbanChecklistRoot","KanbanChecklist","props","card","checklist","other","dispatch","name","setName","editingName","setEditingName","editingCheckItem","setEditingCheckItem","handleNameEdit","handleNameChange","event","target","value","handleNameSave","id","success","err","console","error","handleNameCancel","handleDelete","handleCheckItemEditInit","checkItemId","handleCheckItemEditCancel","handleCheckItemEditComplete","totalCheckItems","checkItems","length","completedCheckItems","filter","checkItem","state","completePercentage","alignItems","display","mr","flexGrow","mt","Math","round","ml","map","propTypes","object","isRequired","sx"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Button, LinearProgress, TextField, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport ClipboardListIcon from '../../../icons/ClipboardList';\nimport { deleteChecklist, updateChecklist } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\nimport KanbanCheckItem from './KanbanCheckItem';\nimport KanbanCheckItemAdd from './KanbanCheckItemAdd';\n\nconst KanbanChecklistRoot = experimentalStyled('div')``;\n\nconst KanbanChecklist = (props) => {\n  const { card, checklist, ...other } = props;\n  const dispatch = useDispatch();\n  const [name, setName] = useState(checklist.name);\n  const [editingName, setEditingName] = useState(false);\n  const [editingCheckItem, setEditingCheckItem] = useState(null);\n\n  const handleNameEdit = () => {\n    setEditingName(true);\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleNameSave = async () => {\n    try {\n      if (!name || name === checklist.name) {\n        setEditingName(false);\n        setName(checklist.name);\n        return;\n      }\n\n      setEditingName(false);\n      await dispatch(updateChecklist(card.id, checklist.id, { name }));\n      toast.success('Checklist updated!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const handleNameCancel = () => {\n    setEditingName(false);\n    setName(checklist.name);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteChecklist(card.id, checklist.id));\n      toast.success('Checklist deleted!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const handleCheckItemEditInit = (checkItemId) => {\n    setEditingCheckItem(checkItemId);\n  };\n\n  const handleCheckItemEditCancel = () => {\n    setEditingCheckItem(null);\n  };\n\n  const handleCheckItemEditComplete = () => {\n    setEditingCheckItem(null);\n  };\n\n  const totalCheckItems = checklist.checkItems.length;\n  const completedCheckItems = (checklist\n    .checkItems\n    .filter((checkItem) => checkItem.state === 'complete')).length;\n  const completePercentage = totalCheckItems === 0\n    ? 100\n    : (completedCheckItems / totalCheckItems) * 100;\n\n  return (\n    <KanbanChecklistRoot {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex'\n        }}\n      >\n        <Box sx={{ mr: 3 }}>\n          <ClipboardListIcon fontSize=\"small\" />\n        </Box>\n        {editingName\n          ? (\n            <Box sx={{ flexGrow: 1 }}>\n              <TextField\n                fullWidth\n                onChange={handleNameChange}\n                value={name}\n                variant=\"outlined\"\n              />\n              <Box sx={{ mt: 1 }}>\n                <Button\n                  color=\"primary\"\n                  onClick={handleNameSave}\n                  size=\"small\"\n                  variant=\"contained\"\n                >\n                  Save\n                </Button>\n                <Button\n                  color=\"primary\"\n                  onClick={handleNameCancel}\n                  size=\"small\"\n                  variant=\"text\"\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </Box>\n          )\n          : (\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                flexGrow: 1\n              }}\n            >\n              <Typography\n                color=\"textPrimary\"\n                onClick={handleNameEdit}\n                variant=\"h6\"\n              >\n                {checklist.name}\n              </Typography>\n              <Box sx={{ flexGrow: 1 }} />\n              <Button\n                color=\"primary\"\n                onClick={handleDelete}\n                size=\"small\"\n                variant=\"text\"\n              >\n                Delete\n              </Button>\n            </Box>\n          )}\n      </Box>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          mt: 1\n        }}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          {Math.round(completePercentage)}\n          %\n        </Typography>\n        <Box\n          sx={{\n            flexGrow: 1,\n            ml: 2\n          }}\n        >\n          <LinearProgress\n            color=\"primary\"\n            value={completePercentage}\n            variant=\"determinate\"\n          />\n        </Box>\n      </Box>\n      {checklist.checkItems.map((checkItem) => (\n        <KanbanCheckItem\n          cardId={card.id}\n          checkItem={checkItem}\n          checklistId={checklist.id}\n          editing={editingCheckItem === checkItem.id}\n          key={checkItem.id}\n          onEditCancel={handleCheckItemEditCancel}\n          onEditComplete={handleCheckItemEditComplete}\n          onEditInit={() => handleCheckItemEditInit(checkItem.id)}\n        />\n      ))}\n      <Box\n        sx={{\n          ml: 6,\n          mt: 1\n        }}\n      >\n        <KanbanCheckItemAdd\n          cardId={card.id}\n          checklistId={checklist.id}\n        />\n      </Box>\n    </KanbanChecklistRoot>\n  );\n};\n\nKanbanChecklist.propTypes = {\n  card: PropTypes.object.isRequired,\n  checklist: PropTypes.object.isRequired,\n  sx: PropTypes.object\n};\n\nexport default KanbanChecklist;\n"]},"metadata":{},"sourceType":"module"}