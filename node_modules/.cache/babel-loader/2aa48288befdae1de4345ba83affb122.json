{"ast":null,"code":"import { subHours, subDays } from 'date-fns';\nconst now = new Date();\n\nclass InvoiceApi {\n  getInvoices() {\n    const invoices = [{\n      id: '5ecb868d0f437390ef3ac62c',\n      currency: '$',\n      customer: {\n        email: 'contact@anahenisky.io',\n        name: 'Ana Henisky'\n      },\n      issueDate: subHours(now, 1).getTime(),\n      status: 'paid',\n      totalAmount: 55.50\n    }, {\n      id: '5ecb868ada8deedee0638502',\n      currency: '$',\n      customer: {\n        email: 'sales@matt-jason.com',\n        name: 'Matt Jason'\n      },\n      issueDate: subDays(subHours(now, 5), 2).getTime(),\n      status: 'pending',\n      totalAmount: 253.76\n    }, {\n      id: '5ecb868700aba84d0f1c0e48',\n      currency: '$',\n      customer: {\n        email: 'support@terrythomas.io',\n        name: 'Terry Thomas'\n      },\n      issueDate: subDays(subHours(now, 4), 6).getTime(),\n      status: 'canceled',\n      totalAmount: 781.50\n    }, {\n      id: '5ecb8682038e1ddf4e868764',\n      currency: '$',\n      customer: {\n        email: 'contact@triv-shopper.co.uk',\n        name: 'Triv Shopper'\n      },\n      issueDate: subDays(subHours(now, 2), 15).getTime(),\n      status: 'paid',\n      totalAmount: 96.64\n    }];\n    return Promise.resolve(invoices);\n  }\n\n  getInvoice() {\n    const invoice = {\n      id: '5ecb86785312dcc69b5799ad',\n      currency: '$',\n      customer: {\n        address: '271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand',\n        company: 'Countdown Grey Lynn',\n        email: 'contact@anahenisky.io',\n        name: 'Ana Henisky',\n        taxId: '6934656584231'\n      },\n      dueDate: now.getTime(),\n      issueDate: subHours(now, 1).getTime(),\n      items: [{\n        id: '5ecb8694db1760a701dfbf74',\n        currency: '$',\n        description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\n        unitAmount: 55.50\n      }],\n      number: 'DEV-9483',\n      status: 'paid',\n      subtotalAmount: 50.00,\n      taxAmount: 5.50,\n      totalAmount: 55.50\n    };\n    return Promise.resolve(invoice);\n  }\n\n}\n\nexport const invoiceApi = new InvoiceApi();","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/__fakeApi__/invoiceApi.js"],"names":["subHours","subDays","now","Date","InvoiceApi","getInvoices","invoices","id","currency","customer","email","name","issueDate","getTime","status","totalAmount","Promise","resolve","getInvoice","invoice","address","company","taxId","dueDate","items","description","unitAmount","number","subtotalAmount","taxAmount","invoiceApi"],"mappings":"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","sourcesContent":["import { subHours, subDays } from 'date-fns';\n\nconst now = new Date();\n\nclass InvoiceApi {\n  getInvoices() {\n    const invoices = [\n      {\n        id: '5ecb868d0f437390ef3ac62c',\n        currency: '$',\n        customer: {\n          email: 'contact@anahenisky.io',\n          name: 'Ana Henisky'\n        },\n        issueDate: subHours(now, 1).getTime(),\n        status: 'paid',\n        totalAmount: 55.50\n      },\n      {\n        id: '5ecb868ada8deedee0638502',\n        currency: '$',\n        customer: {\n          email: 'sales@matt-jason.com',\n          name: 'Matt Jason'\n        },\n        issueDate: subDays(subHours(now, 5), 2).getTime(),\n        status: 'pending',\n        totalAmount: 253.76\n      },\n      {\n        id: '5ecb868700aba84d0f1c0e48',\n        currency: '$',\n        customer: {\n          email: 'support@terrythomas.io',\n          name: 'Terry Thomas'\n        },\n        issueDate: subDays(subHours(now, 4), 6).getTime(),\n        status: 'canceled',\n        totalAmount: 781.50\n      },\n      {\n        id: '5ecb8682038e1ddf4e868764',\n        currency: '$',\n        customer: {\n          email: 'contact@triv-shopper.co.uk',\n          name: 'Triv Shopper'\n        },\n        issueDate: subDays(subHours(now, 2), 15).getTime(),\n        status: 'paid',\n        totalAmount: 96.64\n      }\n    ];\n\n    return Promise.resolve(invoices);\n  }\n\n  getInvoice() {\n    const invoice = {\n      id: '5ecb86785312dcc69b5799ad',\n      currency: '$',\n      customer: {\n        address: '271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand',\n        company: 'Countdown Grey Lynn',\n        email: 'contact@anahenisky.io',\n        name: 'Ana Henisky',\n        taxId: '6934656584231'\n      },\n      dueDate: now.getTime(),\n      issueDate: subHours(now, 1).getTime(),\n      items: [\n        {\n          id: '5ecb8694db1760a701dfbf74',\n          currency: '$',\n          description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\n          unitAmount: 55.50\n        }\n      ],\n      number: 'DEV-9483',\n      status: 'paid',\n      subtotalAmount: 50.00,\n      taxAmount: 5.50,\n      totalAmount: 55.50\n    };\n\n    return Promise.resolve(invoice);\n  }\n}\n\nexport const invoiceApi = new InvoiceApi();\n"]},"metadata":{},"sourceType":"module"}