{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/pages/event/EventList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Typography } from '@material-ui/core';\nimport { EventCard, EventVideoPlayer } from '../../components/event';\nimport useMounted from '../../hooks/useMounted';\nimport useSettings from '../../hooks/useSettings';\nimport gtm from '../../lib/gtm';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport * as queries from '../../graphql/queries';\nimport awsvideo from '../../aws-video-exports';\nimport { onCreateVodAsset } from '../../graphql/subscriptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EventList = () => {\n  _s();\n\n  const mounted = useMounted();\n  const {\n    settings\n  } = useSettings();\n  const [events, setEvents] = useState([]);\n  const [nextToken, setNextToken] = useState('');\n  const [displayMovie, setDisplayMovie] = useState({\n    displaying: false,\n    sources: [],\n    choosenEvent: {}\n  });\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  const getEvents = useCallback(async () => {\n    try {\n      const assets = await API.graphql(graphqlOperation(queries.listVodAssets));\n\n      if (mounted.current) {\n        let {\n          nextToken\n        } = assets.data.listVodAssets;\n\n        if (nextToken === undefined) {\n          nextToken = '';\n        }\n\n        setEvents(assets.data.listVodAssets.items);\n        setNextToken(nextToken);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n\n  const showMovie = event => {\n    setDisplayMovie({ ...displayMovie,\n      displaying: true,\n      sources: [{\n        src: `https://${awsvideo.awsOutputVideo}/${event.video.id}/${event.video.id}.m3u8`,\n        type: 'application/x-mpegURL'\n      }],\n      choosenEvent: event\n    });\n  };\n\n  const hideMovie = () => {\n    setDisplayMovie({\n      displaying: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: settings.compact ? 'xl' : false,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"space-between\",\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              variant: \"h5\",\n              children: \"Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), displayMovie.displaying && /*#__PURE__*/_jsxDEV(EventVideoPlayer, {\n          video: displayMovie,\n          onClose: hideMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          sx: {\n            mt: 3\n          },\n          children: events.map(event => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 3,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(EventCard, {\n              event: event,\n              onClick: showMovie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EventList, \"WLZ6aKG3lzMokSAfdQUriq/99mQ=\", false, function () {\n  return [useMounted, useSettings];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/pages/event/EventList.js"],"names":["useState","useEffect","useCallback","Helmet","Box","Container","Grid","Typography","EventCard","EventVideoPlayer","useMounted","useSettings","gtm","API","graphqlOperation","queries","awsvideo","onCreateVodAsset","EventList","mounted","settings","events","setEvents","nextToken","setNextToken","displayMovie","setDisplayMovie","displaying","sources","choosenEvent","push","event","getEvents","assets","graphql","listVodAssets","current","data","undefined","items","err","console","error","showMovie","src","awsOutputVideo","video","id","type","hideMovie","backgroundColor","minHeight","py","compact","mt","map"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Typography } from '@material-ui/core';\nimport { EventCard, EventVideoPlayer } from '../../components/event';\nimport useMounted from '../../hooks/useMounted';\nimport useSettings from '../../hooks/useSettings';\nimport gtm from '../../lib/gtm';\n\nimport { API, graphqlOperation } from 'aws-amplify';\nimport * as queries from '../../graphql/queries';\nimport awsvideo from '../../aws-video-exports';\nimport { onCreateVodAsset } from '../../graphql/subscriptions';\n\nconst EventList = () => {\n  const mounted = useMounted();\n  const { settings } = useSettings();\n  const [events, setEvents] = useState([]);\n  const [nextToken, setNextToken] = useState('');\n  const [displayMovie, setDisplayMovie] = useState({\n    displaying: false,\n    sources: [],\n    choosenEvent: {}\n  });\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getEvents = useCallback(async () => {\n    try {\n      const assets = await API.graphql(graphqlOperation(queries.listVodAssets));\n\n      if (mounted.current) {\n        let { nextToken } = assets.data.listVodAssets;\n        if (nextToken === undefined) {\n          nextToken = '';\n        }\n\n        setEvents(assets.data.listVodAssets.items);\n        setNextToken(nextToken);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n  \n  const showMovie = (event) => {\n    setDisplayMovie({\n      ...displayMovie, \n      displaying: true,\n      sources: [{\n        src: `https://${awsvideo.awsOutputVideo}/${event.video.id}/${event.video.id}.m3u8`,\n        type: 'application/x-mpegURL',\n      }],\n      choosenEvent: event\n    });\n  };\n\n  const hideMovie = () => {\n    setDisplayMovie({\n      displaying: false,\n    });\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Events</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Events\n              </Typography>\n            </Grid>\n          </Grid>\n\n          {displayMovie.displaying && (\n            <EventVideoPlayer \n              video={displayMovie} \n              onClose={hideMovie}\n            />\n          )}\n\n          <Grid\n            container\n            spacing={3}\n            sx={{ mt: 3 }}\n          >\n            {events.map((event) => (\n              <Grid\n                item\n                key={event.id}\n                lg={3}\n                md={4}\n                xs={12}\n              >\n                <EventCard\n                  event={event}\n                  onClick={showMovie}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}