{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/customer/CustomerEditForm.js\";\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Card, Grid, Switch, TextField, Typography } from '@material-ui/core';\nimport wait from '../../../utils/wait';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerEditForm = props => {\n  const {\n    customer,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      address1: customer.address1 || '',\n      address2: customer.address2 || '',\n      country: customer.country || '',\n      email: customer.email || '',\n      hasDiscountedPrices: customer.hasDiscountedPrices || false,\n      isVerified: customer.isVerified || false,\n      name: customer.name || '',\n      phone: customer.phone || '',\n      state: customer.state || '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      address1: Yup.string().max(255),\n      address2: Yup.string().max(255),\n      country: Yup.string().max(255),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      hasDiscountedPrices: Yup.bool(),\n      isVerified: Yup.bool(),\n      name: Yup.string().max(255).required('Name is required'),\n      phone: Yup.string().max(15),\n      state: Yup.string().max(255)\n    }),\n    onSubmit: async (values, {\n      resetForm,\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        // NOTE: Make API request\n        await wait(500);\n        resetForm();\n        setStatus({\n          success: true\n        });\n        setSubmitting(false);\n        toast.success('Customer updated!');\n      } catch (err) {\n        console.error(err);\n        toast.error('Something went wrong!');\n        setStatus({\n          success: false\n        });\n        setErrors({\n          submit: err.message\n        });\n        setSubmitting(false);\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      ...other,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.name && errors.name),\n                fullWidth: true,\n                helperText: touched.name && errors.name,\n                label: \"Full name\",\n                name: \"name\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                required: true,\n                value: values.name,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.email && errors.email),\n                fullWidth: true,\n                helperText: touched.email && errors.email,\n                label: \"Email address\",\n                name: \"email\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                required: true,\n                value: values.email,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.country && errors.country),\n                fullWidth: true,\n                helperText: touched.country && errors.country,\n                label: \"Country\",\n                name: \"country\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                value: values.country,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.state && errors.state),\n                fullWidth: true,\n                helperText: touched.state && errors.state,\n                label: \"State/Region\",\n                name: \"state\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                value: values.state,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.address1 && errors.address1),\n                fullWidth: true,\n                helperText: touched.address1 && errors.address1,\n                label: \"Address 1\",\n                name: \"address1\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                value: values.address1,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.address2 && errors.address2),\n                fullWidth: true,\n                helperText: touched.address2 && errors.address2,\n                label: \"Address 2\",\n                name: \"address2\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                value: values.address2,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.phone && errors.phone),\n                fullWidth: true,\n                helperText: touched.phone && errors.phone,\n                label: \"Phone number\",\n                name: \"phone\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                value: values.phone,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                gutterBottom: true,\n                variant: \"subtitle2\",\n                children: \"Email Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: \"Disabling this will automatically send the user a verification email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                checked: values.isVerified,\n                color: \"primary\",\n                edge: \"start\",\n                name: \"isVerified\",\n                onChange: handleChange,\n                value: values.isVerified\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                gutterBottom: true,\n                variant: \"subtitle2\",\n                children: \"Discounted Prices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: \"This will give the user discounted prices for all products\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                checked: values.hasDiscountedPrices,\n                color: \"primary\",\n                edge: \"start\",\n                name: \"hasDiscountedPrices\",\n                onChange: handleChange,\n                value: values.hasDiscountedPrices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: isSubmitting,\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Update Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomerEditForm;\nCustomerEditForm.propTypes = {\n  customer: PropTypes.object.isRequired\n};\nexport default CustomerEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerEditForm\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/customer/CustomerEditForm.js"],"names":["PropTypes","toast","Yup","Formik","Box","Button","Card","Grid","Switch","TextField","Typography","wait","CustomerEditForm","props","customer","other","address1","address2","country","email","hasDiscountedPrices","isVerified","name","phone","state","submit","object","shape","string","max","required","bool","values","resetForm","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","p","Boolean","mt","propTypes","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Card, Grid, Switch, TextField, Typography } from '@material-ui/core';\nimport wait from '../../../utils/wait';\n\nconst CustomerEditForm = (props) => {\n  const { customer, ...other } = props;\n\n  return (\n    <Formik\n      initialValues={{\n        address1: customer.address1 || '',\n        address2: customer.address2 || '',\n        country: customer.country || '',\n        email: customer.email || '',\n        hasDiscountedPrices: customer.hasDiscountedPrices || false,\n        isVerified: customer.isVerified || false,\n        name: customer.name || '',\n        phone: customer.phone || '',\n        state: customer.state || '',\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          address1: Yup.string().max(255),\n          address2: Yup.string().max(255),\n          country: Yup.string().max(255),\n          email: Yup\n            .string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          hasDiscountedPrices: Yup.bool(),\n          isVerified: Yup.bool(),\n          name: Yup\n            .string()\n            .max(255)\n            .required('Name is required'),\n          phone: Yup.string().max(15),\n          state: Yup.string().max(255)\n        })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          // NOTE: Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          toast.success('Customer updated!');\n        } catch (err) {\n          console.error(err);\n          toast.error('Something went wrong!');\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...other}\n        >\n          <Card>\n            <Box sx={{ p: 3 }}>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Full name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.country && errors.country)}\n                    fullWidth\n                    helperText={touched.country && errors.country}\n                    label=\"Country\"\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.country}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label=\"State/Region\"\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.address1 && errors.address1)}\n                    fullWidth\n                    helperText={touched.address1 && errors.address1}\n                    label=\"Address 1\"\n                    name=\"address1\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address1}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.address2 && errors.address2)}\n                    fullWidth\n                    helperText={touched.address2 && errors.address2}\n                    label=\"Address 2\"\n                    name=\"address2\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address2}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Email Verified\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Disabling this will automatically send the user\n                    a verification email\n                  </Typography>\n                  <Switch\n                    checked={values.isVerified}\n                    color=\"primary\"\n                    edge=\"start\"\n                    name=\"isVerified\"\n                    onChange={handleChange}\n                    value={values.isVerified}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Discounted Prices\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    This will give the user discounted prices for\n                    all products\n                  </Typography>\n                  <Switch\n                    checked={values.hasDiscountedPrices}\n                    color=\"primary\"\n                    edge=\"start\"\n                    name=\"hasDiscountedPrices\"\n                    onChange={handleChange}\n                    value={values.hasDiscountedPrices}\n                  />\n                </Grid>\n              </Grid>\n              <Box sx={{ mt: 2 }}>\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Update Customer\n                </Button>\n              </Box>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nCustomerEditForm.propTypes = {\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerEditForm;\n"]},"metadata":{},"sourceType":"module"}