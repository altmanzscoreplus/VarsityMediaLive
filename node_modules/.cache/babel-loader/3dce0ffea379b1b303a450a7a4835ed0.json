{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/authentication/login/LoginJWT.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Alert, Box, Button, FormHelperText, TextField } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginJWT = props => {\n  _s();\n\n  const mounted = useMounted();\n  const {\n    login\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: 'demo@devias.io',\n      password: 'Password123!',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().max(255).required('Password is required')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        await login(values.email, values.password);\n\n        if (mounted.current) {\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (mounted.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        error: Boolean(touched.email && errors.email),\n        fullWidth: true,\n        helperText: touched.email && errors.email,\n        label: \"Email Address\",\n        margin: \"normal\",\n        name: \"email\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        type: \"email\",\n        value: values.email,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: Boolean(touched.password && errors.password),\n        fullWidth: true,\n        helperText: touched.password && errors.password,\n        label: \"Password\",\n        margin: \"normal\",\n        name: \"password\",\n        onBlur: handleBlur,\n        onChange: handleChange,\n        type: \"password\",\n        value: values.password,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: isSubmitting,\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Use\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"demo@devias.io\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), ' ', \"and password\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Password123!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginJWT, \"Cg+EjCJBAuS+uEZYnWtRxiV2hGs=\", false, function () {\n  return [useMounted, useAuth];\n});\n\n_c = LoginJWT;\nexport default LoginJWT;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginJWT\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/authentication/login/LoginJWT.js"],"names":["Yup","Formik","Alert","Box","Button","FormHelperText","TextField","useAuth","useMounted","LoginJWT","props","mounted","login","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","current","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","mt"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Alert, Box, Button, FormHelperText, TextField } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\n\nconst LoginJWT = (props) => {\n  const mounted = useMounted();\n  const { login } = useAuth();\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'demo@devias.io',\n        password: 'Password123!',\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          email: Yup\n            .string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          password: Yup\n            .string()\n            .max(255)\n            .required('Password is required')\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await login(values.email, values.password);\n\n          if (mounted.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n          if (mounted.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <TextField\n            autoFocus\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          {errors.submit && (\n            <Box sx={{ mt: 3 }}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box sx={{ mt: 2 }}>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Log In\n            </Button>\n          </Box>\n          <Box sx={{ mt: 2 }}>\n            <Alert severity=\"info\">\n              <div>\n                Use\n                {' '}\n                <b>demo@devias.io</b>\n                {' '}\n                and password\n                {' '}\n                <b>Password123!</b>\n              </div>\n            </Alert>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginJWT;\n"]},"metadata":{},"sourceType":"module"}