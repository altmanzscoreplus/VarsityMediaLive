{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/customer/CustomerLogs.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { format } from 'date-fns';\nimport { Box, Card, CardHeader, Divider, Typography, Table, TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { customerApi } from '../../../__fakeApi__/customerApi';\nimport useMounted from '../../../hooks/useMounted';\nimport Label from '../../Label';\nimport MoreMenu from '../../MoreMenu';\nimport Scrollbar from '../../Scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerLogs = props => {\n  _s();\n\n  const mounted = useMounted();\n  const [logs, setLogs] = useState([]);\n  const getLogs = useCallback(async () => {\n    try {\n      const data = await customerApi.getCustomerLogs();\n\n      if (mounted.current) {\n        setLogs(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n  useEffect(() => {\n    getLogs();\n  }, [getLogs]);\n  return /*#__PURE__*/_jsxDEV(Card, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      action: /*#__PURE__*/_jsxDEV(MoreMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this),\n      title: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 1150\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: logs.map(log => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                width: \"100\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textPrimary\",\n                  variant: \"subtitle2\",\n                  children: log.method\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                width: \"64\",\n                children: /*#__PURE__*/_jsxDEV(Label, {\n                  color: log.status === 200 ? 'success' : 'error',\n                  children: log.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: log.route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: log.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: log.ip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: format(log.createdAt, 'yyyy/MM/dd | HH:mm:ss')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, log.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerLogs, \"3dt/WQ/ihmiPS8Xoa/2O4i0RnGk=\", false, function () {\n  return [useMounted];\n});\n\n_c = CustomerLogs;\nexport default CustomerLogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerLogs\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/customer/CustomerLogs.js"],"names":["useState","useEffect","useCallback","format","Box","Card","CardHeader","Divider","Typography","Table","TableBody","TableCell","TableRow","customerApi","useMounted","Label","MoreMenu","Scrollbar","CustomerLogs","props","mounted","logs","setLogs","getLogs","data","getCustomerLogs","current","err","console","error","minWidth","map","log","method","status","route","description","ip","createdAt","id"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { format } from 'date-fns';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\nimport { customerApi } from '../../../__fakeApi__/customerApi';\nimport useMounted from '../../../hooks/useMounted';\nimport Label from '../../Label';\nimport MoreMenu from '../../MoreMenu';\nimport Scrollbar from '../../Scrollbar';\n\nconst CustomerLogs = (props) => {\n  const mounted = useMounted();\n  const [logs, setLogs] = useState([]);\n\n  const getLogs = useCallback(async () => {\n    try {\n      const data = await customerApi.getCustomerLogs();\n\n      if (mounted.current) {\n        setLogs(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getLogs();\n  }, [getLogs]);\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={<MoreMenu />}\n        title=\"Logs\"\n      />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 1150 }}>\n          <Table>\n            <TableBody>\n              {logs.map((log) => (\n                <TableRow key={log.id}>\n                  <TableCell width=\"100\">\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      {log.method}\n                    </Typography>\n                  </TableCell>\n                  <TableCell width=\"64\">\n                    <Label\n                      color={log.status === 200\n                        ? 'success'\n                        : 'error'}\n                    >\n                      {log.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell>\n                    {log.route}\n                  </TableCell>\n                  <TableCell>\n                    {log.description}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {log.ip}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {format(log.createdAt, 'yyyy/MM/dd | HH:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n    </Card>\n  );\n};\n\nexport default CustomerLogs;\n"]},"metadata":{},"sourceType":"module"}