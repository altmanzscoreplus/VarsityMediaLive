{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCheckItem.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Button, Checkbox, IconButton, TextField, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport TrashIcon from '../../../icons/Trash';\nimport { deleteCheckItem, updateCheckItem } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanCheckItemRoot = experimentalStyled('div')(({\n  theme\n}) => ({\n  alignItems: 'flex-start',\n  borderRadius: theme.shape.borderRadius,\n  display: 'flex',\n  padding: theme.spacing(1),\n  '&:hover': {\n    backgroundColor: theme.palette.background.default,\n    '& button': {\n      visibility: 'visible'\n    }\n  }\n}));\n\nconst KanbanCheckItem = props => {\n  _s();\n\n  const {\n    cardId,\n    checkItem,\n    checklistId,\n    editing,\n    onEditCancel,\n    onEditComplete,\n    onEditInit,\n    ...other\n  } = props;\n  const dispatch = useDispatch();\n  const [name, setName] = useState(checkItem.name);\n\n  const handleStateChange = async event => {\n    try {\n      const state = event.target.checked ? 'complete' : 'incomplete';\n      await dispatch(updateCheckItem(cardId, checklistId, checkItem.id, {\n        state\n      }));\n      toast.success('Check item updated!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      await dispatch(updateCheckItem(cardId, checklistId, checkItem.id, {\n        name\n      }));\n      toast.success('Check item updated!');\n\n      if (onEditComplete) {\n        onEditComplete();\n      }\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const handleCancel = () => {\n    setName(checkItem.name);\n\n    if (onEditCancel) {\n      onEditCancel();\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCheckItem(cardId, checklistId, checkItem.id));\n      toast.success('Check item deleted!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(KanbanCheckItemRoot, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checkItem.state === 'complete',\n      color: \"primary\",\n      onChange: handleStateChange,\n      sx: {\n        ml: -1,\n        mr: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        onChange: handleNameChange,\n        value: name,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleSave,\n          size: \"small\",\n          variant: \"contained\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleCancel,\n          size: \"small\",\n          variant: \"text\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        onClick: onEditInit,\n        sx: {\n          flexGrow: 1,\n          cursor: 'pointer',\n          minHeight: 32\n        },\n        variant: \"body1\",\n        children: checkItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleDelete,\n        sx: {\n          visibility: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KanbanCheckItem, \"QsIHtPUAhi7+edazpEhAipQARsY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = KanbanCheckItem;\nKanbanCheckItem.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  checkItem: PropTypes.object.isRequired,\n  checklistId: PropTypes.string.isRequired,\n  editing: PropTypes.bool,\n  onEditCancel: PropTypes.func,\n  onEditComplete: PropTypes.func,\n  onEditInit: PropTypes.func,\n  sx: PropTypes.object\n};\nKanbanCheckItem.defaultProps = {\n  editing: false\n};\nexport default KanbanCheckItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanCheckItem\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCheckItem.js"],"names":["useState","PropTypes","toast","Box","Button","Checkbox","IconButton","TextField","Typography","experimentalStyled","TrashIcon","deleteCheckItem","updateCheckItem","useDispatch","KanbanCheckItemRoot","theme","alignItems","borderRadius","shape","display","padding","spacing","backgroundColor","palette","background","default","visibility","KanbanCheckItem","props","cardId","checkItem","checklistId","editing","onEditCancel","onEditComplete","onEditInit","other","dispatch","name","setName","handleStateChange","event","state","target","checked","id","success","err","console","error","handleNameChange","value","handleSave","handleCancel","handleDelete","ml","mr","flexGrow","mt","cursor","minHeight","propTypes","string","isRequired","object","bool","func","sx","defaultProps"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Button, Checkbox, IconButton, TextField, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport TrashIcon from '../../../icons/Trash';\nimport { deleteCheckItem, updateCheckItem } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanCheckItemRoot = experimentalStyled('div')(({ theme }) => ({\n  alignItems: 'flex-start',\n  borderRadius: theme.shape.borderRadius,\n  display: 'flex',\n  padding: theme.spacing(1),\n  '&:hover': {\n    backgroundColor: theme.palette.background.default,\n    '& button': {\n      visibility: 'visible'\n    }\n  }\n}));\n\nconst KanbanCheckItem = (props) => {\n  const {\n    cardId,\n    checkItem,\n    checklistId,\n    editing,\n    onEditCancel,\n    onEditComplete,\n    onEditInit,\n    ...other\n  } = props;\n  const dispatch = useDispatch();\n  const [name, setName] = useState(checkItem.name);\n\n  const handleStateChange = async (event) => {\n    try {\n      const state = event.target.checked ? 'complete' : 'incomplete';\n\n      await dispatch(updateCheckItem(cardId, checklistId, checkItem.id, { state }));\n      toast.success('Check item updated!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      await dispatch(updateCheckItem(cardId, checklistId, checkItem.id, { name }));\n      toast.success('Check item updated!');\n\n      if (onEditComplete) {\n        onEditComplete();\n      }\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const handleCancel = () => {\n    setName(checkItem.name);\n\n    if (onEditCancel) {\n      onEditCancel();\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCheckItem(cardId, checklistId, checkItem.id));\n      toast.success('Check item deleted!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return (\n    <KanbanCheckItemRoot {...other}>\n      <Checkbox\n        checked={checkItem.state === 'complete'}\n        color=\"primary\"\n        onChange={handleStateChange}\n        sx={{\n          ml: -1,\n          mr: 1\n        }}\n      />\n      {editing\n        ? (\n          <Box sx={{ flexGrow: 1 }}>\n            <TextField\n              fullWidth\n              onChange={handleNameChange}\n              value={name}\n              variant=\"outlined\"\n            />\n            <Box sx={{ mt: 1 }}>\n              <Button\n                color=\"primary\"\n                onClick={handleSave}\n                size=\"small\"\n                variant=\"contained\"\n              >\n                Save\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={handleCancel}\n                size=\"small\"\n                variant=\"text\"\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        )\n        : (\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              flexGrow: 1\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              onClick={onEditInit}\n              sx={{\n                flexGrow: 1,\n                cursor: 'pointer',\n                minHeight: 32\n              }}\n              variant=\"body1\"\n            >\n              {checkItem.name}\n            </Typography>\n            <IconButton\n              onClick={handleDelete}\n              sx={{ visibility: 'hidden' }}\n            >\n              <TrashIcon fontSize=\"small\" />\n            </IconButton>\n          </Box>\n        )}\n    </KanbanCheckItemRoot>\n  );\n};\n\nKanbanCheckItem.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  checkItem: PropTypes.object.isRequired,\n  checklistId: PropTypes.string.isRequired,\n  editing: PropTypes.bool,\n  onEditCancel: PropTypes.func,\n  onEditComplete: PropTypes.func,\n  onEditInit: PropTypes.func,\n  sx: PropTypes.object\n};\n\nKanbanCheckItem.defaultProps = {\n  editing: false\n};\n\nexport default KanbanCheckItem;\n"]},"metadata":{},"sourceType":"module"}