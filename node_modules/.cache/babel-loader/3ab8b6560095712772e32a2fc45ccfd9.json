{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/authentication/register/RegisterAmplify.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, FormHelperText, Link, TextField, Typography } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterAmplify = props => {\n  _s();\n\n  const mounted = useMounted();\n  const navigate = useNavigate();\n  const {\n    register\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: '',\n        policy: true,\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().min(7).max(255).required('Password is required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      }),\n      onSubmit: async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await register(values.email, values.password);\n          navigate('/authentication/verify-code', {\n            state: {\n              username: values.email\n            }\n          });\n        } catch (err) {\n          console.error(err);\n\n          if (mounted.current) {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        }\n      },\n      children: ({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        ...props,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(touched.email && errors.email),\n          fullWidth: true,\n          helperText: touched.email && errors.email,\n          label: \"Email Address\",\n          margin: \"normal\",\n          name: \"email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          type: \"email\",\n          value: values.email,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(touched.password && errors.password),\n          fullWidth: true,\n          helperText: touched.password && errors.password,\n          label: \"Password\",\n          margin: \"normal\",\n          name: \"password\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          type: \"password\",\n          value: values.password,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex',\n            ml: -1,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: values.policy,\n            color: \"primary\",\n            name: \"policy\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            children: [\"I have read the\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              color: \"primary\",\n              component: \"a\",\n              href: \"#\",\n              children: \"Terms and Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), Boolean(touched.policy && errors.policy) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.policy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: isSubmitting,\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterAmplify, \"uWxQ88NyUwRsE8w9M3RF1a0+2ls=\", false, function () {\n  return [useMounted, useNavigate, useAuth];\n});\n\n_c = RegisterAmplify;\nexport default RegisterAmplify;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterAmplify\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/authentication/register/RegisterAmplify.js"],"names":["useNavigate","Yup","Formik","Box","Button","Checkbox","FormHelperText","Link","TextField","Typography","useAuth","useMounted","RegisterAmplify","props","mounted","navigate","register","email","password","policy","submit","object","shape","string","max","required","min","boolean","oneOf","values","setErrors","setStatus","setSubmitting","state","username","err","console","error","current","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","alignItems","display","ml","mt"],"mappings":"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","sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\n\nconst RegisterAmplify = (props) => {\n  const mounted = useMounted();\n  const navigate = useNavigate();\n  const { register } = useAuth();\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          policy: true,\n          submit: null\n        }}\n        validationSchema={Yup\n          .object()\n          .shape({\n            email: Yup\n              .string()\n              .email('Must be a valid email')\n              .max(255)\n              .required('Email is required'),\n            password: Yup\n              .string()\n              .min(7)\n              .max(255)\n              .required('Password is required'),\n            policy: Yup\n              .boolean()\n              .oneOf([true], 'This field must be checked')\n          })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await register(values.email, values.password);\n\n            navigate('/authentication/verify-code', {\n              state: {\n                username: values.email\n              }\n            });\n          } catch (err) {\n            console.error(err);\n            if (mounted.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            {...props}\n          >\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                ml: -1,\n                mt: 2\n              }}\n            >\n              <Checkbox\n                checked={values.policy}\n                color=\"primary\"\n                name=\"policy\"\n                onChange={handleChange}\n              />\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                I have read the\n                {' '}\n                <Link\n                  color=\"primary\"\n                  component=\"a\"\n                  href=\"#\"\n                >\n                  Terms and Conditions\n                </Link>\n              </Typography>\n            </Box>\n            {Boolean(touched.policy && errors.policy) && (\n              <FormHelperText error>\n                {errors.policy}\n              </FormHelperText>\n            )}\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>\n                  {errors.submit}\n                </FormHelperText>\n              </Box>\n            )}\n            <Box sx={{ mt: 2 }}>\n              <Button\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Register\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default RegisterAmplify;\n"]},"metadata":{},"sourceType":"module"}