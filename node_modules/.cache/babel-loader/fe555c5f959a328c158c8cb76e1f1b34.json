{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/product/ProductListTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, Checkbox, FormControlLabel, IconButton, InputAdornment, Link, Switch, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField } from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport ImageIcon from '../../../icons/Image';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryOptions = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Dress',\n  value: 'dress'\n}, {\n  label: 'Jewelry',\n  value: 'jewelry'\n}, {\n  label: 'Blouse',\n  value: 'blouse'\n}, {\n  label: 'Beauty',\n  value: 'beauty'\n}];\nconst availabilityOptions = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Available',\n  value: 'available'\n}, {\n  label: 'Unavailable',\n  value: 'unavailable'\n}];\nconst sortOptions = [{\n  label: 'Last update (newest first)',\n  value: 'updatedAt|desc'\n}, {\n  label: 'Last update (oldest first)',\n  value: 'updatedAt|asc'\n}, {\n  label: 'Creation date (newest first)',\n  value: 'createdAt|desc'\n}, {\n  label: 'Creation date (oldest first)',\n  value: 'createdAt|asc'\n}];\n\nconst getInventoryLabel = inventoryType => {\n  const map = {\n    in_stock: {\n      text: 'In Stock',\n      color: 'success'\n    },\n    limited: {\n      text: 'Limited',\n      color: 'warning'\n    },\n    out_of_stock: {\n      text: 'Out of Stock',\n      color: 'error'\n    }\n  };\n  const {\n    text,\n    color\n  } = map[inventoryType];\n  return /*#__PURE__*/_jsxDEV(Label, {\n    color: color,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\nconst applyFilters = (products, query, filters) => products.filter(product => {\n  let matches = true;\n\n  if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n    matches = false;\n  }\n\n  if (filters.category && product.category !== filters.category) {\n    matches = false;\n  }\n\n  if (filters.availability) {\n    if (filters.availability === 'available' && !product.isAvailable) {\n      matches = false;\n    }\n\n    if (filters.availability === 'unavailable' && product.isAvailable) {\n      matches = false;\n    }\n  }\n\n  if (filters.inStock && !['in_stock', 'limited'].includes(product.inventoryType)) {\n    matches = false;\n  }\n\n  if (filters.isShippable && !product.isShippable) {\n    matches = false;\n  }\n\n  return matches;\n});\n\nconst applyPagination = (products, page, limit) => products.slice(page * limit, page * limit + limit);\n\nconst ProductListTable = props => {\n  _s();\n\n  const {\n    products,\n    ...other\n  } = props;\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  });\n\n  const handleQueryChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleCategoryChange = event => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(prevFilters => ({ ...prevFilters,\n      category: value\n    }));\n  };\n\n  const handleAvailabilityChange = event => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(prevFilters => ({ ...prevFilters,\n      availability: value\n    }));\n  };\n\n  const handleStockChange = event => {\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters(prevFilters => ({ ...prevFilters,\n      inStock: value\n    }));\n  };\n\n  const handleShippableChange = event => {\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters(prevFilters => ({ ...prevFilters,\n      isShippable: value\n    }));\n  };\n\n  const handleSortChange = event => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllProducts = event => {\n    setSelectedProducts(event.target.checked ? products.map(product => product.id) : []);\n  };\n\n  const handleSelectOneProduct = (event, productId) => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts(prevSelected => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts(prevSelected => prevSelected.filter(id => id !== productId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(parseInt(event.target.value, 10));\n  }; // Usually query is done on backend with indexing solutions\n\n\n  const filteredProducts = applyFilters(products, query, filters);\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\n  const enableBulkActions = selectedProducts.length > 0;\n  const selectedSomeProducts = selectedProducts.length > 0 && selectedProducts.length < products.length;\n  const selectedAllProducts = selectedProducts.length === products.length;\n  return /*#__PURE__*/_jsxDEV(Card, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        m: -1,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          maxWidth: '100%',\n          width: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)\n          },\n          onChange: handleQueryChange,\n          placeholder: \"Search products\",\n          value: query,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          maxWidth: '100%',\n          width: 240\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Sort By\",\n          name: \"sort\",\n          onChange: handleSortChange,\n          select: true,\n          SelectProps: {\n            native: true\n          },\n          value: sort,\n          variant: \"outlined\",\n          children: sortOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          maxWidth: '100%',\n          width: 240\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Category\",\n          name: \"category\",\n          onChange: handleCategoryChange,\n          select: true,\n          SelectProps: {\n            native: true\n          },\n          value: filters.category || 'all',\n          variant: \"outlined\",\n          children: categoryOptions.map(categoryOption => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: categoryOption.value,\n            children: categoryOption.label\n          }, categoryOption.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 1,\n          maxWidth: '100%',\n          width: 240\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Availability\",\n          name: \"availability\",\n          onChange: handleAvailabilityChange,\n          select: true,\n          SelectProps: {\n            native: true\n          },\n          value: filters.availability || 'all',\n          variant: \"outlined\",\n          children: availabilityOptions.map(availabilityOption => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: availabilityOption.value,\n            children: availabilityOption.label\n          }, availabilityOption.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: !!filters.inStock,\n            color: \"primary\",\n            name: \"inStock\",\n            onChange: handleStockChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this),\n          label: \"In Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          m: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: !!filters.isShippable,\n            color: \"primary\",\n            name: \"Shippable\",\n            onChange: handleShippableChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this),\n          label: \"Shippable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), enableBulkActions && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundColor: 'background.paper',\n          mt: '6px',\n          pl: '4px',\n          position: 'absolute',\n          pr: '4px',\n          width: '100%',\n          zIndex: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: selectedAllProducts,\n          color: \"primary\",\n          indeterminate: selectedSomeProducts,\n          onChange: handleSelectAllProducts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          sx: {\n            ml: 2\n          },\n          variant: \"outlined\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          sx: {\n            ml: 2\n          },\n          variant: \"outlined\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 1200\n        },\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedAllProducts,\n                  color: \"primary\",\n                  indeterminate: selectedSomeProducts,\n                  onChange: handleSelectAllProducts\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Inventory\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Attributes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: paginatedProducts.map(product => {\n              const isProductSelected = selectedProducts.includes(product.id);\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                selected: isProductSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isProductSelected,\n                    color: \"primary\",\n                    onChange: event => handleSelectOneProduct(event, product.id),\n                    value: isProductSelected\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      alignItems: 'center',\n                      display: 'flex'\n                    },\n                    children: [product.image ? /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        alignItems: 'center',\n                        backgroundColor: 'background.default',\n                        display: 'flex',\n                        height: 100,\n                        justifyContent: 'center',\n                        overflow: 'hidden',\n                        width: 100,\n                        '& img': {\n                          height: 'auto',\n                          width: '100%'\n                        }\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        alt: \"Product\",\n                        src: product.image\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        alignItems: 'center',\n                        backgroundColor: 'background.default',\n                        display: 'flex',\n                        height: 100,\n                        justifyContent: 'center',\n                        width: 100\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ImageIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                      color: \"textPrimary\",\n                      component: RouterLink,\n                      to: \"#\",\n                      underline: \"none\",\n                      sx: {\n                        ml: 2\n                      },\n                      variant: \"subtitle2\",\n                      children: product.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: getInventoryLabel(product.inventoryType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [product.quantity, ' ', \"in stock\", product.variants > 1 && ` in ${product.variants} variants`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.attributes.map(attr => attr)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: numeral(product.price).format(`${product.currency}0,0.00`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(PencilAltIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 556,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 21\n                }, this)]\n              }, product.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          component: \"div\",\n          count: filteredProducts.length,\n          onPageChange: handlePageChange,\n          onRowsPerPageChange: handleLimitChange,\n          page: page,\n          rowsPerPage: limit,\n          rowsPerPageOptions: [5, 10, 25]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductListTable, \"2IjnZplXXL6yfuKfXyD5VozBnoM=\");\n\n_c = ProductListTable;\nProductListTable.propTypes = {\n  products: PropTypes.array.isRequired\n};\nexport default ProductListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductListTable\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/product/ProductListTable.js"],"names":["useState","Link","RouterLink","numeral","PropTypes","Box","Button","Card","Checkbox","FormControlLabel","IconButton","InputAdornment","Switch","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","ArrowRightIcon","ImageIcon","PencilAltIcon","SearchIcon","Label","Scrollbar","categoryOptions","label","value","availabilityOptions","sortOptions","getInventoryLabel","inventoryType","map","in_stock","text","color","limited","out_of_stock","applyFilters","products","query","filters","filter","product","matches","name","toLowerCase","includes","category","availability","isAvailable","inStock","isShippable","applyPagination","page","limit","slice","ProductListTable","props","other","selectedProducts","setSelectedProducts","setPage","setLimit","setQuery","sort","setSort","setFilters","handleQueryChange","event","target","handleCategoryChange","prevFilters","handleAvailabilityChange","handleStockChange","checked","handleShippableChange","handleSortChange","handleSelectAllProducts","id","handleSelectOneProduct","productId","prevSelected","handlePageChange","newPage","handleLimitChange","parseInt","filteredProducts","paginatedProducts","enableBulkActions","length","selectedSomeProducts","selectedAllProducts","alignItems","display","flexWrap","m","p","maxWidth","width","startAdornment","native","option","categoryOption","availabilityOption","position","backgroundColor","mt","pl","pr","zIndex","ml","minWidth","isProductSelected","image","height","justifyContent","overflow","quantity","variants","attributes","attr","price","format","currency","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  InputAdornment,\n  Link,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport ImageIcon from '../../../icons/Image';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\n\nconst categoryOptions = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Dress',\n    value: 'dress'\n  },\n  {\n    label: 'Jewelry',\n    value: 'jewelry'\n  },\n  {\n    label: 'Blouse',\n    value: 'blouse'\n  },\n  {\n    label: 'Beauty',\n    value: 'beauty'\n  }\n];\n\nconst availabilityOptions = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Available',\n    value: 'available'\n  },\n  {\n    label: 'Unavailable',\n    value: 'unavailable'\n  }\n];\n\nconst sortOptions = [\n  {\n    label: 'Last update (newest first)',\n    value: 'updatedAt|desc'\n  },\n  {\n    label: 'Last update (oldest first)',\n    value: 'updatedAt|asc'\n  },\n  {\n    label: 'Creation date (newest first)',\n    value: 'createdAt|desc'\n  },\n  {\n    label: 'Creation date (oldest first)',\n    value: 'createdAt|asc'\n  }\n];\n\nconst getInventoryLabel = (inventoryType) => {\n  const map = {\n    in_stock: {\n      text: 'In Stock',\n      color: 'success'\n    },\n    limited: {\n      text: 'Limited',\n      color: 'warning'\n    },\n    out_of_stock: {\n      text: 'Out of Stock',\n      color: 'error'\n    }\n  };\n\n  const { text, color } = map[inventoryType];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyFilters = (products, query, filters) => products\n  .filter((product) => {\n    let matches = true;\n\n    if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    if (filters.category && product.category !== filters.category) {\n      matches = false;\n    }\n\n    if (filters.availability) {\n      if (filters.availability === 'available' && !product.isAvailable) {\n        matches = false;\n      }\n\n      if (filters.availability === 'unavailable' && product.isAvailable) {\n        matches = false;\n      }\n    }\n\n    if (filters.inStock && ![\n      'in_stock',\n      'limited'\n    ].includes(product.inventoryType)) {\n      matches = false;\n    }\n\n    if (filters.isShippable && !product.isShippable) {\n      matches = false;\n    }\n\n    return matches;\n  });\n\nconst applyPagination = (products, page, limit) => products\n  .slice(page * limit, page * limit + limit);\n\nconst ProductListTable = (props) => {\n  const { products, ...other } = props;\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  });\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleCategoryChange = (event) => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      category: value\n    }));\n  };\n\n  const handleAvailabilityChange = (event) => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      availability: value\n    }));\n  };\n\n  const handleStockChange = (event) => {\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      inStock: value\n    }));\n  };\n\n  const handleShippableChange = (event) => {\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      isShippable: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllProducts = (event) => {\n    setSelectedProducts(event.target.checked\n      ? products.map((product) => product.id)\n      : []);\n  };\n\n  const handleSelectOneProduct = (event, productId) => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts((prevSelected) => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts((prevSelected) => prevSelected.filter((id) => id !== productId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredProducts = applyFilters(products, query, filters);\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\n  const enableBulkActions = selectedProducts.length > 0;\n  const selectedSomeProducts = selectedProducts.length > 0\n    && selectedProducts.length < products.length;\n  const selectedAllProducts = selectedProducts.length === products.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search products\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Category\"\n            name=\"category\"\n            onChange={handleCategoryChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.category || 'all'}\n            variant=\"outlined\"\n          >\n            {categoryOptions.map((categoryOption) => (\n              <option\n                key={categoryOption.value}\n                value={categoryOption.value}\n              >\n                {categoryOption.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Availability\"\n            name=\"availability\"\n            onChange={handleAvailabilityChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.availability || 'all'}\n            variant=\"outlined\"\n          >\n            {availabilityOptions.map((availabilityOption) => (\n              <option\n                key={availabilityOption.value}\n                value={availabilityOption.value}\n              >\n                {availabilityOption.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box sx={{ m: 2 }}>\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={!!filters.inStock}\n                color=\"primary\"\n                name=\"inStock\"\n                onChange={handleStockChange}\n              />\n            )}\n            label=\"In Stock\"\n          />\n        </Box>\n        <Box sx={{ m: 2 }}>\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={!!filters.isShippable}\n                color=\"primary\"\n                name=\"Shippable\"\n                onChange={handleShippableChange}\n              />\n            )}\n            label=\"Shippable\"\n          />\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              pl: '4px',\n              position: 'absolute',\n              pr: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllProducts}\n              color=\"primary\"\n              indeterminate={selectedSomeProducts}\n              onChange={handleSelectAllProducts}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 1200 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllProducts}\n                    color=\"primary\"\n                    indeterminate={selectedSomeProducts}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Inventory\n                </TableCell>\n                <TableCell>\n                  Details\n                </TableCell>\n                <TableCell>\n                  Attributes\n                </TableCell>\n                <TableCell>\n                  Price\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedProducts.map((product) => {\n                const isProductSelected = selectedProducts.includes(product.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={product.id}\n                    selected={isProductSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isProductSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneProduct(event, product.id)}\n                        value={isProductSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        {product.image\n                          ? (\n                            <Box\n                              sx={{\n                                alignItems: 'center',\n                                backgroundColor: 'background.default',\n                                display: 'flex',\n                                height: 100,\n                                justifyContent: 'center',\n                                overflow: 'hidden',\n                                width: 100,\n                                '& img': {\n                                  height: 'auto',\n                                  width: '100%'\n                                }\n                              }}\n                            >\n                              <img\n                                alt=\"Product\"\n                                src={product.image}\n                              />\n                            </Box>\n                          )\n                          : (\n                            <Box\n                              sx={{\n                                alignItems: 'center',\n                                backgroundColor: 'background.default',\n                                display: 'flex',\n                                height: 100,\n                                justifyContent: 'center',\n                                width: 100\n                              }}\n                            >\n                              <ImageIcon fontSize=\"small\" />\n                            </Box>\n                          )}\n                        <Link\n                          color=\"textPrimary\"\n                          component={RouterLink}\n                          to=\"#\"\n                          underline=\"none\"\n                          sx={{ ml: 2 }}\n                          variant=\"subtitle2\"\n                        >\n                          {product.name}\n                        </Link>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {getInventoryLabel(product.inventoryType)}\n                    </TableCell>\n                    <TableCell>\n                      {product.quantity}\n                      {' '}\n                      in stock\n                      {product.variants > 1 && ` in ${product.variants} variants`}\n                    </TableCell>\n                    <TableCell>\n                      {product.attributes.map((attr) => attr)}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(product.price)\n                        .format(`${product.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton>\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton>\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={filteredProducts.length}\n            onPageChange={handlePageChange}\n            onRowsPerPageChange={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </Box>\n      </Scrollbar>\n    </Card>\n  );\n};\n\nProductListTable.propTypes = {\n  products: PropTypes.array.isRequired\n};\n\nexport default ProductListTable;\n"]},"metadata":{},"sourceType":"module"}