{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/authentication/verify-code/VerifyCodeAmplify.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, FormHelperText, TextField, Typography } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerifyCodeAmplify = () => {\n  _s();\n\n  var _location$state;\n\n  const mounted = useMounted();\n  const {\n    verifyCode\n  } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const itemsRef = useRef([]);\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, 6);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || '',\n      code: ['', '', '', '', '', ''],\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      code: Yup.array().of(Yup.string().required('Code is required'))\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        await verifyCode(values.email, values.code.join(''));\n        navigate('/authentication/login');\n      } catch (err) {\n        console.error(err);\n\n        if (mounted.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      setFieldValue,\n      touched,\n      values\n    }) => {\n      var _location$state2;\n\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [!((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username) ? /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          error: Boolean(touched.email && errors.email),\n          fullWidth: true,\n          helperText: touched.email && errors.email,\n          label: \"Email Address\",\n          margin: \"normal\",\n          name: \"email\",\n          onBlur: handleBlur,\n          onChange: handleChange,\n          type: \"email\",\n          value: values.email,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n          disabled: true,\n          fullWidth: true,\n          margin: \"normal\",\n          value: location.state.username,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          sx: {\n            mb: 2,\n            mt: 3\n          },\n          variant: \"subtitle2\",\n          children: \"Verification code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            columnGap: '16px',\n            gridTemplateColumns: 'repeat(7, 1fr)',\n            pt: 1\n          },\n          children: [1, 2, 3, 4, 5, 6].map((ref, i) => /*#__PURE__*/_jsxDEV(TextField, {\n            error: Boolean(Array.isArray(touched.code) && touched.code.length === 6 && errors.code),\n            fullWidth: true,\n            inputRef: el => itemsRef.current[i] = el // eslint-disable-next-line react/no-array-index-key\n            ,\n            name: `code[${i}]`,\n            onBlur: handleBlur,\n            onKeyDown: event => {\n              if (event.code === 'ENTER') {\n                if (values.code[i]) {\n                  setFieldValue(`code[${i}]`, '');\n                  return;\n                }\n\n                if (i > 0) {\n                  setFieldValue(`code[${i}]`, '');\n                  itemsRef.current[i - 1].focus();\n                  return;\n                }\n              }\n\n              if (Number.isInteger(parseInt(event.key, 10))) {\n                setFieldValue(`code[${i}]`, event.key);\n\n                if (i < 5) {\n                  itemsRef.current[i + 1].focus();\n                }\n              }\n            },\n            onPaste: event => {\n              const paste = event.clipboardData.getData('text');\n              const pasteArray = paste.split('');\n\n              if (pasteArray.length !== 6) {\n                return;\n              }\n\n              let valid = true;\n              pasteArray.forEach(x => {\n                if (!Number.isInteger(parseInt(x, 10))) {\n                  valid = false;\n                }\n              });\n\n              if (valid) {\n                setFieldValue('code', pasteArray);\n                itemsRef.current[5].focus();\n              }\n            },\n            value: values.code[i],\n            sx: {\n              display: 'inline-block',\n              textAlign: 'center',\n              '& .MuiInputBase-input': {\n                textAlign: 'center'\n              }\n            },\n            variant: \"outlined\"\n          }, `code-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), Boolean(Array.isArray(touched.code) && touched.code.length === 6 && errors.code) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          sx: {\n            mx: '14px'\n          },\n          children: Array.isArray(errors.code) && errors.code.find(x => x !== undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: isSubmitting,\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerifyCodeAmplify, \"h9P2wG3RHGTq+oN5scI3UJeGkrA=\", false, function () {\n  return [useMounted, useAuth, useLocation, useNavigate];\n});\n\n_c = VerifyCodeAmplify;\nexport default VerifyCodeAmplify;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyCodeAmplify\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/authentication/verify-code/VerifyCodeAmplify.js"],"names":["useEffect","useRef","useLocation","useNavigate","Yup","Formik","Box","Button","FormHelperText","TextField","Typography","useAuth","useMounted","VerifyCodeAmplify","mounted","verifyCode","location","navigate","itemsRef","current","slice","email","state","username","code","submit","object","shape","string","max","required","array","of","values","setErrors","setStatus","setSubmitting","join","err","console","error","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Boolean","mb","mt","display","columnGap","gridTemplateColumns","pt","map","ref","i","Array","isArray","length","el","event","focus","Number","isInteger","parseInt","key","paste","clipboardData","getData","pasteArray","split","valid","forEach","x","textAlign","mx","find","undefined"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, FormHelperText, TextField, Typography } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\n\nconst VerifyCodeAmplify = () => {\n  const mounted = useMounted();\n  const { verifyCode } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const itemsRef = useRef([]);\n\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, 6);\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{\n        email: location.state?.username || '',\n        code: ['', '', '', '', '', ''],\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          email: Yup\n            .string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          code: Yup\n            .array()\n            .of(Yup.string().required('Code is required'))\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await verifyCode(values.email, values.code.join(''));\n\n          navigate('/authentication/login');\n        } catch (err) {\n          console.error(err);\n          if (mounted.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n        >\n          {!location.state?.username\n            ? (\n              <TextField\n                autoFocus\n                error={Boolean(touched.email && errors.email)}\n                fullWidth\n                helperText={touched.email && errors.email}\n                label=\"Email Address\"\n                margin=\"normal\"\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"email\"\n                value={values.email}\n                variant=\"outlined\"\n              />\n            )\n            : (\n              <TextField\n                disabled\n                fullWidth\n                margin=\"normal\"\n                value={location.state.username}\n                variant=\"outlined\"\n              />\n            )}\n          <Typography\n            color=\"textSecondary\"\n            sx={{\n              mb: 2,\n              mt: 3\n            }}\n            variant=\"subtitle2\"\n          >\n            Verification code\n          </Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              columnGap: '16px',\n              gridTemplateColumns: 'repeat(7, 1fr)',\n              pt: 1\n            }}\n          >\n            {[1, 2, 3, 4, 5, 6].map((ref, i) => (\n              <TextField\n                error={Boolean(Array.isArray(touched.code)\n                  && touched.code.length === 6\n                  && errors.code)}\n                fullWidth\n                inputRef={(el) => itemsRef.current[i] = el}\n                // eslint-disable-next-line react/no-array-index-key\n                key={`code-${i}`}\n                name={`code[${i}]`}\n                onBlur={handleBlur}\n                onKeyDown={(event) => {\n                  if (event.code === 'ENTER') {\n                    if (values.code[i]) {\n                      setFieldValue(`code[${i}]`, '');\n                      return;\n                    }\n\n                    if (i > 0) {\n                      setFieldValue(`code[${i}]`, '');\n                      itemsRef.current[i - 1].focus();\n                      return;\n                    }\n                  }\n\n                  if (Number.isInteger(parseInt(event.key, 10))) {\n                    setFieldValue(`code[${i}]`, event.key);\n\n                    if (i < 5) {\n                      itemsRef.current[i + 1].focus();\n                    }\n                  }\n                }}\n                onPaste={(event) => {\n                  const paste = event.clipboardData.getData('text');\n                  const pasteArray = paste.split('');\n\n                  if (pasteArray.length !== 6) {\n                    return;\n                  }\n\n                  let valid = true;\n\n                  pasteArray.forEach((x) => {\n                    if (!Number.isInteger(parseInt(x, 10))) {\n                      valid = false;\n                    }\n                  });\n\n                  if (valid) {\n                    setFieldValue('code', pasteArray);\n                    itemsRef.current[5].focus();\n                  }\n                }}\n                value={values.code[i]}\n                sx={{\n                  display: 'inline-block',\n                  textAlign: 'center',\n                  '& .MuiInputBase-input': {\n                    textAlign: 'center'\n                  }\n                }}\n                variant=\"outlined\"\n              />\n            ))}\n          </Box>\n          {Boolean(Array.isArray(touched.code)\n            && touched.code.length === 6\n            && errors.code) && (\n            <FormHelperText\n              error\n              sx={{ mx: '14px' }}\n            >\n              {Array.isArray(errors.code) && errors.code.find((x) => x !== undefined)}\n            </FormHelperText>\n          )}\n          {errors.submit && (\n            <Box sx={{ mt: 3 }}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box sx={{ mt: 3 }}>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Verify\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default VerifyCodeAmplify;\n"]},"metadata":{},"sourceType":"module"}