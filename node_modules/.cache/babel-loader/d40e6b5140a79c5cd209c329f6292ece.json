{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/mail/MailItem.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Avatar, Box, Checkbox, IconButton, Tooltip, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport { useSelector } from '../../../store';\nimport getInitials from '../../../utils/getInitials';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label = experimentalStyled('span')(({\n  theme\n}) => ({\n  borderRadius: 2,\n  color: theme.palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(12),\n  marginLeft: theme.spacing(1),\n  paddingBottom: 2,\n  paddingLeft: 4,\n  paddingRight: 4,\n  paddingTop: 2\n}));\n\nconst getTo = (params, emailId) => {\n  const {\n    systemLabel,\n    customLabel\n  } = params;\n  const baseUrl = '/dashboard/mail';\n\n  if (systemLabel) {\n    return `${baseUrl}/${systemLabel}/${emailId}`;\n  }\n\n  if (customLabel) {\n    return `${baseUrl}/label/${customLabel}/${emailId}`;\n  }\n\n  return baseUrl;\n};\n\nconst MailItem = props => {\n  _s();\n\n  const {\n    email,\n    onDeselect,\n    onSelect,\n    selected,\n    ...other\n  } = props;\n  const params = useParams();\n  const {\n    labels\n  } = useSelector(state => state.mail);\n\n  const handleCheckboxChange = event => {\n    const {\n      checked\n    } = event.target;\n\n    if (checked && onSelect) {\n      onSelect();\n    }\n\n    if (!checked && onDeselect) {\n      onDeselect();\n    }\n  };\n\n  const handleStarToggle = () => {// dispatch action\n  };\n\n  const handleImportantToggle = () => {// dispatch action\n  };\n\n  const to = getTo(params, email.id);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      alignItems: 'center',\n      backgroundColor: 'background.paper',\n      borderBottom: theme => ` 1px solid ${theme.palette.divider}`,\n      display: 'flex',\n      p: 2,\n      ...(!email.isUnread && {\n        position: 'relative',\n        '&:before': {\n          backgroundColor: 'error.main',\n          content: '\" \"',\n          height: '100%',\n          left: 0,\n          position: 'absolute',\n          top: 0,\n          width: 4\n        },\n        '& $name, & $subject': {\n          fontWeight: 600\n        }\n      }),\n      ...(selected && {\n        backgroundColor: 'action.selected'\n      }),\n      '&:hover': {\n        backgroundColor: 'action.hover'\n      }\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: {\n          md: 'flex',\n          xs: 'none'\n        },\n        mr: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: selected,\n        color: \"primary\",\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Starred\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleStarToggle,\n          children: email.isStarred ? /*#__PURE__*/_jsxDEV(StarIcon, {\n            fontSize: \"small\",\n            sx: {\n              color: amber[400]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Important\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleImportantToggle,\n          children: email.isImportant ? /*#__PURE__*/_jsxDEV(LabelImportantIcon, {\n            fontSize: \"small\",\n            sx: {\n              color: amber[400]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(LabelImportantIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: RouterLink,\n      to: to,\n      sx: {\n        cursor: 'pointer',\n        display: 'flex',\n        flexGrow: 1,\n        minWidth: '1px',\n        textDecoration: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: email.from.avatar,\n        children: getInitials(email.from.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: {\n            md: 'center'\n          },\n          display: {\n            md: 'flex'\n          },\n          flexGrow: {\n            md: 1\n          },\n          minWidth: '1px',\n          ml: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          sx: {\n            flexBasis: {\n              md: 180\n            },\n            minWidth: {\n              md: 180\n            },\n            ...(!email.isUnread && {\n              fontWeight: 600\n            })\n          },\n          variant: \"body2\",\n          children: email.from.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          sx: {\n            maxWidth: 400,\n            mr: 2,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            ...(!email.isUnread && {\n              fontWeight: 600\n            })\n          },\n          variant: \"body2\",\n          children: email.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: {\n              xs: 'none',\n              sm: 'block'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            sx: {\n              flexGrow: 1,\n              marginRight: 'auto',\n              maxWidth: 800,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap'\n            },\n            variant: \"body2\",\n            children: [\"-\", email.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), email.labelIds.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              mx: 2\n            },\n            children: email.labelIds.map(labelId => {\n              const label = labels.find(_label => _label.id === labelId);\n\n              if (!label) {\n                return null;\n              }\n\n              return /*#__PURE__*/_jsxDEV(Label, {\n                sx: {\n                  backgroundColor: label.color\n                },\n                children: label.name\n              }, label.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          noWrap: true,\n          variant: \"caption\",\n          children: format(email.createdAt, 'dd MMM yyyy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MailItem, \"tnNXlGEFbPQvE8hWXRta4b/cu8g=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = MailItem;\nMailItem.propTypes = {\n  email: PropTypes.object.isRequired,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool.isRequired\n};\nexport default MailItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailItem\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/mail/MailItem.js"],"names":["Link","RouterLink","useParams","PropTypes","format","Avatar","Box","Checkbox","IconButton","Tooltip","Typography","experimentalStyled","amber","StarIcon","StarBorderIcon","LabelImportantIcon","useSelector","getInitials","Label","theme","borderRadius","color","palette","common","white","fontFamily","typography","fontSize","pxToRem","marginLeft","spacing","paddingBottom","paddingLeft","paddingRight","paddingTop","getTo","params","emailId","systemLabel","customLabel","baseUrl","MailItem","props","email","onDeselect","onSelect","selected","other","labels","state","mail","handleCheckboxChange","event","checked","target","handleStarToggle","handleImportantToggle","to","id","alignItems","backgroundColor","borderBottom","divider","display","p","isUnread","position","content","height","left","top","width","fontWeight","md","xs","mr","isStarred","isImportant","cursor","flexGrow","minWidth","textDecoration","from","avatar","name","ml","flexBasis","maxWidth","overflow","textOverflow","whiteSpace","subject","sm","marginRight","message","labelIds","length","mx","map","labelId","label","find","_label","createdAt","propTypes","object","isRequired","func","bool"],"mappings":"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","sourcesContent":["import { Link as RouterLink, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Avatar, Box, Checkbox, IconButton, Tooltip, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport { useSelector } from '../../../store';\nimport getInitials from '../../../utils/getInitials';\n\nconst Label = experimentalStyled('span')(({ theme }) => ({\n  borderRadius: 2,\n  color: theme.palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(12),\n  marginLeft: theme.spacing(1),\n  paddingBottom: 2,\n  paddingLeft: 4,\n  paddingRight: 4,\n  paddingTop: 2\n}));\n\nconst getTo = (params, emailId) => {\n  const { systemLabel, customLabel } = params;\n  const baseUrl = '/dashboard/mail';\n\n  if (systemLabel) {\n    return `${baseUrl}/${systemLabel}/${emailId}`;\n  }\n\n  if (customLabel) {\n    return `${baseUrl}/label/${customLabel}/${emailId}`;\n  }\n\n  return baseUrl;\n};\n\nconst MailItem = (props) => {\n  const { email, onDeselect, onSelect, selected, ...other } = props;\n  const params = useParams();\n  const { labels } = useSelector((state) => state.mail);\n\n  const handleCheckboxChange = (event) => {\n    const { checked } = event.target;\n\n    if (checked && onSelect) {\n      onSelect();\n    }\n\n    if (!checked && onDeselect) {\n      onDeselect();\n    }\n  };\n\n  const handleStarToggle = () => {\n    // dispatch action\n  };\n\n  const handleImportantToggle = () => {\n    // dispatch action\n  };\n\n  const to = getTo(params, email.id);\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        backgroundColor: 'background.paper',\n        borderBottom: (theme) => ` 1px solid ${theme.palette.divider}`,\n        display: 'flex',\n        p: 2,\n        ...(!email.isUnread && {\n          position: 'relative',\n          '&:before': {\n            backgroundColor: 'error.main',\n            content: '\" \"',\n            height: '100%',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 4\n          },\n          '& $name, & $subject': {\n            fontWeight: 600\n          }\n        }),\n        ...(selected && {\n          backgroundColor: 'action.selected'\n        }),\n        '&:hover': {\n          backgroundColor: 'action.hover'\n        }\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: {\n            md: 'flex',\n            xs: 'none'\n          },\n          mr: 1\n        }}\n      >\n        <Checkbox\n          checked={selected}\n          color=\"primary\"\n          onChange={handleCheckboxChange}\n        />\n        <Tooltip title=\"Starred\">\n          <IconButton onClick={handleStarToggle}>\n            {email.isStarred\n              ? (\n                <StarIcon\n                  fontSize=\"small\"\n                  sx={{ color: amber[400] }}\n                />\n              )\n              : (\n                <StarBorderIcon fontSize=\"small\" />\n              )}\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Important\">\n          <IconButton onClick={handleImportantToggle}>\n            {email.isImportant\n              ? (\n                <LabelImportantIcon\n                  fontSize=\"small\"\n                  sx={{ color: amber[400] }}\n                />\n              )\n              : <LabelImportantIcon fontSize=\"small\" />}\n          </IconButton>\n        </Tooltip>\n      </Box>\n      <Box\n        component={RouterLink}\n        to={to}\n        sx={{\n          cursor: 'pointer',\n          display: 'flex',\n          flexGrow: 1,\n          minWidth: '1px',\n          textDecoration: 'none'\n        }}\n      >\n        <Avatar src={email.from.avatar}>\n          {getInitials(email.from.name)}\n        </Avatar>\n        <Box\n          sx={{\n            alignItems: {\n              md: 'center'\n            },\n            display: {\n              md: 'flex'\n            },\n            flexGrow: {\n              md: 1\n            },\n            minWidth: '1px',\n            ml: 1\n          }}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{\n              flexBasis: {\n                md: 180\n              },\n              minWidth: {\n                md: 180\n              },\n              ...(!email.isUnread && {\n                fontWeight: 600\n              })\n            }}\n            variant=\"body2\"\n          >\n            {email.from.name}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            sx={{\n              maxWidth: 400,\n              mr: 2,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              ...(!email.isUnread && {\n                fontWeight: 600\n              })\n            }}\n            variant=\"body2\"\n          >\n            {email.subject}\n          </Typography>\n          <Box\n            sx={{\n              display: {\n                xs: 'none',\n                sm: 'block'\n              }\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              sx={{\n                flexGrow: 1,\n                marginRight: 'auto',\n                maxWidth: 800,\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap'\n              }}\n              variant=\"body2\"\n            >\n              -\n              {email.message}\n            </Typography>\n            {email.labelIds.length > 0 && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  mx: 2\n                }}\n              >\n                {email.labelIds.map((labelId) => {\n                  const label = labels.find((_label) => _label.id === labelId);\n\n                  if (!label) {\n                    return null;\n                  }\n\n                  return (\n                    <Label\n                      key={label.id}\n                      sx={{ backgroundColor: label.color }}\n                    >\n                      {label.name}\n                    </Label>\n                  );\n                })}\n              </Box>\n            )}\n          </Box>\n          <Typography\n            color=\"textSecondary\"\n            noWrap\n            variant=\"caption\"\n          >\n            {format(email.createdAt, 'dd MMM yyyy')}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nMailItem.propTypes = {\n  email: PropTypes.object.isRequired,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool.isRequired\n};\n\nexport default MailItem;\n"]},"metadata":{},"sourceType":"module"}