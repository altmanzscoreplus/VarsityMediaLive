{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/mail/MailSidebar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Button, Divider, Drawer, List } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useDispatch, useSelector } from '../../../store';\nimport { closeSidebar, openCompose } from '../../../slices/mail';\nimport MailLabel from './MailLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MailSidebarDesktop = experimentalStyled(Drawer)({\n  width: 280,\n  '& .MuiDrawer-paper': {\n    position: 'relative'\n  }\n});\nconst MailSidebarMobile = experimentalStyled(Drawer)({\n  '& .MuiBackdrop-root': {\n    position: 'absolute'\n  },\n  '& .MuiDrawer-paper': {\n    position: 'relative',\n    width: 280\n  }\n});\n\nconst MailSidebar = ({\n  containerRef\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    labels,\n    isSidebarOpen\n  } = useSelector(state => state.mail);\n  const mdUp = useMediaQuery(theme => theme.breakpoints.up('md'));\n  useEffect(() => {\n    if (isSidebarOpen) {\n      dispatch(closeSidebar());\n    }\n  }, [location.pathname]);\n\n  const handleCloseSidebar = () => {\n    dispatch(closeSidebar());\n  };\n\n  const handleComposeClick = () => {\n    dispatch(openCompose());\n  };\n\n  const content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 3,\n        py: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        fullWidth: true,\n        onClick: handleComposeClick,\n        variant: \"contained\",\n        children: \"Compose\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 2,\n        pr: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: labels.map(label => /*#__PURE__*/_jsxDEV(MailLabel, {\n          label: label\n        }, label.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  if (mdUp) {\n    return /*#__PURE__*/_jsxDEV(MailSidebarDesktop, {\n      variant: \"permanent\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MailSidebarMobile, {\n    ModalProps: {\n      container: () => containerRef.current\n    },\n    onClose: handleCloseSidebar,\n    open: isSidebarOpen,\n    variant: \"temporary\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MailSidebar, \"wSe/dQo7lRFXqIIZGfFCIE1TRV8=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useMediaQuery];\n});\n\n_c = MailSidebar;\nMailSidebar.propTypes = {\n  containerRef: PropTypes.any.isRequired\n};\nexport default MailSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailSidebar\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/mail/MailSidebar.js"],"names":["useEffect","PropTypes","useLocation","Box","Button","Divider","Drawer","List","experimentalStyled","useMediaQuery","useDispatch","useSelector","closeSidebar","openCompose","MailLabel","MailSidebarDesktop","width","position","MailSidebarMobile","MailSidebar","containerRef","dispatch","location","labels","isSidebarOpen","state","mail","mdUp","theme","breakpoints","up","pathname","handleCloseSidebar","handleComposeClick","content","px","py","pr","map","label","id","container","current","propTypes","any","isRequired"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Button, Divider, Drawer, List } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useDispatch, useSelector } from '../../../store';\nimport { closeSidebar, openCompose } from '../../../slices/mail';\nimport MailLabel from './MailLabel';\n\nconst MailSidebarDesktop = experimentalStyled(Drawer)({\n  width: 280,\n  '& .MuiDrawer-paper': {\n    position: 'relative'\n  }\n});\n\nconst MailSidebarMobile = experimentalStyled(Drawer)({\n  '& .MuiBackdrop-root': {\n    position: 'absolute'\n  },\n  '& .MuiDrawer-paper': {\n    position: 'relative',\n    width: 280\n  }\n});\n\nconst MailSidebar = ({ containerRef }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { labels, isSidebarOpen } = useSelector((state) => state.mail);\n  const mdUp = useMediaQuery((theme) => theme.breakpoints.up('md'));\n\n  useEffect(() => {\n    if (isSidebarOpen) {\n      dispatch(closeSidebar());\n    }\n  }, [location.pathname]);\n\n  const handleCloseSidebar = () => {\n    dispatch(closeSidebar());\n  };\n\n  const handleComposeClick = () => {\n    dispatch(openCompose());\n  };\n\n  const content = (\n    <div>\n      <Box\n        sx={{\n          px: 3,\n          py: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          fullWidth\n          onClick={handleComposeClick}\n          variant=\"contained\"\n        >\n          Compose\n        </Button>\n      </Box>\n      <Divider />\n      <Box\n        sx={{\n          py: 2,\n          pr: 2\n        }}\n      >\n        <List>\n          {labels.map((label) => (\n            <MailLabel\n              key={label.id}\n              label={label}\n            />\n          ))}\n        </List>\n      </Box>\n    </div>\n  );\n\n  if (mdUp) {\n    return (\n      <MailSidebarDesktop variant=\"permanent\">\n        {content}\n      </MailSidebarDesktop>\n    );\n  }\n\n  return (\n    <MailSidebarMobile\n      ModalProps={{ container: () => containerRef.current }}\n      onClose={handleCloseSidebar}\n      open={isSidebarOpen}\n      variant=\"temporary\"\n    >\n      {content}\n    </MailSidebarMobile>\n  );\n};\n\nMailSidebar.propTypes = {\n  containerRef: PropTypes.any.isRequired\n};\n\nexport default MailSidebar;\n"]},"metadata":{},"sourceType":"module"}