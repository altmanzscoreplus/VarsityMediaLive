{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/product/ProductCreateForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Card, CardContent, CardHeader, Checkbox, FormControlLabel, FormHelperText, Grid, TextField, Typography } from '@material-ui/core';\nimport FileDropzone from '../../FileDropzone';\nimport QuillEditor from '../../QuillEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryOptions = [{\n  value: 'shirts',\n  label: 'Shirts'\n}, {\n  label: 'Phones',\n  value: 'phones'\n}, {\n  label: 'Cars',\n  value: 'cars'\n}];\n\nconst ProductCreateForm = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n\n  const handleDrop = newFiles => {\n    setFiles(prevFiles => [...prevFiles, ...newFiles]);\n  };\n\n  const handleRemove = file => {\n    setFiles(prevFiles => prevFiles.filter(_file => _file.path !== file.path));\n  };\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      category: '',\n      description: '',\n      images: [],\n      includesTaxes: false,\n      isTaxable: false,\n      name: '',\n      price: '',\n      productCode: '',\n      productSku: '',\n      salePrice: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      category: Yup.string().max(255),\n      description: Yup.string().max(5000),\n      images: Yup.array(),\n      includesTaxes: Yup.bool().required(),\n      isTaxable: Yup.bool().required(),\n      name: Yup.string().max(255).required(),\n      price: Yup.number().min(0).required(),\n      productCode: Yup.string().max(255),\n      productSku: Yup.string().max(255),\n      salePrice: Yup.number().min(0)\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        // NOTE: Make API request\n        setStatus({\n          success: true\n        });\n        setSubmitting(false);\n        toast.success('Product created!');\n        navigate('/dashboard/products');\n      } catch (err) {\n        console.error(err);\n        toast.error('Something went wrong!');\n        setStatus({\n          success: false\n        });\n        setErrors({\n          submit: err.message\n        });\n        setSubmitting(false);\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      setFieldValue,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 8,\n          md: 6,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.name && errors.name),\n                fullWidth: true,\n                helperText: touched.name && errors.name,\n                label: \"Product Name\",\n                name: \"name\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                value: values.name,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                sx: {\n                  mb: 2,\n                  mt: 3\n                },\n                variant: \"subtitle2\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(QuillEditor, {\n                onChange: value => setFieldValue('description', value),\n                placeholder: \"Write something\",\n                sx: {\n                  height: 400\n                },\n                value: values.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), touched.description && errors.description && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: true,\n                  children: errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: \"Upload Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(FileDropzone, {\n                  accept: \"image/*\",\n                  files: files,\n                  onDrop: handleDrop,\n                  onRemove: handleRemove,\n                  onRemoveAll: handleRemoveAll\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: \"Prices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 6,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: Boolean(touched.price && errors.price),\n                      fullWidth: true,\n                      helperText: touched.price && errors.price ? errors.price : 'If you have a sale price this will be shown as old price',\n                      label: \"Price\",\n                      name: \"price\",\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      type: \"number\",\n                      value: values.price,\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 6,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: Boolean(touched.salePrice && errors.salePrice),\n                      fullWidth: true,\n                      helperText: touched.salePrice && errors.salePrice,\n                      label: \"Sale price\",\n                      name: \"salePrice\",\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      type: \"number\",\n                      value: values.salePrice,\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: values.isTaxable,\n                      color: \"primary\",\n                      name: \"isTaxable\",\n                      onChange: handleChange,\n                      value: values.isTaxable\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 27\n                    }, this),\n                    label: \"Product is taxable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: values.includesTaxes,\n                      color: \"primary\",\n                      name: \"includesTaxes\",\n                      onChange: handleChange,\n                      value: values.includesTaxes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 27\n                    }, this),\n                    label: \"Price includes taxes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 4,\n          md: 6,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: \"Organize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Category\",\n                name: \"category\",\n                onChange: handleChange,\n                select: true,\n                SelectProps: {\n                  native: true\n                },\n                value: values.category,\n                variant: \"outlined\",\n                children: categoryOptions.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category.value,\n                  children: category.label\n                }, category.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.productCode && errors.productCode),\n                  fullWidth: true,\n                  helperText: touched.productCode && errors.productCode,\n                  label: \"Product Code\",\n                  name: \"productCode\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  value: values.productCode,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.productSku && errors.productSku),\n                  fullWidth: true,\n                  helperText: touched.productSku && errors.productSku,\n                  label: \"Product Sku\",\n                  name: \"productSku\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  value: values.productSku,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.submit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: isSubmitting,\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Create Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductCreateForm, \"ZobtV/sqX7JdPjzP2K4fkG/ytms=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ProductCreateForm;\nexport default ProductCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCreateForm\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/product/ProductCreateForm.js"],"names":["useState","useNavigate","toast","Yup","Formik","Box","Button","Card","CardContent","CardHeader","Checkbox","FormControlLabel","FormHelperText","Grid","TextField","Typography","FileDropzone","QuillEditor","categoryOptions","value","label","ProductCreateForm","props","navigate","files","setFiles","handleDrop","newFiles","prevFiles","handleRemove","file","filter","_file","path","handleRemoveAll","category","description","images","includesTaxes","isTaxable","name","price","productCode","productSku","salePrice","submit","object","shape","string","max","array","bool","required","number","min","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Boolean","mb","mt","height","native","map","display","justifyContent"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport FileDropzone from '../../FileDropzone';\nimport QuillEditor from '../../QuillEditor';\n\nconst categoryOptions = [\n  {\n    value: 'shirts',\n    label: 'Shirts'\n  },\n  {\n    label: 'Phones',\n    value: 'phones'\n  },\n  {\n    label: 'Cars',\n    value: 'cars'\n  }\n];\n\nconst ProductCreateForm = (props) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n\n  const handleDrop = (newFiles) => {\n    setFiles((prevFiles) => [...prevFiles, ...newFiles]);\n  };\n\n  const handleRemove = (file) => {\n    setFiles((prevFiles) => prevFiles.filter((_file) => _file.path\n      !== file.path));\n  };\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        category: '',\n        description: '',\n        images: [],\n        includesTaxes: false,\n        isTaxable: false,\n        name: '',\n        price: '',\n        productCode: '',\n        productSku: '',\n        salePrice: '',\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          category: Yup.string().max(255),\n          description: Yup.string().max(5000),\n          images: Yup.array(),\n          includesTaxes: Yup.bool().required(),\n          isTaxable: Yup.bool().required(),\n          name: Yup.string().max(255).required(),\n          price: Yup.number().min(0).required(),\n          productCode: Yup.string().max(255),\n          productSku: Yup.string().max(255),\n          salePrice: Yup.number().min(0)\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          // NOTE: Make API request\n          setStatus({ success: true });\n          setSubmitting(false);\n          toast.success('Product created!');\n          navigate('/dashboard/products');\n        } catch (err) {\n          console.error(err);\n          toast.error('Something went wrong!');\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={8}\n              md={6}\n              xs={12}\n            >\n              <Card>\n                <CardContent>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Product Name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    sx={{\n                      mb: 2,\n                      mt: 3\n                    }}\n                    variant=\"subtitle2\"\n                  >\n                    Description\n                  </Typography>\n                  <QuillEditor\n                    onChange={(value) => setFieldValue('description', value)}\n                    placeholder=\"Write something\"\n                    sx={{ height: 400 }}\n                    value={values.description}\n                  />\n                  {(touched.description && errors.description) && (\n                    <Box sx={{ mt: 2 }}>\n                      <FormHelperText error>\n                        {errors.description}\n                      </FormHelperText>\n                    </Box>\n                  )}\n                </CardContent>\n              </Card>\n              <Box sx={{ mt: 3 }}>\n                <Card>\n                  <CardHeader title=\"Upload Images\" />\n                  <CardContent>\n                    <FileDropzone\n                      accept=\"image/*\"\n                      files={files}\n                      onDrop={handleDrop}\n                      onRemove={handleRemove}\n                      onRemoveAll={handleRemoveAll}\n                    />\n                  </CardContent>\n                </Card>\n              </Box>\n              <Box sx={{ mt: 3 }}>\n                <Card>\n                  <CardHeader title=\"Prices\" />\n                  <CardContent>\n                    <Grid\n                      container\n                      spacing={3}\n                    >\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          error={Boolean(touched.price && errors.price)}\n                          fullWidth\n                          helperText={touched.price && errors.price\n                            ? errors.price\n                            : 'If you have a sale price this will be shown as old price'}\n                          label=\"Price\"\n                          name=\"price\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"number\"\n                          value={values.price}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          error={Boolean(touched.salePrice && errors.salePrice)}\n                          fullWidth\n                          helperText={touched.salePrice && errors.salePrice}\n                          label=\"Sale price\"\n                          name=\"salePrice\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"number\"\n                          value={values.salePrice}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                    </Grid>\n                    <Box sx={{ mt: 2 }}>\n                      <FormControlLabel\n                        control={(\n                          <Checkbox\n                            checked={values.isTaxable}\n                            color=\"primary\"\n                            name=\"isTaxable\"\n                            onChange={handleChange}\n                            value={values.isTaxable}\n                          />\n                        )}\n                        label=\"Product is taxable\"\n                      />\n                    </Box>\n                    <Box sx={{ mt: 2 }}>\n                      <FormControlLabel\n                        control={(\n                          <Checkbox\n                            checked={values.includesTaxes}\n                            color=\"primary\"\n                            name=\"includesTaxes\"\n                            onChange={handleChange}\n                            value={values.includesTaxes}\n                          />\n                        )}\n                        label=\"Price includes taxes\"\n                      />\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Box>\n            </Grid>\n            <Grid\n              item\n              lg={4}\n              md={6}\n              xs={12}\n            >\n              <Card>\n                <CardHeader title=\"Organize\" />\n                <CardContent>\n                  <TextField\n                    fullWidth\n                    label=\"Category\"\n                    name=\"category\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.category}\n                    variant=\"outlined\"\n                  >\n                    {categoryOptions.map((category) => (\n                      <option\n                        key={category.value}\n                        value={category.value}\n                      >\n                        {category.label}\n                      </option>\n                    ))}\n                  </TextField>\n                  <Box sx={{ mt: 2 }}>\n                    <TextField\n                      error={Boolean(touched.productCode && errors.productCode)}\n                      fullWidth\n                      helperText={touched.productCode && errors.productCode}\n                      label=\"Product Code\"\n                      name=\"productCode\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.productCode}\n                      variant=\"outlined\"\n                    />\n                  </Box>\n                  <Box sx={{ mt: 2 }}>\n                    <TextField\n                      error={Boolean(touched.productSku && errors.productSku)}\n                      fullWidth\n                      helperText={touched.productSku && errors.productSku}\n                      label=\"Product Sku\"\n                      name=\"productSku\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.productSku}\n                      variant=\"outlined\"\n                    />\n                  </Box>\n                </CardContent>\n              </Card>\n              {errors.submit && (\n                <Box sx={{ mt: 3 }}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  mt: 3\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Create Product\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ProductCreateForm;\n"]},"metadata":{},"sourceType":"module"}