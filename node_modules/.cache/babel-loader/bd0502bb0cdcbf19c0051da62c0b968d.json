{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/NotificationsPopover.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { subDays, subHours } from 'date-fns';\nimport { Avatar, Badge, Box, Button, IconButton, Link, List, ListItem, ListItemAvatar, ListItemText, Popover, Tooltip, Typography } from '@material-ui/core';\nimport BellIcon from '../../icons/Bell';\nimport ChatAltIcon from '../../icons/ChatAlt';\nimport CreditCardIcon from '../../icons/CreditCard';\nimport ShoppingCartIcon from '../../icons/ShoppingCart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst now = new Date();\nconst notifications = [{\n  id: '5e8883f1b51cc1956a5a1ec0',\n  createdAt: subHours(now, 2).getTime(),\n  description: 'Dummy text',\n  title: 'Your order is placed',\n  type: 'order_placed'\n}, {\n  id: '5e8883f7ed1486d665d8be1e',\n  createdAt: subDays(now, 1).getTime(),\n  description: 'You have 32 unread messages',\n  title: 'New message received',\n  type: 'new_message'\n}, {\n  id: '5e8883fca0e8612044248ecf',\n  createdAt: subDays(now, 3).getTime(),\n  description: 'Dummy text',\n  title: 'Your item is shipped',\n  type: 'item_shipped'\n}, {\n  id: '5e88840187f6b09b431bae68',\n  createdAt: subDays(now, 7).getTime(),\n  description: 'You have 32 unread messages',\n  title: 'New message received',\n  type: 'new_message'\n}];\nconst iconsMap = {\n  item_shipped: ShoppingCartIcon,\n  new_message: ChatAltIcon,\n  order_placed: CreditCardIcon\n};\n\nconst NotificationsPopover = () => {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Notifications\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        ref: anchorRef,\n        onClick: handleOpen,\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"error\",\n          badgeContent: 4,\n          children: /*#__PURE__*/_jsxDEV(BellIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      anchorEl: anchorRef.current,\n      anchorOrigin: {\n        horizontal: 'center',\n        vertical: 'bottom'\n      },\n      onClose: handleClose,\n      open: open,\n      PaperProps: {\n        sx: {\n          width: 320\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"h6\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"subtitle2\",\n          children: \"There are no notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          children: notifications.map(notification => {\n            const Icon = iconsMap[notification.type];\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              divider: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    backgroundColor: 'primary.main',\n                    color: 'primary.contrastText'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Link, {\n                  color: \"textPrimary\",\n                  sx: {\n                    cursor: 'pointer'\n                  },\n                  underline: \"none\",\n                  variant: \"subtitle2\",\n                  children: notification.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 27\n                }, this),\n                secondary: notification.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 23\n              }, this)]\n            }, notification.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            size: \"small\",\n            variant: \"text\",\n            children: \"Mark all as read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotificationsPopover, \"Hd6TMPAqlaYCVBM5IMM9OnvyEW4=\");\n\n_c = NotificationsPopover;\nexport default NotificationsPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsPopover\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/NotificationsPopover.js"],"names":["useRef","useState","subDays","subHours","Avatar","Badge","Box","Button","IconButton","Link","List","ListItem","ListItemAvatar","ListItemText","Popover","Tooltip","Typography","BellIcon","ChatAltIcon","CreditCardIcon","ShoppingCartIcon","now","Date","notifications","id","createdAt","getTime","description","title","type","iconsMap","item_shipped","new_message","order_placed","NotificationsPopover","anchorRef","open","setOpen","handleOpen","handleClose","current","horizontal","vertical","sx","width","p","length","map","notification","Icon","backgroundColor","color","cursor","display","justifyContent"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport { subDays, subHours } from 'date-fns';\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popover,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport BellIcon from '../../icons/Bell';\nimport ChatAltIcon from '../../icons/ChatAlt';\nimport CreditCardIcon from '../../icons/CreditCard';\nimport ShoppingCartIcon from '../../icons/ShoppingCart';\n\nconst now = new Date();\n\nconst notifications = [\n  {\n    id: '5e8883f1b51cc1956a5a1ec0',\n    createdAt: subHours(now, 2).getTime(),\n    description: 'Dummy text',\n    title: 'Your order is placed',\n    type: 'order_placed'\n  },\n  {\n    id: '5e8883f7ed1486d665d8be1e',\n    createdAt: subDays(now, 1).getTime(),\n    description: 'You have 32 unread messages',\n    title: 'New message received',\n    type: 'new_message'\n  },\n  {\n    id: '5e8883fca0e8612044248ecf',\n    createdAt: subDays(now, 3).getTime(),\n    description: 'Dummy text',\n    title: 'Your item is shipped',\n    type: 'item_shipped'\n  },\n  {\n    id: '5e88840187f6b09b431bae68',\n    createdAt: subDays(now, 7).getTime(),\n    description: 'You have 32 unread messages',\n    title: 'New message received',\n    type: 'new_message'\n  }\n];\n\nconst iconsMap = {\n  item_shipped: ShoppingCartIcon,\n  new_message: ChatAltIcon,\n  order_placed: CreditCardIcon\n};\n\nconst NotificationsPopover = () => {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Notifications\">\n        <IconButton\n          color=\"inherit\"\n          ref={anchorRef}\n          onClick={handleOpen}\n        >\n          <Badge\n            color=\"error\"\n            badgeContent={4}\n          >\n            <BellIcon fontSize=\"small\" />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n      <Popover\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'center',\n          vertical: 'bottom'\n        }}\n        onClose={handleClose}\n        open={open}\n        PaperProps={{\n          sx: { width: 320 }\n        }}\n      >\n        <Box sx={{ p: 2 }}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h6\"\n          >\n            Notifications\n          </Typography>\n        </Box>\n        {notifications.length === 0\n          ? (\n            <Box sx={{ p: 2 }}>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                There are no notifications\n              </Typography>\n            </Box>\n          )\n          : (\n            <>\n              <List disablePadding>\n                {notifications.map((notification) => {\n                  const Icon = iconsMap[notification.type];\n\n                  return (\n                    <ListItem\n                      divider\n                      key={notification.id}\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          sx={{\n                            backgroundColor: 'primary.main',\n                            color: 'primary.contrastText'\n                          }}\n                        >\n                          <Icon fontSize=\"small\" />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={(\n                          <Link\n                            color=\"textPrimary\"\n                            sx={{ cursor: 'pointer' }}\n                            underline=\"none\"\n                            variant=\"subtitle2\"\n                          >\n                            {notification.title}\n                          </Link>\n                        )}\n                        secondary={notification.description}\n                      />\n                    </ListItem>\n                  );\n                })}\n              </List>\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  p: 1\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  size=\"small\"\n                  variant=\"text\"\n                >\n                  Mark all as read\n                </Button>\n              </Box>\n            </>\n          )}\n      </Popover>\n    </>\n  );\n};\n\nexport default NotificationsPopover;\n"]},"metadata":{},"sourceType":"module"}