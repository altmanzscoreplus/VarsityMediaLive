{"ast":null,"code":"import deepCopy from '../utils/deepCopy';\nconst now = new Date();\nconst labels = [{\n  id: 'all',\n  name: 'All Mail',\n  type: 'system_label'\n}, {\n  id: 'inbox',\n  name: 'Inbox',\n  totalCount: 0,\n  type: 'system_label',\n  unreadCount: 1\n}, {\n  id: 'sent',\n  name: 'Sent',\n  totalCount: 0,\n  type: 'system_label',\n  unreadCount: 0\n}, {\n  id: 'drafts',\n  name: 'Drafts',\n  totalCount: 0,\n  type: 'system_label',\n  unreadCount: 0\n}, {\n  id: 'trash',\n  name: 'Trash',\n  totalCount: 1,\n  type: 'system_label',\n  unreadCount: 0\n}, {\n  id: 'spam',\n  name: 'Spam',\n  totalCount: 1,\n  type: 'system_label',\n  unreadCount: 1\n}, {\n  id: 'important',\n  name: 'Important',\n  totalCount: 1,\n  type: 'system_label',\n  unreadCount: 0\n}, {\n  id: 'starred',\n  name: 'Starred',\n  totalCount: 1,\n  type: 'system_label',\n  unreadCount: 1\n}, {\n  id: '5e892628d4bc60b4514d5d36',\n  color: '#43a048',\n  name: 'Work',\n  totalCount: 1,\n  type: 'custom_label',\n  unreadCount: 1\n}, {\n  id: '5e8926820cf9ec6c834114ec',\n  color: '#1e88e5',\n  name: 'Business',\n  totalCount: 2,\n  type: 'custom_label',\n  unreadCount: 0\n}, {\n  id: '5e892696db60f561c43c6f81',\n  color: '#fb8a00',\n  name: 'Personal',\n  totalCount: 1,\n  type: 'custom_label',\n  unreadCount: 0\n}];\nconst emails = [{\n  id: '5e86bcc3e1b53b6365d71638',\n  folder: 'Business',\n  isImportant: true,\n  isStarred: false,\n  isUnread: true,\n  labelIds: ['5e8926820cf9ec6c834114ec', '5e892696db60f561c43c6f81'],\n  subject: 'Website redesign. Interested in collaboration',\n  message: `\nHi Matt, I saw your work on instagram and would be interested in getting a quote for Logo and slider\n\nInteger velit massa, pharetra sed lacus eu, pulvinar faucibus ex. Ut pretium ex id turpis elementum, aliquam accumsan enim sollicitudin. Sed nec consectetur lorem, ac ullamcorper augue. Suspendisse tempus ligula suscipit finibus vehicula. Morbi viverra finibus lectus, egestas dictum mi mollis nec. Proin eget vehicula eros, sit amet molestie ipsum. Morbi feugiat, elit non placerat fringilla, leo risus tristique felis, sollicitudin tristique nibh arcu nec arcu. Maecenas vel turpis nibh. Etiam in lectus quis felis facilisis dictum. Morbi id vehicula lectus, vel imperdiet dolor. Phasellus consequat tempor tellus, quis placerat quam posuere eget. Mauris blandit, nisl eu sollicitudin tincidunt, tellus diam accumsan arcu, vel pharetra lectus est nec nisi. In sem dolor, mollis sed risus eu, mattis dictum lectus. Suspendisse urna est, finibus et urna non, tincidunt placerat eros.\n\nDonec viverra ipsum id auctor rutrum. Morbi consequat a nunc non interdum. Nulla accumsan eget felis a dictum. Cras rhoncus tortor eget velit fringilla suscipit. Donec quis arcu eu nibh aliquet auctor eget fringilla felis. Sed commodo efficitur massa. Proin maximus elit in suscipit laoreet. Integer pretium arcu ac mauris ullamcorper auctor. Vivamus tincidunt lacus eget purus feugiat tincidunt. Etiam feugiat gravida ullamcorper. Pellentesque cursus vehicula lectus et consectetur. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam ligula risus, congue eu pellentesque id, volutpat aliquam arcu. Donec efficitur ipsum id neque rhoncus viverra. Vestibulum hendrerit et eros eu bibendum.\n\n\nKind regards,\n\nMarcus Finn\n    `,\n  from: {\n    avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n    email: 'marcus.finn@devias.io',\n    name: 'Marcus Finn'\n  },\n  to: [{\n    avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n    email: 'jane.rotanson@devias.io',\n    name: 'Jane Rotanson'\n  }],\n  createdAt: now.getTime()\n}, {\n  id: '5e86bcbd8406cd3055f2b6c8',\n  folder: 'spam',\n  isImportant: false,\n  isStarred: true,\n  isUnread: false,\n  labelIds: [],\n  subject: 'Amazing work',\n  message: `\nHey, nice projects! I really liked the one in react. What's your quote on kinda similar project?\n    `,\n  from: {\n    avatar: '/static/mock-images/avatars/avatar-miron_vitold.png',\n    email: 'miron.vitold@devias.io',\n    name: 'Miron Vitold'\n  },\n  to: [{\n    avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n    email: 'jane.rotanson@devias.io',\n    name: 'Jane Rotanson'\n  }],\n  createdAt: now.getTime()\n}, {\n  id: '5e86bcb9fee1ec12453fa13b',\n  folder: 'inbox',\n  isImportant: false,\n  isStarred: false,\n  isUnread: false,\n  labelIds: ['5e892628d4bc60b4514d5d36'],\n  subject: 'Flight reminder',\n  message: `\nDear Jane, Your flight is coming up soon. Please donâ€™t forget to check in for your scheduled flight.\n    `,\n  from: {\n    avatar: '/static/mock-images/avatars/avatar-penjani_inyene.png',\n    email: 'penjani.inyene@devias.io',\n    name: 'Penjani Inyene'\n  },\n  to: [{\n    avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n    email: 'jane.rotanson@devias.io',\n    name: 'Jane Rotanson'\n  }],\n  createdAt: now.getTime()\n}, {\n  id: '5e86bcb5575181a5e527e24f',\n  folder: 'trash',\n  isImportant: false,\n  isStarred: false,\n  isUnread: true,\n  labelIds: ['5e8926820cf9ec6c834114ec'],\n  subject: 'Possible candidates for the position',\n  message: `\nMy market leading client has another fantastic opportunity for an experienced Software Developer to join them on a heavily remote basis\n    `,\n  from: {\n    avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\n    email: 'carson.darrin@devias.io',\n    name: 'Carson Darrin'\n  },\n  to: [{\n    avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n    email: 'jane.rotanson@devias.io',\n    name: 'Jane Rotanson'\n  }],\n  createdAt: now.getTime()\n}];\n\nclass MailApi {\n  getLabels() {\n    return Promise.resolve(deepCopy(labels));\n  }\n\n  getEmails({\n    systemLabel,\n    customLabel\n  }) {\n    return new Promise((resolve, reject) => {\n      try {\n        // Initially we make a copy of all emails.\n        // On a real server this will be different since there will be a real DB query.\n        let filteredEmails = [...emails]; // If custom label is provided filter by it\n\n        if (customLabel) {\n          const label = labels.find(_label => _label.name === customLabel);\n\n          if (!label) {\n            // If label does not exist, we simply return an empty array\n            // because we need an ID to look for references\n            filteredEmails = [];\n          } else {\n            // If label exists, then filter the emails by the labelId\n            filteredEmails = filteredEmails.filter(mail => mail.labelIds.includes(label.id));\n          }\n        }\n\n        switch (systemLabel) {\n          case 'drafts':\n          case 'inbox':\n          case 'sent':\n          case 'spam':\n          case 'trash':\n            filteredEmails = filteredEmails.filter(mail => mail.folder === systemLabel);\n            break;\n\n          case 'starred':\n            filteredEmails = filteredEmails.filter(mail => mail.isStarred);\n            break;\n\n          case 'important':\n            filteredEmails = filteredEmails.filter(mail => mail.isImportant);\n            break;\n\n          default:\n            break;\n        }\n\n        resolve(deepCopy(filteredEmails));\n      } catch (err) {\n        console.error('[Mail Api]: ', err);\n        reject(new Error('Internal server error'));\n      }\n    });\n  }\n\n  getEmail(emailId) {\n    return new Promise((resolve, reject) => {\n      try {\n        // Find the mail\n        const email = emails.find(_mail => _mail.id === emailId);\n\n        if (!email) {\n          reject(new Error('Email not found'));\n          return;\n        }\n\n        resolve(deepCopy(email));\n      } catch (err) {\n        console.error('[Mail Api]: ', err);\n        reject(new Error('Internal server error'));\n      }\n    });\n  }\n\n}\n\nexport const mailApi = new MailApi();","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/__fakeApi__/mailApi.js"],"names":["deepCopy","now","Date","labels","id","name","type","totalCount","unreadCount","color","emails","folder","isImportant","isStarred","isUnread","labelIds","subject","message","from","avatar","email","to","createdAt","getTime","MailApi","getLabels","Promise","resolve","getEmails","systemLabel","customLabel","reject","filteredEmails","label","find","_label","filter","mail","includes","err","console","error","Error","getEmail","emailId","_mail","mailApi"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADa,EAMb;AACEF,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEE,EAAAA,UAAU,EAAE,CAHd;AAIED,EAAAA,IAAI,EAAE,cAJR;AAKEE,EAAAA,WAAW,EAAE;AALf,CANa,EAab;AACEJ,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEE,EAAAA,UAAU,EAAE,CAHd;AAIED,EAAAA,IAAI,EAAE,cAJR;AAKEE,EAAAA,WAAW,EAAE;AALf,CAba,EAoBb;AACEJ,EAAAA,EAAE,EAAE,QADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEE,EAAAA,UAAU,EAAE,CAHd;AAIED,EAAAA,IAAI,EAAE,cAJR;AAKEE,EAAAA,WAAW,EAAE;AALf,CApBa,EA2Bb;AACEJ,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEE,EAAAA,UAAU,EAAE,CAHd;AAIED,EAAAA,IAAI,EAAE,cAJR;AAKEE,EAAAA,WAAW,EAAE;AALf,CA3Ba,EAkCb;AACEJ,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEE,EAAAA,UAAU,EAAE,CAHd;AAIED,EAAAA,IAAI,EAAE,cAJR;AAKEE,EAAAA,WAAW,EAAE;AALf,CAlCa,EAyCb;AACEJ,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEE,EAAAA,UAAU,EAAE,CAHd;AAIED,EAAAA,IAAI,EAAE,cAJR;AAKEE,EAAAA,WAAW,EAAE;AALf,CAzCa,EAgDb;AACEJ,EAAAA,EAAE,EAAE,SADN;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEE,EAAAA,UAAU,EAAE,CAHd;AAIED,EAAAA,IAAI,EAAE,cAJR;AAKEE,EAAAA,WAAW,EAAE;AALf,CAhDa,EAuDb;AACEJ,EAAAA,EAAE,EAAE,0BADN;AAEEK,EAAAA,KAAK,EAAE,SAFT;AAGEJ,EAAAA,IAAI,EAAE,MAHR;AAIEE,EAAAA,UAAU,EAAE,CAJd;AAKED,EAAAA,IAAI,EAAE,cALR;AAMEE,EAAAA,WAAW,EAAE;AANf,CAvDa,EA+Db;AACEJ,EAAAA,EAAE,EAAE,0BADN;AAEEK,EAAAA,KAAK,EAAE,SAFT;AAGEJ,EAAAA,IAAI,EAAE,UAHR;AAIEE,EAAAA,UAAU,EAAE,CAJd;AAKED,EAAAA,IAAI,EAAE,cALR;AAMEE,EAAAA,WAAW,EAAE;AANf,CA/Da,EAuEb;AACEJ,EAAAA,EAAE,EAAE,0BADN;AAEEK,EAAAA,KAAK,EAAE,SAFT;AAGEJ,EAAAA,IAAI,EAAE,UAHR;AAIEE,EAAAA,UAAU,EAAE,CAJd;AAKED,EAAAA,IAAI,EAAE,cALR;AAMEE,EAAAA,WAAW,EAAE;AANf,CAvEa,CAAf;AAiFA,MAAME,MAAM,GAAG,CACb;AACEN,EAAAA,EAAE,EAAE,0BADN;AAEEO,EAAAA,MAAM,EAAE,UAFV;AAGEC,EAAAA,WAAW,EAAE,IAHf;AAIEC,EAAAA,SAAS,EAAE,KAJb;AAKEC,EAAAA,QAAQ,EAAE,IALZ;AAMEC,EAAAA,QAAQ,EAAE,CAAC,0BAAD,EAA6B,0BAA7B,CANZ;AAOEC,EAAAA,OAAO,EAAE,+CAPX;AAQEC,EAAAA,OAAO,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnBE;AAoBEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,oDADJ;AAEJC,IAAAA,KAAK,EAAE,uBAFH;AAGJf,IAAAA,IAAI,EAAE;AAHF,GApBR;AAyBEgB,EAAAA,EAAE,EAAE,CACF;AACEF,IAAAA,MAAM,EAAE,sDADV;AAEEC,IAAAA,KAAK,EAAE,yBAFT;AAGEf,IAAAA,IAAI,EAAE;AAHR,GADE,CAzBN;AAgCEiB,EAAAA,SAAS,EAAErB,GAAG,CAACsB,OAAJ;AAhCb,CADa,EAmCb;AACEnB,EAAAA,EAAE,EAAE,0BADN;AAEEO,EAAAA,MAAM,EAAE,MAFV;AAGEC,EAAAA,WAAW,EAAE,KAHf;AAIEC,EAAAA,SAAS,EAAE,IAJb;AAKEC,EAAAA,QAAQ,EAAE,KALZ;AAMEC,EAAAA,QAAQ,EAAE,EANZ;AAOEC,EAAAA,OAAO,EAAE,cAPX;AAQEC,EAAAA,OAAO,EAAG;AACd;AACA,KAVE;AAWEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,qDADJ;AAEJC,IAAAA,KAAK,EAAE,wBAFH;AAGJf,IAAAA,IAAI,EAAE;AAHF,GAXR;AAgBEgB,EAAAA,EAAE,EAAE,CACF;AACEF,IAAAA,MAAM,EAAE,sDADV;AAEEC,IAAAA,KAAK,EAAE,yBAFT;AAGEf,IAAAA,IAAI,EAAE;AAHR,GADE,CAhBN;AAuBEiB,EAAAA,SAAS,EAAErB,GAAG,CAACsB,OAAJ;AAvBb,CAnCa,EA4Db;AACEnB,EAAAA,EAAE,EAAE,0BADN;AAEEO,EAAAA,MAAM,EAAE,OAFV;AAGEC,EAAAA,WAAW,EAAE,KAHf;AAIEC,EAAAA,SAAS,EAAE,KAJb;AAKEC,EAAAA,QAAQ,EAAE,KALZ;AAMEC,EAAAA,QAAQ,EAAE,CAAC,0BAAD,CANZ;AAOEC,EAAAA,OAAO,EAAE,iBAPX;AAQEC,EAAAA,OAAO,EAAG;AACd;AACA,KAVE;AAWEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,uDADJ;AAEJC,IAAAA,KAAK,EAAE,0BAFH;AAGJf,IAAAA,IAAI,EAAE;AAHF,GAXR;AAgBEgB,EAAAA,EAAE,EAAE,CACF;AACEF,IAAAA,MAAM,EAAE,sDADV;AAEEC,IAAAA,KAAK,EAAE,yBAFT;AAGEf,IAAAA,IAAI,EAAE;AAHR,GADE,CAhBN;AAuBEiB,EAAAA,SAAS,EAAErB,GAAG,CAACsB,OAAJ;AAvBb,CA5Da,EAqFb;AACEnB,EAAAA,EAAE,EAAE,0BADN;AAEEO,EAAAA,MAAM,EAAE,OAFV;AAGEC,EAAAA,WAAW,EAAE,KAHf;AAIEC,EAAAA,SAAS,EAAE,KAJb;AAKEC,EAAAA,QAAQ,EAAE,IALZ;AAMEC,EAAAA,QAAQ,EAAE,CAAC,0BAAD,CANZ;AAOEC,EAAAA,OAAO,EAAE,sCAPX;AAQEC,EAAAA,OAAO,EAAG;AACd;AACA,KAVE;AAWEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,sDADJ;AAEJC,IAAAA,KAAK,EAAE,yBAFH;AAGJf,IAAAA,IAAI,EAAE;AAHF,GAXR;AAgBEgB,EAAAA,EAAE,EAAE,CACF;AACEF,IAAAA,MAAM,EAAE,sDADV;AAEEC,IAAAA,KAAK,EAAE,yBAFT;AAGEf,IAAAA,IAAI,EAAE;AAHR,GADE,CAhBN;AAuBEiB,EAAAA,SAAS,EAAErB,GAAG,CAACsB,OAAJ;AAvBb,CArFa,CAAf;;AAgHA,MAAMC,OAAN,CAAc;AACZC,EAAAA,SAAS,GAAG;AACV,WAAOC,OAAO,CAACC,OAAR,CAAgB3B,QAAQ,CAACG,MAAD,CAAxB,CAAP;AACD;;AAEDyB,EAAAA,SAAS,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,EAA+B;AACtC,WAAO,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUI,MAAV,KAAqB;AACtC,UAAI;AACF;AACA;AACA,YAAIC,cAAc,GAAG,CAAC,GAAGtB,MAAJ,CAArB,CAHE,CAKF;;AACA,YAAIoB,WAAJ,EAAiB;AACf,gBAAMG,KAAK,GAAG9B,MAAM,CAAC+B,IAAP,CAAaC,MAAD,IAAYA,MAAM,CAAC9B,IAAP,KAAgByB,WAAxC,CAAd;;AAEA,cAAI,CAACG,KAAL,EAAY;AACV;AACA;AACAD,YAAAA,cAAc,GAAG,EAAjB;AACD,WAJD,MAIO;AACL;AACAA,YAAAA,cAAc,GAAGA,cAAc,CAACI,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACtB,QAAL,CAAcuB,QAAd,CAAuBL,KAAK,CAAC7B,EAA7B,CAAhC,CAAjB;AACD;AACF;;AAED,gBAAQyB,WAAR;AACE,eAAK,QAAL;AACA,eAAK,OAAL;AACA,eAAK,MAAL;AACA,eAAK,MAAL;AACA,eAAK,OAAL;AACEG,YAAAA,cAAc,GAAGA,cAAc,CAACI,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAAC1B,MAAL,KAAgBkB,WAAhD,CAAjB;AACA;;AACF,eAAK,SAAL;AACEG,YAAAA,cAAc,GAAGA,cAAc,CAACI,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACxB,SAArC,CAAjB;AACA;;AACF,eAAK,WAAL;AACEmB,YAAAA,cAAc,GAAGA,cAAc,CAACI,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACzB,WAArC,CAAjB;AACA;;AACF;AACE;AAfJ;;AAkBAe,QAAAA,OAAO,CAAC3B,QAAQ,CAACgC,cAAD,CAAT,CAAP;AACD,OAtCD,CAsCE,OAAOO,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAc,cAAd,EAA8BF,GAA9B;AACAR,QAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAU,uBAAV,CAAD,CAAN;AACD;AACF,KA3CM,CAAP;AA4CD;;AAEDC,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,WAAO,IAAIlB,OAAJ,CAAY,CAACC,OAAD,EAAUI,MAAV,KAAqB;AACtC,UAAI;AACF;AACA,cAAMX,KAAK,GAAGV,MAAM,CAACwB,IAAP,CAAaW,KAAD,IAAWA,KAAK,CAACzC,EAAN,KAAawC,OAApC,CAAd;;AAEA,YAAI,CAACxB,KAAL,EAAY;AACVW,UAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAU,iBAAV,CAAD,CAAN;AACA;AACD;;AAEDf,QAAAA,OAAO,CAAC3B,QAAQ,CAACoB,KAAD,CAAT,CAAP;AACD,OAVD,CAUE,OAAOmB,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAc,cAAd,EAA8BF,GAA9B;AACAR,QAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAU,uBAAV,CAAD,CAAN;AACD;AACF,KAfM,CAAP;AAgBD;;AArEW;;AAwEd,OAAO,MAAMI,OAAO,GAAG,IAAItB,OAAJ,EAAhB","sourcesContent":["import deepCopy from '../utils/deepCopy';\n\nconst now = new Date();\n\nconst labels = [\n  {\n    id: 'all',\n    name: 'All Mail',\n    type: 'system_label'\n  },\n  {\n    id: 'inbox',\n    name: 'Inbox',\n    totalCount: 0,\n    type: 'system_label',\n    unreadCount: 1\n  },\n  {\n    id: 'sent',\n    name: 'Sent',\n    totalCount: 0,\n    type: 'system_label',\n    unreadCount: 0\n  },\n  {\n    id: 'drafts',\n    name: 'Drafts',\n    totalCount: 0,\n    type: 'system_label',\n    unreadCount: 0\n  },\n  {\n    id: 'trash',\n    name: 'Trash',\n    totalCount: 1,\n    type: 'system_label',\n    unreadCount: 0\n  },\n  {\n    id: 'spam',\n    name: 'Spam',\n    totalCount: 1,\n    type: 'system_label',\n    unreadCount: 1\n  },\n  {\n    id: 'important',\n    name: 'Important',\n    totalCount: 1,\n    type: 'system_label',\n    unreadCount: 0\n  },\n  {\n    id: 'starred',\n    name: 'Starred',\n    totalCount: 1,\n    type: 'system_label',\n    unreadCount: 1\n  },\n  {\n    id: '5e892628d4bc60b4514d5d36',\n    color: '#43a048',\n    name: 'Work',\n    totalCount: 1,\n    type: 'custom_label',\n    unreadCount: 1\n  },\n  {\n    id: '5e8926820cf9ec6c834114ec',\n    color: '#1e88e5',\n    name: 'Business',\n    totalCount: 2,\n    type: 'custom_label',\n    unreadCount: 0\n  },\n  {\n    id: '5e892696db60f561c43c6f81',\n    color: '#fb8a00',\n    name: 'Personal',\n    totalCount: 1,\n    type: 'custom_label',\n    unreadCount: 0\n  }\n];\n\nconst emails = [\n  {\n    id: '5e86bcc3e1b53b6365d71638',\n    folder: 'Business',\n    isImportant: true,\n    isStarred: false,\n    isUnread: true,\n    labelIds: ['5e8926820cf9ec6c834114ec', '5e892696db60f561c43c6f81'],\n    subject: 'Website redesign. Interested in collaboration',\n    message: `\nHi Matt, I saw your work on instagram and would be interested in getting a quote for Logo and slider\n\nInteger velit massa, pharetra sed lacus eu, pulvinar faucibus ex. Ut pretium ex id turpis elementum, aliquam accumsan enim sollicitudin. Sed nec consectetur lorem, ac ullamcorper augue. Suspendisse tempus ligula suscipit finibus vehicula. Morbi viverra finibus lectus, egestas dictum mi mollis nec. Proin eget vehicula eros, sit amet molestie ipsum. Morbi feugiat, elit non placerat fringilla, leo risus tristique felis, sollicitudin tristique nibh arcu nec arcu. Maecenas vel turpis nibh. Etiam in lectus quis felis facilisis dictum. Morbi id vehicula lectus, vel imperdiet dolor. Phasellus consequat tempor tellus, quis placerat quam posuere eget. Mauris blandit, nisl eu sollicitudin tincidunt, tellus diam accumsan arcu, vel pharetra lectus est nec nisi. In sem dolor, mollis sed risus eu, mattis dictum lectus. Suspendisse urna est, finibus et urna non, tincidunt placerat eros.\n\nDonec viverra ipsum id auctor rutrum. Morbi consequat a nunc non interdum. Nulla accumsan eget felis a dictum. Cras rhoncus tortor eget velit fringilla suscipit. Donec quis arcu eu nibh aliquet auctor eget fringilla felis. Sed commodo efficitur massa. Proin maximus elit in suscipit laoreet. Integer pretium arcu ac mauris ullamcorper auctor. Vivamus tincidunt lacus eget purus feugiat tincidunt. Etiam feugiat gravida ullamcorper. Pellentesque cursus vehicula lectus et consectetur. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nam ligula risus, congue eu pellentesque id, volutpat aliquam arcu. Donec efficitur ipsum id neque rhoncus viverra. Vestibulum hendrerit et eros eu bibendum.\n\n\nKind regards,\n\nMarcus Finn\n    `,\n    from: {\n      avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n      email: 'marcus.finn@devias.io',\n      name: 'Marcus Finn'\n    },\n    to: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n        email: 'jane.rotanson@devias.io',\n        name: 'Jane Rotanson'\n      }\n    ],\n    createdAt: now.getTime()\n  },\n  {\n    id: '5e86bcbd8406cd3055f2b6c8',\n    folder: 'spam',\n    isImportant: false,\n    isStarred: true,\n    isUnread: false,\n    labelIds: [],\n    subject: 'Amazing work',\n    message: `\nHey, nice projects! I really liked the one in react. What's your quote on kinda similar project?\n    `,\n    from: {\n      avatar: '/static/mock-images/avatars/avatar-miron_vitold.png',\n      email: 'miron.vitold@devias.io',\n      name: 'Miron Vitold'\n    },\n    to: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n        email: 'jane.rotanson@devias.io',\n        name: 'Jane Rotanson'\n      }\n    ],\n    createdAt: now.getTime()\n  },\n  {\n    id: '5e86bcb9fee1ec12453fa13b',\n    folder: 'inbox',\n    isImportant: false,\n    isStarred: false,\n    isUnread: false,\n    labelIds: ['5e892628d4bc60b4514d5d36'],\n    subject: 'Flight reminder',\n    message: `\nDear Jane, Your flight is coming up soon. Please donâ€™t forget to check in for your scheduled flight.\n    `,\n    from: {\n      avatar: '/static/mock-images/avatars/avatar-penjani_inyene.png',\n      email: 'penjani.inyene@devias.io',\n      name: 'Penjani Inyene'\n    },\n    to: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n        email: 'jane.rotanson@devias.io',\n        name: 'Jane Rotanson'\n      }\n    ],\n    createdAt: now.getTime()\n  },\n  {\n    id: '5e86bcb5575181a5e527e24f',\n    folder: 'trash',\n    isImportant: false,\n    isStarred: false,\n    isUnread: true,\n    labelIds: ['5e8926820cf9ec6c834114ec'],\n    subject: 'Possible candidates for the position',\n    message: `\nMy market leading client has another fantastic opportunity for an experienced Software Developer to join them on a heavily remote basis\n    `,\n    from: {\n      avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\n      email: 'carson.darrin@devias.io',\n      name: 'Carson Darrin'\n    },\n    to: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n        email: 'jane.rotanson@devias.io',\n        name: 'Jane Rotanson'\n      }\n    ],\n    createdAt: now.getTime()\n  }\n];\n\nclass MailApi {\n  getLabels() {\n    return Promise.resolve(deepCopy(labels));\n  }\n\n  getEmails({ systemLabel, customLabel }) {\n    return new Promise((resolve, reject) => {\n      try {\n        // Initially we make a copy of all emails.\n        // On a real server this will be different since there will be a real DB query.\n        let filteredEmails = [...emails];\n\n        // If custom label is provided filter by it\n        if (customLabel) {\n          const label = labels.find((_label) => _label.name === customLabel);\n\n          if (!label) {\n            // If label does not exist, we simply return an empty array\n            // because we need an ID to look for references\n            filteredEmails = [];\n          } else {\n            // If label exists, then filter the emails by the labelId\n            filteredEmails = filteredEmails.filter((mail) => mail.labelIds.includes(label.id));\n          }\n        }\n\n        switch (systemLabel) {\n          case 'drafts':\n          case 'inbox':\n          case 'sent':\n          case 'spam':\n          case 'trash':\n            filteredEmails = filteredEmails.filter((mail) => mail.folder === systemLabel);\n            break;\n          case 'starred':\n            filteredEmails = filteredEmails.filter((mail) => mail.isStarred);\n            break;\n          case 'important':\n            filteredEmails = filteredEmails.filter((mail) => mail.isImportant);\n            break;\n          default:\n            break;\n        }\n\n        resolve(deepCopy(filteredEmails));\n      } catch (err) {\n        console.error('[Mail Api]: ', err);\n        reject(new Error('Internal server error'));\n      }\n    });\n  }\n\n  getEmail(emailId) {\n    return new Promise((resolve, reject) => {\n      try {\n        // Find the mail\n        const email = emails.find((_mail) => _mail.id === emailId);\n\n        if (!email) {\n          reject(new Error('Email not found'));\n          return;\n        }\n\n        resolve(deepCopy(email));\n      } catch (err) {\n        console.error('[Mail Api]: ', err);\n        reject(new Error('Internal server error'));\n      }\n    });\n  }\n}\n\nexport const mailApi = new MailApi();\n"]},"metadata":{},"sourceType":"module"}