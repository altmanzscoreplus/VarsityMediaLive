{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCard.js\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, AvatarGroup, Box, Card, CardContent, CardMedia, Typography } from '@material-ui/core';\nimport CheckIcon from '../../../icons/Check';\nimport ChatAltIcon from '../../../icons/ChatAlt';\nimport DocumentTextIcon from '../../../icons/DocumentText';\nimport EyeIcon from '../../../icons/Eye';\nimport { useSelector } from '../../../store';\nimport KanbanCardModal from './KanbanCardModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cardSelector = (state, cardId) => {\n  const {\n    cards,\n    members\n  } = state.kanban;\n  const card = cards.byId[cardId];\n  return { ...card,\n    members: card.memberIds.map(memberId => members.byId[memberId])\n  };\n};\n\nconst KanbanCard = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    cardId,\n    dragging,\n    column,\n    ...other\n  } = props;\n  const card = useSelector(state => cardSelector(state, cardId));\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: ref,\n    sx: {\n      outline: 'none',\n      py: 1\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      onClick: handleOpen,\n      raised: dragging,\n      sx: { ...(dragging && {\n          backgroundColor: 'background.paper'\n        }),\n        '&:hover': {\n          backgroundColor: 'background.default'\n        }\n      },\n      variant: dragging ? 'elevation' : 'outlined',\n      children: [card.cover && /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: card.cover,\n        sx: {\n          height: 200\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"subtitle2\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex',\n            mt: 2,\n            '& svg:not(:first-of-type)': {\n              ml: 2\n            }\n          },\n          children: [card.isSubscribed && /*#__PURE__*/_jsxDEV(EyeIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 35\n          }, this), card.attachments.length > 0 && /*#__PURE__*/_jsxDEV(DocumentTextIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 45\n          }, this), card.checklists.length > 0 && /*#__PURE__*/_jsxDEV(CheckIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 44\n          }, this), card.comments.length > 0 && /*#__PURE__*/_jsxDEV(ChatAltIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), card.members.length > 0 && /*#__PURE__*/_jsxDEV(AvatarGroup, {\n            max: 5,\n            children: card.members.map(member => /*#__PURE__*/_jsxDEV(Avatar, {\n              src: member.avatar\n            }, member.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanCardModal, {\n      card: card,\n      column: column,\n      onClose: handleClose,\n      open: open\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}, \"CYxtfFl8FOyPYgU8t8O3kE+pIOA=\", false, function () {\n  return [useSelector];\n}));\n_c2 = KanbanCard;\nKanbanCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  dragging: PropTypes.bool,\n  index: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  style: PropTypes.object\n};\nKanbanCard.defaultProps = {\n  dragging: false\n};\nexport default KanbanCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KanbanCard$forwardRef\");\n$RefreshReg$(_c2, \"KanbanCard\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCard.js"],"names":["forwardRef","useState","PropTypes","Avatar","AvatarGroup","Box","Card","CardContent","CardMedia","Typography","CheckIcon","ChatAltIcon","DocumentTextIcon","EyeIcon","useSelector","KanbanCardModal","cardSelector","state","cardId","cards","members","kanban","card","byId","memberIds","map","memberId","KanbanCard","props","ref","dragging","column","other","open","setOpen","handleOpen","handleClose","outline","py","backgroundColor","cover","height","name","alignItems","display","mt","ml","isSubscribed","attachments","length","checklists","comments","flexGrow","member","avatar","id","propTypes","string","isRequired","bool","index","number","object","style","defaultProps"],"mappings":"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","sourcesContent":["import { forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography\n} from '@material-ui/core';\nimport CheckIcon from '../../../icons/Check';\nimport ChatAltIcon from '../../../icons/ChatAlt';\nimport DocumentTextIcon from '../../../icons/DocumentText';\nimport EyeIcon from '../../../icons/Eye';\nimport { useSelector } from '../../../store';\nimport KanbanCardModal from './KanbanCardModal';\n\nconst cardSelector = (state, cardId) => {\n  const { cards, members } = state.kanban;\n  const card = cards.byId[cardId];\n\n  return {\n    ...card,\n    members: card.memberIds.map((memberId) => members.byId[memberId])\n  };\n};\n\nconst KanbanCard = forwardRef((props, ref) => {\n  const { cardId, dragging, column, ...other } = props;\n  const card = useSelector((state) => cardSelector(state, cardId));\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box\n      ref={ref}\n      sx={{\n        outline: 'none',\n        py: 1\n      }}\n      {...other}\n    >\n      <Card\n        onClick={handleOpen}\n        raised={dragging}\n        sx={{\n          ...(dragging && {\n            backgroundColor: 'background.paper'\n          }),\n          '&:hover': {\n            backgroundColor: 'background.default'\n          }\n        }}\n        variant={dragging ? 'elevation' : 'outlined'}\n      >\n        {card.cover && (\n          <CardMedia\n            image={card.cover}\n            sx={{ height: 200 }}\n          />\n        )}\n        <CardContent>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            {card.name}\n          </Typography>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              mt: 2,\n              '& svg:not(:first-of-type)': {\n                ml: 2\n              }\n            }}\n          >\n            {card.isSubscribed && <EyeIcon fontSize=\"small\" />}\n            {card.attachments.length > 0 && <DocumentTextIcon fontSize=\"small\" />}\n            {card.checklists.length > 0 && <CheckIcon fontSize=\"small\" />}\n            {card.comments.length > 0 && <ChatAltIcon fontSize=\"small\" />}\n            <Box sx={{ flexGrow: 1 }} />\n            {card.members.length > 0 && (\n              <AvatarGroup max={5}>\n                {card.members.map((member) => (\n                  <Avatar\n                    key={member.id}\n                    src={member.avatar}\n                  />\n                ))}\n              </AvatarGroup>\n            )}\n          </Box>\n        </CardContent>\n      </Card>\n      <KanbanCardModal\n        card={card}\n        column={column}\n        onClose={handleClose}\n        open={open}\n      />\n    </Box>\n  );\n});\n\nKanbanCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  dragging: PropTypes.bool,\n  index: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  style: PropTypes.object\n};\n\nKanbanCard.defaultProps = {\n  dragging: false\n};\n\nexport default KanbanCard;\n"]},"metadata":{},"sourceType":"module"}