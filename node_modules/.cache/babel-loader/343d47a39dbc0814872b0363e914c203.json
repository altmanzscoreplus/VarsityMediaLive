{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/widgets/charts/Chart7.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader, Checkbox, Tooltip, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport InformationCircleIcon from '../../../icons/InformationCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  series: [{\n    color: '#4CAF50',\n    data: [3350, 1840, 2254, 5780, 9349, 5241, 2770, 2051, 3764, 2385, 5912, 8323],\n    name: 'Organic'\n  }, {\n    color: '#FF9800',\n    data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\n    name: 'Referral'\n  }, {\n    color: '#F44336',\n    data: [100, 122, 50, 300, 250, 400, 312, 200, 10, 60, 90, 400],\n    name: 'Social Media'\n  }],\n  xaxis: {\n    dataPoints: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan', '08 Jan', '09 Jan', '10 Jan', '11 Jan', '12 Jan']\n  }\n};\n\nconst Chart7 = () => {\n  _s();\n\n  const theme = useTheme();\n  const [selectedSeries, setSelectedSeries] = useState(['Organic', 'Referral', 'Social Media']);\n\n  const handleChange = (event, name) => {\n    if (!event.target.checked) {\n      setSelectedSeries(selectedSeries.filter(item => item !== name));\n    } else {\n      setSelectedSeries([...selectedSeries, name]);\n    }\n  };\n\n  const chartSeries = data.series.filter(item => selectedSeries.includes(item.name));\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: chartSeries.map(item => item.color),\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      yaxis: {\n        lines: {\n          show: false\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    markers: {\n      hover: {\n        size: undefined,\n        sizeOffset: 2\n      },\n      radius: 2,\n      shape: 'circle',\n      size: 4,\n      strokeWidth: 0\n    },\n    stroke: {\n      curve: 'smooth',\n      lineCap: 'butt',\n      width: 3\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: data.xaxis.dataPoints,\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: [{\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }, {\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      },\n      opposite: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: 'background.default',\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        disableTypography: true,\n        title: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"h6\",\n            children: \"Traffic Sources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Chart 7 Source by channel\",\n            children: /*#__PURE__*/_jsxDEV(InformationCircleIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex',\n            flexWrap: 'wrap'\n          },\n          children: data.series.map(item => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              mr: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: selectedSeries.some(visibleItem => visibleItem === item.name),\n              color: \"primary\",\n              onChange: event => handleChange(event, item.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                backgroundColor: item.color,\n                borderRadius: '50%',\n                height: 8,\n                ml: 1,\n                mr: 2,\n                width: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              variant: \"subtitle2\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, item.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          height: \"350\",\n          options: chartOptions,\n          series: chartSeries,\n          type: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart7, \"fqFdKdh9pdNYXXi0UOsC2TeXImM=\", false, function () {\n  return [useTheme];\n});\n\n_c = Chart7;\nexport default Chart7;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart7\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/widgets/charts/Chart7.js"],"names":["useState","Chart","Box","Card","CardContent","CardHeader","Checkbox","Tooltip","Typography","useTheme","InformationCircleIcon","data","series","color","name","xaxis","dataPoints","Chart7","theme","selectedSeries","setSelectedSeries","handleChange","event","target","checked","filter","item","chartSeries","includes","chartOptions","chart","background","stacked","toolbar","show","colors","map","dataLabels","enabled","grid","borderColor","palette","divider","yaxis","lines","legend","markers","hover","size","undefined","sizeOffset","radius","shape","strokeWidth","stroke","curve","lineCap","width","mode","axisBorder","axisTicks","categories","labels","style","text","secondary","opposite","backgroundColor","p","alignItems","display","justifyContent","flexWrap","mr","some","visibleItem","borderRadius","height","ml"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport InformationCircleIcon from '../../../icons/InformationCircle';\n\nconst data = {\n  series: [\n    {\n      color: '#4CAF50',\n      data: [\n        3350,\n        1840,\n        2254,\n        5780,\n        9349,\n        5241,\n        2770,\n        2051,\n        3764,\n        2385,\n        5912,\n        8323\n      ],\n      name: 'Organic'\n    },\n    {\n      color: '#FF9800',\n      data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\n      name: 'Referral'\n    },\n    {\n      color: '#F44336',\n      data: [100, 122, 50, 300, 250, 400, 312, 200, 10, 60, 90, 400],\n      name: 'Social Media'\n    }\n  ],\n  xaxis: {\n    dataPoints: [\n      '01 Jan',\n      '02 Jan',\n      '03 Jan',\n      '04 Jan',\n      '05 Jan',\n      '06 Jan',\n      '07 Jan',\n      '08 Jan',\n      '09 Jan',\n      '10 Jan',\n      '11 Jan',\n      '12 Jan'\n    ]\n  }\n};\n\nconst Chart7 = () => {\n  const theme = useTheme();\n  const [selectedSeries, setSelectedSeries] = useState([\n    'Organic',\n    'Referral',\n    'Social Media'\n  ]);\n\n  const handleChange = (event, name) => {\n    if (!event.target.checked) {\n      setSelectedSeries(selectedSeries.filter((item) => item !== name));\n    } else {\n      setSelectedSeries([...selectedSeries, name]);\n    }\n  };\n\n  const chartSeries = data.series.filter((item) => selectedSeries.includes(item.name));\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: chartSeries.map((item) => item.color),\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      yaxis: {\n        lines: {\n          show: false\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    markers: {\n      hover: {\n        size: undefined,\n        sizeOffset: 2\n      },\n      radius: 2,\n      shape: 'circle',\n      size: 4,\n      strokeWidth: 0\n    },\n    stroke: {\n      curve: 'smooth',\n      lineCap: 'butt',\n      width: 3\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: data.xaxis.dataPoints,\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: [\n      {\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      {\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        },\n        opposite: true\n      }\n    ]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          disableTypography\n          title={(\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h6\"\n              >\n                Traffic Sources\n              </Typography>\n              <Tooltip title=\"Chart 7 Source by channel\">\n                <InformationCircleIcon fontSize=\"small\" />\n              </Tooltip>\n            </Box>\n          )}\n        />\n        <CardContent>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              flexWrap: 'wrap'\n            }}\n          >\n            {data.series.map((item) => (\n              <Box\n                key={item.name}\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  mr: 2\n                }}\n              >\n                <Checkbox\n                  checked={selectedSeries.some((visibleItem) => visibleItem === item.name)}\n                  color=\"primary\"\n                  onChange={(event) => handleChange(event, item.name)}\n                />\n                <Box\n                  sx={{\n                    backgroundColor: item.color,\n                    borderRadius: '50%',\n                    height: 8,\n                    ml: 1,\n                    mr: 2,\n                    width: 8\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {item.name}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n          <Chart\n            height=\"350\"\n            options={chartOptions}\n            series={chartSeries}\n            type=\"line\"\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart7;\n"]},"metadata":{},"sourceType":"module"}