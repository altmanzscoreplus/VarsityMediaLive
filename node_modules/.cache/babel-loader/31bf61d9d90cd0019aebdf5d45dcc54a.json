{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/ContactsPopover.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { Avatar, Box, IconButton, Link, List, ListItem, ListItemAvatar, ListItemText, Popover, Tooltip, Typography } from '@material-ui/core';\nimport UsersIcon from '../../icons/Users';\nimport { getContacts } from '../../slices/chat';\nimport { useDispatch, useSelector } from '../../store';\nimport StatusIndicator from '../StatusIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactsPopover = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const anchorRef = useRef(null);\n  const {\n    contacts\n  } = useSelector(state => state.chat);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    dispatch(getContacts());\n  }, []);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Contacts\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: handleOpen,\n        ref: anchorRef,\n        children: /*#__PURE__*/_jsxDEV(UsersIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      anchorEl: anchorRef.current,\n      anchorOrigin: {\n        horizontal: 'center',\n        vertical: 'bottom'\n      },\n      onClose: handleClose,\n      open: open,\n      PaperProps: {\n        sx: {\n          p: 2,\n          width: 320\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        variant: \"h6\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          children: contacts.allIds.map(contactId => {\n            const contact = contacts.byId[contactId];\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              disableGutters: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: contact.avatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(Link, {\n                  color: \"textPrimary\",\n                  display: \"block\",\n                  noWrap: true,\n                  underline: \"none\",\n                  variant: \"subtitle2\",\n                  children: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), contact.isActive ? /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                size: \"small\",\n                status: \"online\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                noWrap: true,\n                variant: \"caption\",\n                children: [formatDistanceToNowStrict(contact.lastActivity), ' ', \"ago\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this)]\n            }, contact.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContactsPopover, \"WSsZrbH8i1QEfbICpTkmanINgIY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContactsPopover;\nexport default ContactsPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsPopover\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/ContactsPopover.js"],"names":["useRef","useState","useEffect","formatDistanceToNowStrict","Avatar","Box","IconButton","Link","List","ListItem","ListItemAvatar","ListItemText","Popover","Tooltip","Typography","UsersIcon","getContacts","useDispatch","useSelector","StatusIndicator","ContactsPopover","dispatch","anchorRef","contacts","state","chat","open","setOpen","handleOpen","handleClose","current","horizontal","vertical","sx","p","width","mt","allIds","map","contactId","contact","byId","avatar","name","isActive","lastActivity","id"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from 'react';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport {\n  Avatar,\n  Box,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popover,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport UsersIcon from '../../icons/Users';\nimport { getContacts } from '../../slices/chat';\nimport { useDispatch, useSelector } from '../../store';\nimport StatusIndicator from '../StatusIndicator';\n\nconst ContactsPopover = () => {\n  const dispatch = useDispatch();\n  const anchorRef = useRef(null);\n  const { contacts } = useSelector((state) => state.chat);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, []);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Contacts\">\n        <IconButton\n          color=\"inherit\"\n          onClick={handleOpen}\n          ref={anchorRef}\n        >\n          <UsersIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Popover\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'center',\n          vertical: 'bottom'\n        }}\n        onClose={handleClose}\n        open={open}\n        PaperProps={{\n          sx: {\n            p: 2,\n            width: 320\n          }\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h6\"\n        >\n          Contacts\n        </Typography>\n        <Box sx={{ mt: 2 }}>\n          <List disablePadding>\n            {contacts.allIds.map((contactId) => {\n              const contact = contacts.byId[contactId];\n\n              return (\n                <ListItem\n                  disableGutters\n                  key={contact.id}\n                >\n                  <ListItemAvatar>\n                    <Avatar src={contact.avatar} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    disableTypography\n                    primary={(\n                      <Link\n                        color=\"textPrimary\"\n                        display=\"block\"\n                        noWrap\n                        underline=\"none\"\n                        variant=\"subtitle2\"\n                      >\n                        {contact.name}\n                      </Link>\n                    )}\n                  />\n                  {contact.isActive\n                    ? (\n                      <StatusIndicator\n                        size=\"small\"\n                        status=\"online\"\n                      />\n                    )\n                    : (\n                      <Typography\n                        color=\"textSecondary\"\n                        noWrap\n                        variant=\"caption\"\n                      >\n                        {formatDistanceToNowStrict(contact.lastActivity)}\n                        {' '}\n                        ago\n                      </Typography>\n                    )}\n                </ListItem>\n              );\n            })}\n          </List>\n        </Box>\n      </Popover>\n    </>\n  );\n};\n\nexport default ContactsPopover;\n"]},"metadata":{},"sourceType":"module"}