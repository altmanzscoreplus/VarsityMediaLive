{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/event/EventCard.js\";\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { Box, Card, CardActionArea, CardHeader, CardMedia, IconButton, Tooltip, Typography } from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ClockIcon from '../../icons/Clock';\nimport ShareIcon from '../../icons/Share';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventCard = props => {\n  const {\n    event,\n    onClick,\n    ...other\n  } = props; // Set placeholder values temporarily\n\n  event.likes = 28;\n  event.thumbnail = '/static/mock-images/covers/cover_5.jpeg';\n  const updatedAtUnix = Math.floor(new Date(event.updatedAt).getTime());\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...other,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        subheader: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex',\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(ClockIcon, {\n            fontSize: \"small\",\n            sx: {\n              color: 'text.secondary'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            sx: {\n              ml: '6px'\n            },\n            variant: \"caption\",\n            children: [formatDistanceToNowStrict(updatedAtUnix), ' ', \"ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this),\n        title: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          px: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"body1\",\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            onClick: () => onClick(event),\n            children: /*#__PURE__*/_jsxDEV(CardMedia, {\n              image: event.thumbnail,\n              sx: {\n                backgroundPosition: 'top',\n                height: 200\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Unlike\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              sx: {\n                color: red['600']\n              },\n              children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"subtitle2\",\n            children: event.likes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(ShareIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EventCard;\nEventCard.propTypes = {\n  event: PropTypes.object.isRequired,\n  onClick: PropTypes.func\n};\nexport default EventCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/event/EventCard.js"],"names":["PropTypes","formatDistanceToNowStrict","Box","Card","CardActionArea","CardHeader","CardMedia","IconButton","Tooltip","Typography","red","FavoriteIcon","ClockIcon","ShareIcon","EventCard","props","event","onClick","other","likes","thumbnail","updatedAtUnix","Math","floor","Date","updatedAt","getTime","alignItems","display","mt","color","ml","title","px","description","backgroundPosition","height","flexGrow","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  CardHeader,\n  CardMedia,\n  IconButton,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ClockIcon from '../../icons/Clock';\nimport ShareIcon from '../../icons/Share';\n\nconst EventCard = (props) => {\n  const {\n    event,\n    onClick,\n    ...other\n  } = props;\n  \n  // Set placeholder values temporarily\n  event.likes = 28;\n  event.thumbnail = '/static/mock-images/covers/cover_5.jpeg';\n\n  const updatedAtUnix = Math.floor(new Date(event.updatedAt).getTime());\n\n  return (\n    <div {...other}>\n      <Card>\n        <CardHeader\n          subheader={(\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                mt: 1\n              }}\n            >\n              <ClockIcon\n                fontSize=\"small\"\n                sx={{ color: 'text.secondary' }}\n              />\n              <Typography\n                color=\"textSecondary\"\n                sx={{ ml: '6px' }}\n                variant=\"caption\"\n              >\n                {formatDistanceToNowStrict(updatedAtUnix)}\n                {' '}\n                ago\n              </Typography>\n            </Box>\n          )}\n          title={event.title}\n        />\n        <Box\n          sx={{\n            px: 2\n          }}\n        >\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            {event.description}\n          </Typography>\n          <Box sx={{ mt: 2 }}>\n            <CardActionArea\n              onClick={() => onClick(event)}>\n              <CardMedia\n                image={event.thumbnail}\n                sx={{\n                  backgroundPosition: 'top',\n                  height: 200\n                }}\n              />\n            </CardActionArea>\n          </Box>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              mt: 2\n            }}\n          >\n            <Tooltip title=\"Unlike\">\n              <IconButton sx={{ color: red['600'] }}>\n                <FavoriteIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"subtitle2\"\n            >\n              {event.likes}\n            </Typography>\n            <Box sx={{ flexGrow: 1 }} />\n            <IconButton>\n              <ShareIcon fontSize=\"small\" />\n            </IconButton>\n          </Box>\n        </Box>\n      </Card>\n    </div>\n  );\n};\n\nEventCard.propTypes = {\n  event: PropTypes.object.isRequired,\n  onClick: PropTypes.func\n};\n\nexport default EventCard;\n"]},"metadata":{},"sourceType":"module"}