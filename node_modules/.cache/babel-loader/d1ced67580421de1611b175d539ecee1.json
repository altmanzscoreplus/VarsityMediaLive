{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/pages/dashboard/Kanban.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport toast from 'react-hot-toast';\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { KanbanColumn, KanbanColumnAdd } from '../../components/dashboard/kanban';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport gtm from '../../lib/gtm';\nimport { getBoard, moveCard } from '../../slices/kanban';\nimport { useDispatch, useSelector } from '../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Kanban = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    columns\n  } = useSelector(state => state.kanban);\n  useEffect(() => {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  useEffect(() => {\n    dispatch(getBoard());\n  }, []);\n\n  const handleDragEnd = async ({\n    source,\n    destination,\n    draggableId\n  }) => {\n    try {\n      // Dropped outside the column\n      if (!destination) {\n        return;\n      } // Card has not been moved\n\n\n      if (source.droppableId === destination.droppableId && source.index === destination.index) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        // Moved to the same column on different position\n        await dispatch(moveCard(draggableId, destination.index));\n      } else {\n        // Moved to another column\n        await dispatch(moveCard(draggableId, destination.index, destination.droppableId));\n      }\n\n      toast.success('Card moved!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Dashboard: Kanban | Material Kit Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"h5\",\n          children: \"Kanban\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          \"aria-label\": \"breadcrumb\",\n          separator: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 24\n          }, this),\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            color: \"textPrimary\",\n            component: RouterLink,\n            to: \"/dashboard\",\n            variant: \"subtitle2\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"subtitle2\",\n            children: \"Kanban\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexGrow: 1,\n            flexShrink: 1,\n            overflowX: 'auto',\n            overflowY: 'hidden'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              px: 1,\n              py: 3\n            },\n            children: [columns.allIds.map(columnId => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n              columnId: columnId\n            }, columnId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(KanbanColumnAdd, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Kanban, \"7YygUrvaOHadoiCL0ihsoJO+bAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/pages/dashboard/Kanban.js"],"names":["useEffect","Link","RouterLink","Helmet","DragDropContext","toast","Box","Breadcrumbs","Typography","KanbanColumn","KanbanColumnAdd","ChevronRightIcon","gtm","getBoard","moveCard","useDispatch","useSelector","Kanban","dispatch","columns","state","kanban","push","event","handleDragEnd","source","destination","draggableId","droppableId","index","success","err","console","error","backgroundColor","display","flexDirection","height","overflow","p","mt","flexGrow","flexShrink","overflowX","overflowY","px","py","allIds","map","columnId"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport toast from 'react-hot-toast';\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { KanbanColumn, KanbanColumnAdd } from '../../components/dashboard/kanban';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport gtm from '../../lib/gtm';\nimport { getBoard, moveCard } from '../../slices/kanban';\nimport { useDispatch, useSelector } from '../../store';\n\nconst Kanban = () => {\n  const dispatch = useDispatch();\n  const { columns } = useSelector((state) => state.kanban);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, []);\n\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\n    try {\n      // Dropped outside the column\n      if (!destination) {\n        return;\n      }\n\n      // Card has not been moved\n      if (source.droppableId === destination.droppableId\n        && source.index === destination.index) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        // Moved to the same column on different position\n        await dispatch(moveCard(draggableId, destination.index));\n      } else {\n        // Moved to another column\n        await dispatch(moveCard(draggableId, destination.index, destination.droppableId));\n      }\n\n      toast.success('Card moved!');\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Kanban | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          overflow: 'hidden'\n        }}\n      >\n        <Box sx={{ p: 3 }}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h5\"\n          >\n            Kanban\n          </Typography>\n          <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            separator={<ChevronRightIcon fontSize=\"small\" />}\n            sx={{ mt: 1 }}\n          >\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"/dashboard\"\n              variant=\"subtitle2\"\n            >\n              Dashboard\n            </Link>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"subtitle2\"\n            >\n              Kanban\n            </Typography>\n          </Breadcrumbs>\n        </Box>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexGrow: 1,\n              flexShrink: 1,\n              overflowX: 'auto',\n              overflowY: 'hidden'\n            }}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                px: 1,\n                py: 3\n              }}\n            >\n              {columns.allIds.map((columnId) => (\n                <KanbanColumn\n                  columnId={columnId}\n                  key={columnId}\n                />\n              ))}\n              <KanbanColumnAdd />\n            </Box>\n          </Box>\n        </DragDropContext>\n      </Box>\n    </>\n  );\n};\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}