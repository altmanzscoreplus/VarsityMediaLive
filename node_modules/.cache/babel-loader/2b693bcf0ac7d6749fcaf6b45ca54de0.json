{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCommentAdd.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Avatar, Box, TextField } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport { addComment } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KanbanCommentAdd = props => {\n  _s();\n\n  const {\n    cardId,\n    ...other\n  } = props;\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useAuth();\n  const [message, setMessage] = useState('');\n\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = async event => {\n    try {\n      if (event.code === 'ENTER' && message) {\n        await dispatch(addComment(cardId, message));\n        setMessage('');\n        toast.success('Comment added!');\n      }\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      alignItems: 'center',\n      display: 'flex'\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: user.avatar,\n      sx: {\n        mr: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      onChange: handleChange,\n      onKeyUp: handleKeyUp,\n      placeholder: \"Write a comment...\",\n      size: \"small\",\n      value: message,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KanbanCommentAdd, \"3mwl5FegPtNMslBlEYf3yso1zaY=\", false, function () {\n  return [useDispatch, useAuth];\n});\n\n_c = KanbanCommentAdd;\nKanbanCommentAdd.propTypes = {\n  cardId: PropTypes.string.isRequired\n};\nexport default KanbanCommentAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanCommentAdd\");","map":{"version":3,"sources":["/home/ec2-user/environment/VarsityMediaLive07042021/src/components/dashboard/kanban/KanbanCommentAdd.js"],"names":["useState","PropTypes","toast","Avatar","Box","TextField","useAuth","addComment","useDispatch","KanbanCommentAdd","props","cardId","other","dispatch","user","message","setMessage","handleChange","event","target","value","handleKeyUp","code","success","err","console","error","alignItems","display","avatar","mr","propTypes","string","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,mBAAvC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM;AAAEC,IAAAA,MAAF;AAAU,OAAGC;AAAb,MAAuBF,KAA7B;AACA,QAAMG,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWR,OAAO,EAAxB;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMiB,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAOH,KAAP,IAAiB;AACnC,QAAI;AACF,UAAIA,KAAK,CAACI,IAAN,KAAe,OAAf,IAA0BP,OAA9B,EAAuC;AACrC,cAAMF,QAAQ,CAACN,UAAU,CAACI,MAAD,EAASI,OAAT,CAAX,CAAd;AACAC,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAd,QAAAA,KAAK,CAACqB,OAAN,CAAc,gBAAd;AACD;AACF,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAtB,MAAAA,KAAK,CAACwB,KAAN,CAAY,uBAAZ;AACD;AACF,GAXD;;AAaA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,UAAU,EAAE,QADV;AAEFC,MAAAA,OAAO,EAAE;AAFP,KADN;AAAA,OAKMhB,KALN;AAAA,4BAOE,QAAC,MAAD;AACE,MAAA,GAAG,EAAEE,IAAI,CAACe,MADZ;AAEE,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN;AAFN;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,QAAQ,EAAEb,YAFZ;AAGE,MAAA,OAAO,EAAEI,WAHX;AAIE,MAAA,WAAW,EAAC,oBAJd;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAEN,OANT;AAOE,MAAA,OAAO,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA9CD;;GAAMN,gB;UAEaD,W,EACAF,O;;;KAHbG,gB;AAgDNA,gBAAgB,CAACsB,SAAjB,GAA6B;AAC3BpB,EAAAA,MAAM,EAAEV,SAAS,CAAC+B,MAAV,CAAiBC;AADE,CAA7B;AAIA,eAAexB,gBAAf","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Avatar, Box, TextField } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport { addComment } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanCommentAdd = (props) => {\n  const { cardId, ...other } = props;\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const [message, setMessage] = useState('');\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = async (event) => {\n    try {\n      if (event.code === 'ENTER' && message) {\n        await dispatch(addComment(cardId, message));\n        setMessage('');\n        toast.success('Comment added!');\n      }\n    } catch (err) {\n      console.error(err);\n      toast.error('Something went wrong!');\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex'\n      }}\n      {...other}\n    >\n      <Avatar\n        src={user.avatar}\n        sx={{ mr: 2 }}\n      />\n      <TextField\n        fullWidth\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n        placeholder=\"Write a comment...\"\n        size=\"small\"\n        value={message}\n        variant=\"outlined\"\n      />\n    </Box>\n  );\n};\n\nKanbanCommentAdd.propTypes = {\n  cardId: PropTypes.string.isRequired\n};\n\nexport default KanbanCommentAdd;\n"]},"metadata":{},"sourceType":"module"}